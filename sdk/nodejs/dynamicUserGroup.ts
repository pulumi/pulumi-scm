// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.DynamicUserGroup("example", {});
 * ```
 */
export class DynamicUserGroup extends pulumi.CustomResource {
    /**
     * Get an existing DynamicUserGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DynamicUserGroupState, opts?: pulumi.CustomResourceOptions): DynamicUserGroup {
        return new DynamicUserGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/dynamicUserGroup:DynamicUserGroup';

    /**
     * Returns true if the given object is an instance of DynamicUserGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DynamicUserGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DynamicUserGroup.__pulumiType;
    }

    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The Device param.
     */
    declare public readonly device: pulumi.Output<string | undefined>;
    /**
     * tag-based filter. String length must not exceed 2047 characters.
     */
    declare public readonly filter: pulumi.Output<string>;
    /**
     * The Folder param.
     */
    declare public readonly folder: pulumi.Output<string | undefined>;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The Snippet param.
     */
    declare public readonly snippet: pulumi.Output<string | undefined>;
    /**
     * Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    declare public /*out*/ readonly tfid: pulumi.Output<string>;

    /**
     * Create a DynamicUserGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DynamicUserGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DynamicUserGroupArgs | DynamicUserGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DynamicUserGroupState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["device"] = state?.device;
            resourceInputs["filter"] = state?.filter;
            resourceInputs["folder"] = state?.folder;
            resourceInputs["name"] = state?.name;
            resourceInputs["snippet"] = state?.snippet;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tfid"] = state?.tfid;
        } else {
            const args = argsOrState as DynamicUserGroupArgs | undefined;
            if (args?.filter === undefined && !opts.urn) {
                throw new Error("Missing required property 'filter'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["device"] = args?.device;
            resourceInputs["filter"] = args?.filter;
            resourceInputs["folder"] = args?.folder;
            resourceInputs["name"] = args?.name;
            resourceInputs["snippet"] = args?.snippet;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DynamicUserGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DynamicUserGroup resources.
 */
export interface DynamicUserGroupState {
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * tag-based filter. String length must not exceed 2047 characters.
     */
    filter?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    /**
     * Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    tfid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DynamicUserGroup resource.
 */
export interface DynamicUserGroupArgs {
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * tag-based filter. String length must not exceed 2047 characters.
     */
    filter: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    /**
     * Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
