// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = scm.getDevice({
 *     serial: "12345",
 * });
 * ```
 */
export function getDevice(args: GetDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getDevice:getDevice", {
        "serial": args.serial,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceArgs {
    /**
     * The Serial param.
     */
    serial: string;
}

/**
 * A collection of values returned by getDevice.
 */
export interface GetDeviceResult {
    /**
     * The AntiVirusVersion param.
     */
    readonly antiVirusVersion: string;
    /**
     * The AppReleaseDate param.
     */
    readonly appReleaseDate: string;
    /**
     * The AppVersion param.
     */
    readonly appVersion: string;
    /**
     * The AvReleaseDate param.
     */
    readonly avReleaseDate: string;
    /**
     * The AvailableLicensess param.
     */
    readonly availableLicensesses: outputs.GetDeviceAvailableLicensess[];
    /**
     * The ConnectedSince param.
     */
    readonly connectedSince: string;
    /**
     * The DevCertDetail param.
     */
    readonly devCertDetail: string;
    /**
     * The DevCertExpiryDate param.
     */
    readonly devCertExpiryDate: string;
    /**
     * The Family param.
     */
    readonly family: string;
    /**
     * The GpClientVerion param.
     */
    readonly gpClientVerion: string;
    /**
     * The GpDataVersion param.
     */
    readonly gpDataVersion: string;
    /**
     * The HaPeerSerial param.
     */
    readonly haPeerSerial: string;
    /**
     * The HaPeerState param.
     */
    readonly haPeerState: string;
    /**
     * The HaState param.
     */
    readonly haState: string;
    /**
     * The Hostname param.
     */
    readonly hostname: string;
    /**
     * The Id param.
     */
    readonly id: string;
    /**
     * The InstalledLicenses param.
     */
    readonly installedLicenses: outputs.GetDeviceInstalledLicense[];
    /**
     * The IotReleaseDate param.
     */
    readonly iotReleaseDate: string;
    /**
     * The IotVersion param.
     */
    readonly iotVersion: string;
    /**
     * The IpAddress param.
     */
    readonly ipAddress: string;
    /**
     * The IpV6Address param.
     */
    readonly ipV6Address: string;
    /**
     * The IsConnected param.
     */
    readonly isConnected: boolean;
    /**
     * The LicenseMatch param.
     */
    readonly licenseMatch: boolean;
    /**
     * The LogDbVersion param.
     */
    readonly logDbVersion: string;
    /**
     * The MacAddress param.
     */
    readonly macAddress: string;
    /**
     * The Model param.
     */
    readonly model: string;
    /**
     * The Serial param.
     */
    readonly serial: string;
    /**
     * The SoftwareVersion param.
     */
    readonly softwareVersion: string;
    readonly tfid: string;
    /**
     * The ThreatReleaseDate param.
     */
    readonly threatReleaseDate: string;
    /**
     * The ThreatVersion param.
     */
    readonly threatVersion: string;
    /**
     * The Uptime param.
     */
    readonly uptime: string;
    /**
     * The UrlDbType param.
     */
    readonly urlDbType: string;
    /**
     * The UrlDbVer param.
     */
    readonly urlDbVer: string;
    /**
     * The VmState param.
     */
    readonly vmState: string;
    /**
     * The WfReleaseDate param.
     */
    readonly wfReleaseDate: string;
    /**
     * The WfVer param.
     */
    readonly wfVer: string;
}
/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = scm.getDevice({
 *     serial: "12345",
 * });
 * ```
 */
export function getDeviceOutput(args: GetDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceResult> {
    return pulumi.output(args).apply((a: any) => getDevice(a, opts))
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceOutputArgs {
    /**
     * The Serial param.
     */
    serial: pulumi.Input<string>;
}
