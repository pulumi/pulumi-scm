// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.LdapServerProfile("example", {});
 * ```
 */
export class LdapServerProfile extends pulumi.CustomResource {
    /**
     * Get an existing LdapServerProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LdapServerProfileState, opts?: pulumi.CustomResourceOptions): LdapServerProfile {
        return new LdapServerProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/ldapServerProfile:LdapServerProfile';

    /**
     * Returns true if the given object is an instance of LdapServerProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LdapServerProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LdapServerProfile.__pulumiType;
    }

    /**
     * The Base param. String length must not exceed 255 characters.
     */
    public readonly base!: pulumi.Output<string | undefined>;
    /**
     * The BindDn param. String length must not exceed 255 characters.
     */
    public readonly bindDn!: pulumi.Output<string | undefined>;
    /**
     * The BindPassword param. String length must not exceed 121 characters.
     */
    public readonly bindPassword!: pulumi.Output<string | undefined>;
    /**
     * The BindTimelimit param.
     */
    public readonly bindTimelimit!: pulumi.Output<string | undefined>;
    /**
     * The Device param.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * The Folder param.
     */
    public readonly folder!: pulumi.Output<string | undefined>;
    /**
     * The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
     */
    public readonly ldapType!: pulumi.Output<string | undefined>;
    /**
     * The RetryInterval param.
     */
    public readonly retryInterval!: pulumi.Output<number | undefined>;
    /**
     * The Servers param.
     */
    public readonly servers!: pulumi.Output<outputs.LdapServerProfileServer[]>;
    /**
     * The Snippet param.
     */
    public readonly snippet!: pulumi.Output<string | undefined>;
    /**
     * The Ssl param.
     */
    public readonly ssl!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly tfid!: pulumi.Output<string>;
    /**
     * The Timelimit param.
     */
    public readonly timelimit!: pulumi.Output<number | undefined>;
    /**
     * The VerifyServerCertificate param.
     */
    public readonly verifyServerCertificate!: pulumi.Output<boolean | undefined>;

    /**
     * Create a LdapServerProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LdapServerProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LdapServerProfileArgs | LdapServerProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LdapServerProfileState | undefined;
            resourceInputs["base"] = state ? state.base : undefined;
            resourceInputs["bindDn"] = state ? state.bindDn : undefined;
            resourceInputs["bindPassword"] = state ? state.bindPassword : undefined;
            resourceInputs["bindTimelimit"] = state ? state.bindTimelimit : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["folder"] = state ? state.folder : undefined;
            resourceInputs["ldapType"] = state ? state.ldapType : undefined;
            resourceInputs["retryInterval"] = state ? state.retryInterval : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["snippet"] = state ? state.snippet : undefined;
            resourceInputs["ssl"] = state ? state.ssl : undefined;
            resourceInputs["tfid"] = state ? state.tfid : undefined;
            resourceInputs["timelimit"] = state ? state.timelimit : undefined;
            resourceInputs["verifyServerCertificate"] = state ? state.verifyServerCertificate : undefined;
        } else {
            const args = argsOrState as LdapServerProfileArgs | undefined;
            if ((!args || args.servers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servers'");
            }
            resourceInputs["base"] = args ? args.base : undefined;
            resourceInputs["bindDn"] = args ? args.bindDn : undefined;
            resourceInputs["bindPassword"] = args?.bindPassword ? pulumi.secret(args.bindPassword) : undefined;
            resourceInputs["bindTimelimit"] = args ? args.bindTimelimit : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["folder"] = args ? args.folder : undefined;
            resourceInputs["ldapType"] = args ? args.ldapType : undefined;
            resourceInputs["retryInterval"] = args ? args.retryInterval : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["snippet"] = args ? args.snippet : undefined;
            resourceInputs["ssl"] = args ? args.ssl : undefined;
            resourceInputs["timelimit"] = args ? args.timelimit : undefined;
            resourceInputs["verifyServerCertificate"] = args ? args.verifyServerCertificate : undefined;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["bindPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LdapServerProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LdapServerProfile resources.
 */
export interface LdapServerProfileState {
    /**
     * The Base param. String length must not exceed 255 characters.
     */
    base?: pulumi.Input<string>;
    /**
     * The BindDn param. String length must not exceed 255 characters.
     */
    bindDn?: pulumi.Input<string>;
    /**
     * The BindPassword param. String length must not exceed 121 characters.
     */
    bindPassword?: pulumi.Input<string>;
    /**
     * The BindTimelimit param.
     */
    bindTimelimit?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
     */
    ldapType?: pulumi.Input<string>;
    /**
     * The RetryInterval param.
     */
    retryInterval?: pulumi.Input<number>;
    /**
     * The Servers param.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.LdapServerProfileServer>[]>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The Ssl param.
     */
    ssl?: pulumi.Input<boolean>;
    tfid?: pulumi.Input<string>;
    /**
     * The Timelimit param.
     */
    timelimit?: pulumi.Input<number>;
    /**
     * The VerifyServerCertificate param.
     */
    verifyServerCertificate?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a LdapServerProfile resource.
 */
export interface LdapServerProfileArgs {
    /**
     * The Base param. String length must not exceed 255 characters.
     */
    base?: pulumi.Input<string>;
    /**
     * The BindDn param. String length must not exceed 255 characters.
     */
    bindDn?: pulumi.Input<string>;
    /**
     * The BindPassword param. String length must not exceed 121 characters.
     */
    bindPassword?: pulumi.Input<string>;
    /**
     * The BindTimelimit param.
     */
    bindTimelimit?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
     */
    ldapType?: pulumi.Input<string>;
    /**
     * The RetryInterval param.
     */
    retryInterval?: pulumi.Input<number>;
    /**
     * The Servers param.
     */
    servers: pulumi.Input<pulumi.Input<inputs.LdapServerProfileServer>[]>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The Ssl param.
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * The Timelimit param.
     */
    timelimit?: pulumi.Input<number>;
    /**
     * The VerifyServerCertificate param.
     */
    verifyServerCertificate?: pulumi.Input<boolean>;
}
