// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.InternalDnsServer("example", {});
 * ```
 */
export class InternalDnsServer extends pulumi.CustomResource {
    /**
     * Get an existing InternalDnsServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InternalDnsServerState, opts?: pulumi.CustomResourceOptions): InternalDnsServer {
        return new InternalDnsServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/internalDnsServer:InternalDnsServer';

    /**
     * Returns true if the given object is an instance of InternalDnsServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InternalDnsServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InternalDnsServer.__pulumiType;
    }

    /**
     * The DomainNames param.
     */
    public readonly domainNames!: pulumi.Output<string[]>;
    /**
     * The Name param.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Primary param.
     */
    public readonly primary!: pulumi.Output<string>;
    /**
     * The Secondary param.
     */
    public readonly secondary!: pulumi.Output<string | undefined>;
    public /*out*/ readonly tfid!: pulumi.Output<string>;

    /**
     * Create a InternalDnsServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InternalDnsServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InternalDnsServerArgs | InternalDnsServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InternalDnsServerState | undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primary"] = state ? state.primary : undefined;
            resourceInputs["secondary"] = state ? state.secondary : undefined;
            resourceInputs["tfid"] = state ? state.tfid : undefined;
        } else {
            const args = argsOrState as InternalDnsServerArgs | undefined;
            if ((!args || args.domainNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainNames'");
            }
            if ((!args || args.primary === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primary'");
            }
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primary"] = args ? args.primary : undefined;
            resourceInputs["secondary"] = args ? args.secondary : undefined;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InternalDnsServer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InternalDnsServer resources.
 */
export interface InternalDnsServerState {
    /**
     * The DomainNames param.
     */
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The Primary param.
     */
    primary?: pulumi.Input<string>;
    /**
     * The Secondary param.
     */
    secondary?: pulumi.Input<string>;
    tfid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InternalDnsServer resource.
 */
export interface InternalDnsServerArgs {
    /**
     * The DomainNames param.
     */
    domainNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The Primary param.
     */
    primary: pulumi.Input<string>;
    /**
     * The Secondary param.
     */
    secondary?: pulumi.Input<string>;
}
