// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = scm.getDecryptionRule({
 *     id: "1234-56-789",
 * });
 * ```
 */
export function getDecryptionRule(args: GetDecryptionRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetDecryptionRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getDecryptionRule:getDecryptionRule", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDecryptionRule.
 */
export interface GetDecryptionRuleArgs {
    /**
     * The Id param.
     */
    id: string;
}

/**
 * A collection of values returned by getDecryptionRule.
 */
export interface GetDecryptionRuleResult {
    /**
     * The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
     */
    readonly action: string;
    /**
     * The Categories param.
     */
    readonly categories: string[];
    /**
     * The Description param.
     */
    readonly description: string;
    /**
     * The DestinationHips param.
     */
    readonly destinationHips: string[];
    /**
     * The Destinations param.
     */
    readonly destinations: string[];
    /**
     * The Disabled param.
     */
    readonly disabled: boolean;
    /**
     * The Froms param.
     */
    readonly froms: string[];
    /**
     * The Id param.
     */
    readonly id: string;
    /**
     * The LogFail param.
     */
    readonly logFail: boolean;
    /**
     * The LogSetting param.
     */
    readonly logSetting: string;
    /**
     * The LogSuccess param.
     */
    readonly logSuccess: boolean;
    /**
     * The Name param.
     */
    readonly name: string;
    /**
     * The NegateDestination param.
     */
    readonly negateDestination: boolean;
    /**
     * The NegateSource param.
     */
    readonly negateSource: boolean;
    /**
     * The Profile param.
     */
    readonly profile: string;
    /**
     * The Services param.
     */
    readonly services: string[];
    /**
     * The SourceHips param.
     */
    readonly sourceHips: string[];
    /**
     * The SourceUsers param.
     */
    readonly sourceUsers: string[];
    /**
     * The Sources param.
     */
    readonly sources: string[];
    /**
     * The Tags param.
     */
    readonly tags: string[];
    readonly tfid: string;
    /**
     * The Tos param.
     */
    readonly tos: string[];
    /**
     * The Type param.
     */
    readonly type: outputs.GetDecryptionRuleType;
}
/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = scm.getDecryptionRule({
 *     id: "1234-56-789",
 * });
 * ```
 */
export function getDecryptionRuleOutput(args: GetDecryptionRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDecryptionRuleResult> {
    return pulumi.output(args).apply((a: any) => getDecryptionRule(a, opts))
}

/**
 * A collection of arguments for invoking getDecryptionRule.
 */
export interface GetDecryptionRuleOutputArgs {
    /**
     * The Id param.
     */
    id: pulumi.Input<string>;
}
