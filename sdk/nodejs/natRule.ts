// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 */
export class NatRule extends pulumi.CustomResource {
    /**
     * Get an existing NatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatRuleState, opts?: pulumi.CustomResourceOptions): NatRule {
        return new NatRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/natRule:NatRule';

    /**
     * Returns true if the given object is an instance of NatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatRule.__pulumiType;
    }

    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    public readonly activeActiveDeviceBinding!: pulumi.Output<string | undefined>;
    /**
     * The Description param.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Static destination translation parameter.
     */
    public readonly destinationTranslation!: pulumi.Output<outputs.NatRuleDestinationTranslation | undefined>;
    /**
     * The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    public readonly destinations!: pulumi.Output<string[]>;
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * The Disabled param.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Dynamic destination translation parameter.
     */
    public readonly dynamicDestinationTranslation!: pulumi.Output<outputs.NatRuleDynamicDestinationTranslation | undefined>;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    public readonly folder!: pulumi.Output<string | undefined>;
    /**
     * The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    public readonly froms!: pulumi.Output<string[]>;
    /**
     * The GroupTag param.
     */
    public readonly groupTag!: pulumi.Output<string | undefined>;
    /**
     * The Name param.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    public readonly natType!: pulumi.Output<string | undefined>;
    /**
     * The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
     */
    public readonly position!: pulumi.Output<string>;
    /**
     * The Service param.
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    public readonly snippet!: pulumi.Output<string | undefined>;
    /**
     * The SourceTranslation param.
     */
    public readonly sourceTranslation!: pulumi.Output<outputs.NatRuleSourceTranslation | undefined>;
    /**
     * The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    public readonly sources!: pulumi.Output<string[]>;
    /**
     * The Tags param.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The Target param.
     */
    public readonly target!: pulumi.Output<outputs.NatRuleTarget | undefined>;
    public /*out*/ readonly tfid!: pulumi.Output<string>;
    /**
     * The ToInterface param. String must be one of these: `"any"`.
     */
    public readonly toInterface!: pulumi.Output<string | undefined>;
    /**
     * The destination security zone(s).
     */
    public readonly tos!: pulumi.Output<string[]>;

    /**
     * Create a NatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatRuleArgs | NatRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatRuleState | undefined;
            resourceInputs["activeActiveDeviceBinding"] = state ? state.activeActiveDeviceBinding : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationTranslation"] = state ? state.destinationTranslation : undefined;
            resourceInputs["destinations"] = state ? state.destinations : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dynamicDestinationTranslation"] = state ? state.dynamicDestinationTranslation : undefined;
            resourceInputs["folder"] = state ? state.folder : undefined;
            resourceInputs["froms"] = state ? state.froms : undefined;
            resourceInputs["groupTag"] = state ? state.groupTag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["natType"] = state ? state.natType : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["snippet"] = state ? state.snippet : undefined;
            resourceInputs["sourceTranslation"] = state ? state.sourceTranslation : undefined;
            resourceInputs["sources"] = state ? state.sources : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
            resourceInputs["tfid"] = state ? state.tfid : undefined;
            resourceInputs["toInterface"] = state ? state.toInterface : undefined;
            resourceInputs["tos"] = state ? state.tos : undefined;
        } else {
            const args = argsOrState as NatRuleArgs | undefined;
            if ((!args || args.destinations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinations'");
            }
            if ((!args || args.froms === undefined) && !opts.urn) {
                throw new Error("Missing required property 'froms'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            if ((!args || args.sources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            if ((!args || args.tos === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tos'");
            }
            resourceInputs["activeActiveDeviceBinding"] = args ? args.activeActiveDeviceBinding : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationTranslation"] = args ? args.destinationTranslation : undefined;
            resourceInputs["destinations"] = args ? args.destinations : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["dynamicDestinationTranslation"] = args ? args.dynamicDestinationTranslation : undefined;
            resourceInputs["folder"] = args ? args.folder : undefined;
            resourceInputs["froms"] = args ? args.froms : undefined;
            resourceInputs["groupTag"] = args ? args.groupTag : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["natType"] = args ? args.natType : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["snippet"] = args ? args.snippet : undefined;
            resourceInputs["sourceTranslation"] = args ? args.sourceTranslation : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["toInterface"] = args ? args.toInterface : undefined;
            resourceInputs["tos"] = args ? args.tos : undefined;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatRule resources.
 */
export interface NatRuleState {
    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    activeActiveDeviceBinding?: pulumi.Input<string>;
    /**
     * The Description param.
     */
    description?: pulumi.Input<string>;
    /**
     * Static destination translation parameter.
     */
    destinationTranslation?: pulumi.Input<inputs.NatRuleDestinationTranslation>;
    /**
     * The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    destinations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    device?: pulumi.Input<string>;
    /**
     * The Disabled param.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Dynamic destination translation parameter.
     */
    dynamicDestinationTranslation?: pulumi.Input<inputs.NatRuleDynamicDestinationTranslation>;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    folder?: pulumi.Input<string>;
    /**
     * The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    froms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The GroupTag param.
     */
    groupTag?: pulumi.Input<string>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    natType?: pulumi.Input<string>;
    /**
     * The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
     */
    position?: pulumi.Input<string>;
    /**
     * The Service param.
     */
    service?: pulumi.Input<string>;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The SourceTranslation param.
     */
    sourceTranslation?: pulumi.Input<inputs.NatRuleSourceTranslation>;
    /**
     * The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    sources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Tags param.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Target param.
     */
    target?: pulumi.Input<inputs.NatRuleTarget>;
    tfid?: pulumi.Input<string>;
    /**
     * The ToInterface param. String must be one of these: `"any"`.
     */
    toInterface?: pulumi.Input<string>;
    /**
     * The destination security zone(s).
     */
    tos?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a NatRule resource.
 */
export interface NatRuleArgs {
    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    activeActiveDeviceBinding?: pulumi.Input<string>;
    /**
     * The Description param.
     */
    description?: pulumi.Input<string>;
    /**
     * Static destination translation parameter.
     */
    destinationTranslation?: pulumi.Input<inputs.NatRuleDestinationTranslation>;
    /**
     * The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    device?: pulumi.Input<string>;
    /**
     * The Disabled param.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Dynamic destination translation parameter.
     */
    dynamicDestinationTranslation?: pulumi.Input<inputs.NatRuleDynamicDestinationTranslation>;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    folder?: pulumi.Input<string>;
    /**
     * The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    froms: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The GroupTag param.
     */
    groupTag?: pulumi.Input<string>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    natType?: pulumi.Input<string>;
    /**
     * The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
     */
    position?: pulumi.Input<string>;
    /**
     * The Service param.
     */
    service: pulumi.Input<string>;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The SourceTranslation param.
     */
    sourceTranslation?: pulumi.Input<inputs.NatRuleSourceTranslation>;
    /**
     * The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    sources: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Tags param.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Target param.
     */
    target?: pulumi.Input<inputs.NatRuleTarget>;
    /**
     * The ToInterface param. String must be one of these: `"any"`.
     */
    toInterface?: pulumi.Input<string>;
    /**
     * The destination security zone(s).
     */
    tos: pulumi.Input<pulumi.Input<string>[]>;
}
