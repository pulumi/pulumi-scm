// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 */
export class NatRule extends pulumi.CustomResource {
    /**
     * Get an existing NatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatRuleState, opts?: pulumi.CustomResourceOptions): NatRule {
        return new NatRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/natRule:NatRule';

    /**
     * Returns true if the given object is an instance of NatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatRule.__pulumiType;
    }

    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    declare public readonly activeActiveDeviceBinding: pulumi.Output<string | undefined>;
    /**
     * The Description param.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Static destination translation parameter.
     */
    declare public readonly destinationTranslation: pulumi.Output<outputs.NatRuleDestinationTranslation | undefined>;
    /**
     * The destination address(es).
     */
    declare public readonly destinations: pulumi.Output<string[]>;
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    declare public readonly device: pulumi.Output<string | undefined>;
    /**
     * The Disabled param.
     */
    declare public readonly disabled: pulumi.Output<boolean | undefined>;
    /**
     * Dynamic destination translation parameter.
     */
    declare public readonly dynamicDestinationTranslation: pulumi.Output<outputs.NatRuleDynamicDestinationTranslation | undefined>;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    declare public readonly folder: pulumi.Output<string | undefined>;
    /**
     * The source security zone(s).
     */
    declare public readonly froms: pulumi.Output<string[]>;
    /**
     * The GroupTag param.
     */
    declare public readonly groupTag: pulumi.Output<string | undefined>;
    /**
     * The Name param.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    declare public readonly natType: pulumi.Output<string | undefined>;
    /**
     * The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
     */
    declare public readonly position: pulumi.Output<string>;
    /**
     * The Service param.
     */
    declare public readonly service: pulumi.Output<string>;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    declare public readonly snippet: pulumi.Output<string | undefined>;
    /**
     * The SourceTranslation param.
     */
    declare public readonly sourceTranslation: pulumi.Output<outputs.NatRuleSourceTranslation | undefined>;
    /**
     * The source address(es).
     */
    declare public readonly sources: pulumi.Output<string[]>;
    /**
     * The Tags param.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The Target param.
     */
    declare public readonly target: pulumi.Output<outputs.NatRuleTarget | undefined>;
    declare public /*out*/ readonly tfid: pulumi.Output<string>;
    /**
     * The ToInterface param.
     */
    declare public readonly toInterface: pulumi.Output<string | undefined>;
    /**
     * The destination security zone(s).
     */
    declare public readonly tos: pulumi.Output<string[]>;

    /**
     * Create a NatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatRuleArgs | NatRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatRuleState | undefined;
            resourceInputs["activeActiveDeviceBinding"] = state?.activeActiveDeviceBinding;
            resourceInputs["description"] = state?.description;
            resourceInputs["destinationTranslation"] = state?.destinationTranslation;
            resourceInputs["destinations"] = state?.destinations;
            resourceInputs["device"] = state?.device;
            resourceInputs["disabled"] = state?.disabled;
            resourceInputs["dynamicDestinationTranslation"] = state?.dynamicDestinationTranslation;
            resourceInputs["folder"] = state?.folder;
            resourceInputs["froms"] = state?.froms;
            resourceInputs["groupTag"] = state?.groupTag;
            resourceInputs["name"] = state?.name;
            resourceInputs["natType"] = state?.natType;
            resourceInputs["position"] = state?.position;
            resourceInputs["service"] = state?.service;
            resourceInputs["snippet"] = state?.snippet;
            resourceInputs["sourceTranslation"] = state?.sourceTranslation;
            resourceInputs["sources"] = state?.sources;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["target"] = state?.target;
            resourceInputs["tfid"] = state?.tfid;
            resourceInputs["toInterface"] = state?.toInterface;
            resourceInputs["tos"] = state?.tos;
        } else {
            const args = argsOrState as NatRuleArgs | undefined;
            if (args?.destinations === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinations'");
            }
            if (args?.froms === undefined && !opts.urn) {
                throw new Error("Missing required property 'froms'");
            }
            if (args?.service === undefined && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            if (args?.sources === undefined && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            if (args?.tos === undefined && !opts.urn) {
                throw new Error("Missing required property 'tos'");
            }
            resourceInputs["activeActiveDeviceBinding"] = args?.activeActiveDeviceBinding;
            resourceInputs["description"] = args?.description;
            resourceInputs["destinationTranslation"] = args?.destinationTranslation;
            resourceInputs["destinations"] = args?.destinations;
            resourceInputs["device"] = args?.device;
            resourceInputs["disabled"] = args?.disabled;
            resourceInputs["dynamicDestinationTranslation"] = args?.dynamicDestinationTranslation;
            resourceInputs["folder"] = args?.folder;
            resourceInputs["froms"] = args?.froms;
            resourceInputs["groupTag"] = args?.groupTag;
            resourceInputs["name"] = args?.name;
            resourceInputs["natType"] = args?.natType;
            resourceInputs["position"] = args?.position;
            resourceInputs["service"] = args?.service;
            resourceInputs["snippet"] = args?.snippet;
            resourceInputs["sourceTranslation"] = args?.sourceTranslation;
            resourceInputs["sources"] = args?.sources;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["target"] = args?.target;
            resourceInputs["toInterface"] = args?.toInterface;
            resourceInputs["tos"] = args?.tos;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatRule resources.
 */
export interface NatRuleState {
    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    activeActiveDeviceBinding?: pulumi.Input<string>;
    /**
     * The Description param.
     */
    description?: pulumi.Input<string>;
    /**
     * Static destination translation parameter.
     */
    destinationTranslation?: pulumi.Input<inputs.NatRuleDestinationTranslation>;
    /**
     * The destination address(es).
     */
    destinations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    device?: pulumi.Input<string>;
    /**
     * The Disabled param.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Dynamic destination translation parameter.
     */
    dynamicDestinationTranslation?: pulumi.Input<inputs.NatRuleDynamicDestinationTranslation>;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    folder?: pulumi.Input<string>;
    /**
     * The source security zone(s).
     */
    froms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The GroupTag param.
     */
    groupTag?: pulumi.Input<string>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    natType?: pulumi.Input<string>;
    /**
     * The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
     */
    position?: pulumi.Input<string>;
    /**
     * The Service param.
     */
    service?: pulumi.Input<string>;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The SourceTranslation param.
     */
    sourceTranslation?: pulumi.Input<inputs.NatRuleSourceTranslation>;
    /**
     * The source address(es).
     */
    sources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Tags param.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Target param.
     */
    target?: pulumi.Input<inputs.NatRuleTarget>;
    tfid?: pulumi.Input<string>;
    /**
     * The ToInterface param.
     */
    toInterface?: pulumi.Input<string>;
    /**
     * The destination security zone(s).
     */
    tos?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a NatRule resource.
 */
export interface NatRuleArgs {
    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    activeActiveDeviceBinding?: pulumi.Input<string>;
    /**
     * The Description param.
     */
    description?: pulumi.Input<string>;
    /**
     * Static destination translation parameter.
     */
    destinationTranslation?: pulumi.Input<inputs.NatRuleDestinationTranslation>;
    /**
     * The destination address(es).
     */
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    device?: pulumi.Input<string>;
    /**
     * The Disabled param.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Dynamic destination translation parameter.
     */
    dynamicDestinationTranslation?: pulumi.Input<inputs.NatRuleDynamicDestinationTranslation>;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    folder?: pulumi.Input<string>;
    /**
     * The source security zone(s).
     */
    froms: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The GroupTag param.
     */
    groupTag?: pulumi.Input<string>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    natType?: pulumi.Input<string>;
    /**
     * The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
     */
    position?: pulumi.Input<string>;
    /**
     * The Service param.
     */
    service: pulumi.Input<string>;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The SourceTranslation param.
     */
    sourceTranslation?: pulumi.Input<inputs.NatRuleSourceTranslation>;
    /**
     * The source address(es).
     */
    sources: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Tags param.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Target param.
     */
    target?: pulumi.Input<inputs.NatRuleTarget>;
    /**
     * The ToInterface param.
     */
    toInterface?: pulumi.Input<string>;
    /**
     * The destination security zone(s).
     */
    tos: pulumi.Input<pulumi.Input<string>[]>;
}
