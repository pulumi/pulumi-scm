// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AddressGroupDynamicValue {
    /**
     * Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
     */
    filter: string;
}

export interface AntiSpywareProfileMicaEngineSpywareEnabledList {
    /**
     * The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
     */
    inlinePolicyAction: string;
    /**
     * The Name param.
     */
    name?: string;
}

export interface AntiSpywareProfileRule {
    /**
     * The Action param.
     */
    action?: outputs.AntiSpywareProfileRuleAction;
    /**
     * The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
     */
    category?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture?: string;
    /**
     * The Severities param.
     */
    severities?: string[];
    /**
     * The ThreatName param. String length must exceed 4 characters.
     */
    threatName?: string;
}

export interface AntiSpywareProfileRuleAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    allow?: boolean;
    /**
     * The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    blockIp?: outputs.AntiSpywareProfileRuleActionBlockIp;
    /**
     * The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    drop?: boolean;
    /**
     * The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetBoth?: boolean;
    /**
     * The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetClient?: boolean;
    /**
     * The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetServer?: boolean;
}

export interface AntiSpywareProfileRuleActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy?: string;
}

export interface AntiSpywareProfileThreatException {
    /**
     * The Action param.
     */
    action?: outputs.AntiSpywareProfileThreatExceptionAction;
    /**
     * The ExemptIps param.
     */
    exemptIps?: outputs.AntiSpywareProfileThreatExceptionExemptIp[];
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Notes param.
     */
    notes?: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture?: string;
}

export interface AntiSpywareProfileThreatExceptionAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    allow?: boolean;
    /**
     * The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    blockIp?: outputs.AntiSpywareProfileThreatExceptionActionBlockIp;
    /**
     * The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    default?: boolean;
    /**
     * The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    drop?: boolean;
    /**
     * The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetBoth?: boolean;
    /**
     * The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetClient?: boolean;
    /**
     * The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetServer?: boolean;
}

export interface AntiSpywareProfileThreatExceptionActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy?: string;
}

export interface AntiSpywareProfileThreatExceptionExemptIp {
    /**
     * The Name param.
     */
    name: string;
}

export interface AntiSpywareSignatureDefaultAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    allow?: boolean;
    /**
     * The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    blockIp?: outputs.AntiSpywareSignatureDefaultActionBlockIp;
    /**
     * The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    drop?: boolean;
    /**
     * The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetBoth?: boolean;
    /**
     * The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetClient?: boolean;
    /**
     * The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetServer?: boolean;
}

export interface AntiSpywareSignatureDefaultActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy?: string;
}

export interface AntiSpywareSignatureSignature {
    /**
     * The Combination param. Ensure that only one of the following is specified: `combination`, `standard`
     */
    combination?: outputs.AntiSpywareSignatureSignatureCombination;
    /**
     * The Standards param. Ensure that only one of the following is specified: `combination`, `standard`
     */
    standards?: outputs.AntiSpywareSignatureSignatureStandard[];
}

export interface AntiSpywareSignatureSignatureCombination {
    /**
     * The AndConditions param.
     */
    andConditions?: outputs.AntiSpywareSignatureSignatureCombinationAndCondition[];
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The TimeAttribute param.
     */
    timeAttribute?: outputs.AntiSpywareSignatureSignatureCombinationTimeAttribute;
}

export interface AntiSpywareSignatureSignatureCombinationAndCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The OrConditions param.
     */
    orConditions?: outputs.AntiSpywareSignatureSignatureCombinationAndConditionOrCondition[];
}

export interface AntiSpywareSignatureSignatureCombinationAndConditionOrCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The ThreatId param.
     */
    threatId?: string;
}

export interface AntiSpywareSignatureSignatureCombinationTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval?: number;
    /**
     * The Threshold param. Value must be between 1 and 255.
     */
    threshold?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
     */
    trackBy?: string;
}

export interface AntiSpywareSignatureSignatureStandard {
    /**
     * The AndConditions param.
     */
    andConditions?: outputs.AntiSpywareSignatureSignatureStandardAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment?: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
     */
    scope?: string;
}

export interface AntiSpywareSignatureSignatureStandardAndCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The OrConditions param.
     */
    orConditions?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrCondition[];
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Operator param.
     */
    operator?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value?: number;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value?: number;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value?: number;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Pattern param.
     */
    pattern?: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface ApplicationDefault {
    /**
     * The IdentByIcmp6Type param. Ensure that only one of the following is specified: `identByIcmp6Type`, `identByIcmpType`, `identByIpProtocol`, `port`
     */
    identByIcmp6Type?: outputs.ApplicationDefaultIdentByIcmp6Type;
    /**
     * The IdentByIcmpType param. Ensure that only one of the following is specified: `identByIcmp6Type`, `identByIcmpType`, `identByIpProtocol`, `port`
     */
    identByIcmpType?: outputs.ApplicationDefaultIdentByIcmpType;
    /**
     * The IdentByIpProtocol param. Ensure that only one of the following is specified: `identByIcmp6Type`, `identByIcmpType`, `identByIpProtocol`, `port`
     */
    identByIpProtocol?: string;
    /**
     * The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `identByIcmp6Type`, `identByIcmpType`, `identByIpProtocol`, `port`
     */
    ports?: string[];
}

export interface ApplicationDefaultIdentByIcmp6Type {
    /**
     * The Code param.
     */
    code?: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface ApplicationDefaultIdentByIcmpType {
    /**
     * The Code param.
     */
    code?: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface ApplicationFilterTagging {
    /**
     * The NoTag param. Ensure that only one of the following is specified: `noTag`, `tag`
     */
    noTag?: boolean;
    /**
     * The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters. Ensure that only one of the following is specified: `noTag`, `tag`
     */
    tags?: string[];
}

export interface ApplicationSignature {
    /**
     * The AndConditions param.
     */
    andConditions?: outputs.ApplicationSignatureAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment?: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
     */
    scope: string;
}

export interface ApplicationSignatureAndCondition {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions?: outputs.ApplicationSignatureAndConditionOrCondition[];
}

export interface ApplicationSignatureAndConditionOrCondition {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.ApplicationSignatureAndConditionOrConditionOperator;
}

export interface ApplicationSignatureAndConditionOrConditionOperator {
    /**
     * The EqualTo param. Ensure that only one of the following is specified: `equalTo`, `greaterThan`, `lessThan`, `patternMatch`
     */
    equalTo?: outputs.ApplicationSignatureAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param. Ensure that only one of the following is specified: `equalTo`, `greaterThan`, `lessThan`, `patternMatch`
     */
    greaterThan?: outputs.ApplicationSignatureAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param. Ensure that only one of the following is specified: `equalTo`, `greaterThan`, `lessThan`, `patternMatch`
     */
    lessThan?: outputs.ApplicationSignatureAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param. Ensure that only one of the following is specified: `equalTo`, `greaterThan`, `lessThan`, `patternMatch`
     */
    patternMatch?: outputs.ApplicationSignatureAndConditionOrConditionOperatorPatternMatch;
}

export interface ApplicationSignatureAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
     */
    mask?: string;
    /**
     * The Position param. String length must not exceed 127 characters.
     */
    position?: string;
    /**
     * The Value param. String length must not exceed 10 characters.
     */
    value: string;
}

export interface ApplicationSignatureAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface ApplicationSignatureAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface ApplicationSignatureAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Pattern param. String length must not exceed 127 characters.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface AuthenticationProfileLockout {
    /**
     * The FailedAttempts param. Value must be between 0 and 10.
     */
    failedAttempts?: number;
    /**
     * The LockoutTime param. Value must be between 0 and 60.
     */
    lockoutTime?: number;
}

export interface AuthenticationProfileMethod {
    /**
     * The Cloud param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    cloud?: outputs.AuthenticationProfileMethodCloud;
    /**
     * The Kerberos param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    kerberos?: outputs.AuthenticationProfileMethodKerberos;
    /**
     * The Ldap param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    ldap?: outputs.AuthenticationProfileMethodLdap;
    /**
     * The LocalDatabase param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    localDatabase?: boolean;
    /**
     * The Radius param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    radius?: outputs.AuthenticationProfileMethodRadius;
    /**
     * The SamlIdp param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    samlIdp?: outputs.AuthenticationProfileMethodSamlIdp;
    /**
     * The Tacplus param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `localDatabase`, `radius`, `samlIdp`, `tacplus`
     */
    tacplus?: outputs.AuthenticationProfileMethodTacplus;
}

export interface AuthenticationProfileMethodCloud {
    /**
     * The tenant profile name.
     */
    profileName?: string;
}

export interface AuthenticationProfileMethodKerberos {
    /**
     * The Realm param.
     */
    realm?: string;
    /**
     * The ServerProfile param.
     */
    serverProfile?: string;
}

export interface AuthenticationProfileMethodLdap {
    /**
     * The LoginAttribute param.
     */
    loginAttribute?: string;
    /**
     * The PasswdExpDays param.
     */
    passwdExpDays?: number;
    /**
     * The ServerProfile param.
     */
    serverProfile?: string;
}

export interface AuthenticationProfileMethodRadius {
    /**
     * The Checkgroup param.
     */
    checkgroup?: boolean;
    /**
     * The ServerProfile param.
     */
    serverProfile?: string;
}

export interface AuthenticationProfileMethodSamlIdp {
    /**
     * The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
     */
    attributeNameUsergroup?: string;
    /**
     * The AttributeNameUsername param. String length must be between 1 and 63 characters.
     */
    attributeNameUsername?: string;
    /**
     * The CertificateProfile param. String length must not exceed 31 characters.
     */
    certificateProfile?: string;
    /**
     * The EnableSingleLogout param.
     */
    enableSingleLogout?: boolean;
    /**
     * The RequestSigningCertificate param. String length must not exceed 64 characters.
     */
    requestSigningCertificate?: string;
    /**
     * The ServerProfile param. String length must not exceed 63 characters.
     */
    serverProfile?: string;
}

export interface AuthenticationProfileMethodTacplus {
    /**
     * The Checkgroup param.
     */
    checkgroup?: boolean;
    /**
     * The ServerProfile param.
     */
    serverProfile?: string;
}

export interface AuthenticationProfileMultiFactorAuth {
    /**
     * The Factors param.
     */
    factors?: string[];
    /**
     * The MfaEnable param.
     */
    mfaEnable?: boolean;
}

export interface AuthenticationProfileSingleSignOn {
    /**
     * The KerberosKeytab param. String length must not exceed 8192 characters.
     */
    kerberosKeytab?: string;
    /**
     * The Realm param. String length must not exceed 127 characters.
     */
    realm?: string;
}

export interface CertificateProfileCaCertificate {
    /**
     * The DefaultOcspUrl param.
     */
    defaultOcspUrl?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The OcspVerifyCert param.
     */
    ocspVerifyCert?: string;
    /**
     * The TemplateName param.
     */
    templateName?: string;
}

export interface CertificateProfileUsernameField {
    /**
     * The Subject param. String must be one of these: `"common-name"`.
     */
    subject?: string;
    /**
     * The SubjectAlt param. String must be one of these: `"email"`.
     */
    subjectAlt?: string;
}

export interface DecryptionProfileSslForwardProxy {
    /**
     * The AutoIncludeAltname param. Default: `false`.
     */
    autoIncludeAltname: boolean;
    /**
     * The BlockClientCert param. Default: `false`.
     */
    blockClientCert: boolean;
    /**
     * The BlockExpiredCertificate param. Default: `false`.
     */
    blockExpiredCertificate: boolean;
    /**
     * The BlockTimeoutCert param. Default: `false`.
     */
    blockTimeoutCert: boolean;
    /**
     * The BlockTls13DowngradeNoResource param. Default: `false`.
     */
    blockTls13DowngradeNoResource: boolean;
    /**
     * The BlockUnknownCert param. Default: `false`.
     */
    blockUnknownCert: boolean;
    /**
     * The BlockUnsupportedCipher param. Default: `false`.
     */
    blockUnsupportedCipher: boolean;
    /**
     * The BlockUnsupportedVersion param. Default: `false`.
     */
    blockUnsupportedVersion: boolean;
    /**
     * The BlockUntrustedIssuer param. Default: `false`.
     */
    blockUntrustedIssuer: boolean;
    /**
     * The RestrictCertExts param. Default: `false`.
     */
    restrictCertExts: boolean;
    /**
     * The StripAlpn param. Default: `false`.
     */
    stripAlpn: boolean;
}

export interface DecryptionProfileSslInboundProxy {
    /**
     * The BlockIfHsmUnavailable param. Default: `false`.
     */
    blockIfHsmUnavailable: boolean;
    /**
     * The BlockIfNoResource param. Default: `false`.
     */
    blockIfNoResource: boolean;
    /**
     * The BlockUnsupportedCipher param. Default: `false`.
     */
    blockUnsupportedCipher: boolean;
    /**
     * The BlockUnsupportedVersion param. Default: `false`.
     */
    blockUnsupportedVersion: boolean;
}

export interface DecryptionProfileSslNoProxy {
    /**
     * The BlockExpiredCertificate param. Default: `false`.
     */
    blockExpiredCertificate: boolean;
    /**
     * The BlockUntrustedIssuer param. Default: `false`.
     */
    blockUntrustedIssuer: boolean;
}

export interface DecryptionProfileSslProtocolSettings {
    /**
     * The AuthAlgoMd5 param. Default: `true`.
     */
    authAlgoMd5: boolean;
    /**
     * The AuthAlgoSha1 param. Default: `true`.
     */
    authAlgoSha1: boolean;
    /**
     * The AuthAlgoSha256 param. Default: `true`.
     */
    authAlgoSha256: boolean;
    /**
     * The AuthAlgoSha384 param. Default: `true`.
     */
    authAlgoSha384: boolean;
    /**
     * The EncAlgo3des param. Default: `true`.
     */
    encAlgo3des: boolean;
    /**
     * The EncAlgoAes128Cbc param. Default: `true`.
     */
    encAlgoAes128Cbc: boolean;
    /**
     * The EncAlgoAes128Gcm param. Default: `true`.
     */
    encAlgoAes128Gcm: boolean;
    /**
     * The EncAlgoAes256Cbc param. Default: `true`.
     */
    encAlgoAes256Cbc: boolean;
    /**
     * The EncAlgoAes256Gcm param. Default: `true`.
     */
    encAlgoAes256Gcm: boolean;
    /**
     * The EncAlgoChacha20Poly1305 param. Default: `true`.
     */
    encAlgoChacha20Poly1305: boolean;
    /**
     * The EncAlgoRc4 param. Default: `true`.
     */
    encAlgoRc4: boolean;
    /**
     * The KeyxchgAlgoDhe param. Default: `true`.
     */
    keyxchgAlgoDhe: boolean;
    /**
     * The KeyxchgAlgoEcdhe param. Default: `true`.
     */
    keyxchgAlgoEcdhe: boolean;
    /**
     * The KeyxchgAlgoRsa param. Default: `true`.
     */
    keyxchgAlgoRsa: boolean;
    /**
     * The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
     */
    maxVersion: string;
    /**
     * The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
     */
    minVersion: string;
}

export interface DecryptionRuleType {
    /**
     * The SslForwardProxy param. Ensure that only one of the following is specified: `sslForwardProxy`, `sslInboundInspection`
     */
    sslForwardProxy?: boolean;
    /**
     * add the certificate name for SSL inbound inspection. Ensure that only one of the following is specified: `sslForwardProxy`, `sslInboundInspection`
     */
    sslInboundInspection?: string;
}

export interface DnsSecurityProfileBotnetDomains {
    /**
     * The DnsSecurityCategories param.
     */
    dnsSecurityCategories?: outputs.DnsSecurityProfileBotnetDomainsDnsSecurityCategory[];
    /**
     * The Lists param.
     */
    lists?: outputs.DnsSecurityProfileBotnetDomainsList[];
    /**
     * The Sinkhole param.
     */
    sinkhole?: outputs.DnsSecurityProfileBotnetDomainsSinkhole;
    /**
     * The Whitelists param.
     */
    whitelists?: outputs.DnsSecurityProfileBotnetDomainsWhitelist[];
}

export interface DnsSecurityProfileBotnetDomainsDnsSecurityCategory {
    /**
     * The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
     */
    action: string;
    /**
     * The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
     */
    logLevel: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture?: string;
}

export interface DnsSecurityProfileBotnetDomainsList {
    /**
     * The Action param.
     */
    action?: outputs.DnsSecurityProfileBotnetDomainsListAction;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture?: string;
}

export interface DnsSecurityProfileBotnetDomainsListAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
     */
    allow?: boolean;
    /**
     * The Block param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
     */
    block?: boolean;
    /**
     * The Sinkhole param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
     */
    sinkhole?: boolean;
}

export interface DnsSecurityProfileBotnetDomainsSinkhole {
    /**
     * The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
     */
    ipv4Address?: string;
    /**
     * The Ipv6Address param. String must be one of these: `"::1"`.
     */
    ipv6Address?: string;
}

export interface DnsSecurityProfileBotnetDomainsWhitelist {
    /**
     * The Description param.
     */
    description?: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface ExternalDynamicListType {
    /**
     * The Domain param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    domain?: outputs.ExternalDynamicListTypeDomain;
    /**
     * The Imei param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    imei?: outputs.ExternalDynamicListTypeImei;
    /**
     * The Imsi param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    imsi?: outputs.ExternalDynamicListTypeImsi;
    /**
     * The Ip param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    ip?: outputs.ExternalDynamicListTypeIp;
    /**
     * The PredefinedIp param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    predefinedIp?: outputs.ExternalDynamicListTypePredefinedIp;
    /**
     * The PredefinedUrl param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    predefinedUrl?: outputs.ExternalDynamicListTypePredefinedUrl;
    /**
     * The Url param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefinedIp`, `predefinedUrl`, `url`
     */
    url?: outputs.ExternalDynamicListTypeUrl;
}

export interface ExternalDynamicListTypeDomain {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The DomainAuth param.
     */
    domainAuth?: outputs.ExternalDynamicListTypeDomainDomainAuth;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists?: string[];
    /**
     * Enable/Disable expand domain. Default: `false`.
     */
    expandDomain: boolean;
    /**
     * The Recurring param.
     */
    recurring: outputs.ExternalDynamicListTypeDomainRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface ExternalDynamicListTypeDomainDomainAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface ExternalDynamicListTypeDomainRecurring {
    /**
     * The Daily param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    daily?: outputs.ExternalDynamicListTypeDomainRecurringDaily;
    /**
     * The FiveMinute param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    fiveMinute?: boolean;
    /**
     * The Hourly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    hourly?: boolean;
    /**
     * The Monthly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    monthly?: outputs.ExternalDynamicListTypeDomainRecurringMonthly;
    /**
     * The Weekly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    weekly?: outputs.ExternalDynamicListTypeDomainRecurringWeekly;
}

export interface ExternalDynamicListTypeDomainRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface ExternalDynamicListTypeDomainRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface ExternalDynamicListTypeDomainRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface ExternalDynamicListTypeImei {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     */
    exceptionLists?: string[];
    /**
     * The ImeiAuth param.
     */
    imeiAuth?: outputs.ExternalDynamicListTypeImeiImeiAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.ExternalDynamicListTypeImeiRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface ExternalDynamicListTypeImeiImeiAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface ExternalDynamicListTypeImeiRecurring {
    /**
     * The Daily param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    daily?: outputs.ExternalDynamicListTypeImeiRecurringDaily;
    /**
     * The FiveMinute param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    fiveMinute?: boolean;
    /**
     * The Hourly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    hourly?: boolean;
    /**
     * The Monthly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    monthly?: outputs.ExternalDynamicListTypeImeiRecurringMonthly;
    /**
     * The Weekly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    weekly?: outputs.ExternalDynamicListTypeImeiRecurringWeekly;
}

export interface ExternalDynamicListTypeImeiRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface ExternalDynamicListTypeImeiRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface ExternalDynamicListTypeImeiRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface ExternalDynamicListTypeImsi {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
     */
    exceptionLists?: string[];
    /**
     * The ImsiAuth param.
     */
    imsiAuth?: outputs.ExternalDynamicListTypeImsiImsiAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.ExternalDynamicListTypeImsiRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface ExternalDynamicListTypeImsiImsiAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface ExternalDynamicListTypeImsiRecurring {
    /**
     * The Daily param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    daily?: outputs.ExternalDynamicListTypeImsiRecurringDaily;
    /**
     * The FiveMinute param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    fiveMinute?: boolean;
    /**
     * The Hourly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    hourly?: boolean;
    /**
     * The Monthly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    monthly?: outputs.ExternalDynamicListTypeImsiRecurringMonthly;
    /**
     * The Weekly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    weekly?: outputs.ExternalDynamicListTypeImsiRecurringWeekly;
}

export interface ExternalDynamicListTypeImsiRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface ExternalDynamicListTypeImsiRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface ExternalDynamicListTypeImsiRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface ExternalDynamicListTypeIp {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists?: string[];
    /**
     * The IpAuth param.
     */
    ipAuth?: outputs.ExternalDynamicListTypeIpIpAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.ExternalDynamicListTypeIpRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface ExternalDynamicListTypeIpIpAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface ExternalDynamicListTypeIpRecurring {
    /**
     * The Daily param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    daily?: outputs.ExternalDynamicListTypeIpRecurringDaily;
    /**
     * The FiveMinute param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    fiveMinute?: boolean;
    /**
     * The Hourly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    hourly?: boolean;
    /**
     * The Monthly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    monthly?: outputs.ExternalDynamicListTypeIpRecurringMonthly;
    /**
     * The Weekly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    weekly?: outputs.ExternalDynamicListTypeIpRecurringWeekly;
}

export interface ExternalDynamicListTypeIpRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface ExternalDynamicListTypeIpRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface ExternalDynamicListTypeIpRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface ExternalDynamicListTypePredefinedIp {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists?: string[];
    /**
     * The Url param.
     */
    url: string;
}

export interface ExternalDynamicListTypePredefinedUrl {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists?: string[];
    /**
     * The Url param.
     */
    url: string;
}

export interface ExternalDynamicListTypeUrl {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists?: string[];
    /**
     * The Recurring param.
     */
    recurring: outputs.ExternalDynamicListTypeUrlRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
    /**
     * The UrlAuth param.
     */
    urlAuth?: outputs.ExternalDynamicListTypeUrlUrlAuth;
}

export interface ExternalDynamicListTypeUrlRecurring {
    /**
     * The Daily param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    daily?: outputs.ExternalDynamicListTypeUrlRecurringDaily;
    /**
     * The FiveMinute param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    fiveMinute?: boolean;
    /**
     * The Hourly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    hourly?: boolean;
    /**
     * The Monthly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    monthly?: outputs.ExternalDynamicListTypeUrlRecurringMonthly;
    /**
     * The Weekly param. Ensure that only one of the following is specified: `daily`, `fiveMinute`, `hourly`, `monthly`, `weekly`
     */
    weekly?: outputs.ExternalDynamicListTypeUrlRecurringWeekly;
}

export interface ExternalDynamicListTypeUrlRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface ExternalDynamicListTypeUrlRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface ExternalDynamicListTypeUrlRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface ExternalDynamicListTypeUrlUrlAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface FileBlockingProfileRule {
    /**
     * The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
     */
    action: string;
    /**
     * The Applications param. List must contain at least 1 elements.
     */
    applications: string[];
    /**
     * The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
     */
    direction: string;
    /**
     * The FileTypes param. List must contain at least 1 elements.
     */
    fileTypes: string[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetAddressGroupDynamicValue {
    /**
     * Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
     */
    filter: string;
}

export interface GetAddressGroupListData {
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description: string;
    /**
     * The DynamicValue param.
     */
    dynamicValue: outputs.GetAddressGroupListDataDynamicValue;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     */
    staticLists: string[];
    /**
     * Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
}

export interface GetAddressGroupListDataDynamicValue {
    /**
     * Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
     */
    filter: string;
}

export interface GetAddressObjectListData {
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description: string;
    /**
     * The Fqdn param. String length must be between 1 and 255 characters. String validation regex: `^a-zA-Z0-9_+[a-zA-Z0-9]$`.
     */
    fqdn: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The IpNetmask param.
     */
    ipNetmask: string;
    /**
     * The IpRange param.
     */
    ipRange: string;
    /**
     * The IpWildcard param.
     */
    ipWildcard: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
    /**
     * The Type param.
     */
    type: string;
}

export interface GetAntiSpywareProfileListData {
    /**
     * The CloudInlineAnalysis param. Default: `false`.
     */
    cloudInlineAnalysis: boolean;
    /**
     * The Description param.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The InlineExceptionEdlUrls param.
     */
    inlineExceptionEdlUrls: string[];
    /**
     * The InlineExceptionIpAddresses param.
     */
    inlineExceptionIpAddresses: string[];
    /**
     * The MicaEngineSpywareEnabledList param.
     */
    micaEngineSpywareEnabledLists: outputs.GetAntiSpywareProfileListDataMicaEngineSpywareEnabledList[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Rules param.
     */
    rules: outputs.GetAntiSpywareProfileListDataRule[];
    /**
     * The ThreatExceptions param.
     */
    threatExceptions: outputs.GetAntiSpywareProfileListDataThreatException[];
}

export interface GetAntiSpywareProfileListDataMicaEngineSpywareEnabledList {
    /**
     * The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
     */
    inlinePolicyAction: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetAntiSpywareProfileListDataRule {
    /**
     * The Action param.
     */
    action: outputs.GetAntiSpywareProfileListDataRuleAction;
    /**
     * The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
     */
    category: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
    /**
     * The Severities param.
     */
    severities: string[];
    /**
     * The ThreatName param. String length must exceed 4 characters.
     */
    threatName: string;
}

export interface GetAntiSpywareProfileListDataRuleAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetAntiSpywareProfileListDataRuleActionBlockIp;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetAntiSpywareProfileListDataRuleActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareProfileListDataThreatException {
    /**
     * The Action param.
     */
    action: outputs.GetAntiSpywareProfileListDataThreatExceptionAction;
    /**
     * The ExemptIps param.
     */
    exemptIps: outputs.GetAntiSpywareProfileListDataThreatExceptionExemptIp[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Notes param.
     */
    notes: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
}

export interface GetAntiSpywareProfileListDataThreatExceptionAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetAntiSpywareProfileListDataThreatExceptionActionBlockIp;
    /**
     * The Default param.
     */
    default: boolean;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetAntiSpywareProfileListDataThreatExceptionActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareProfileListDataThreatExceptionExemptIp {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetAntiSpywareProfileMicaEngineSpywareEnabledList {
    /**
     * The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
     */
    inlinePolicyAction: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetAntiSpywareProfileRule {
    /**
     * The Action param.
     */
    action: outputs.GetAntiSpywareProfileRuleAction;
    /**
     * The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
     */
    category: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
    /**
     * The Severities param.
     */
    severities: string[];
    /**
     * The ThreatName param. String length must exceed 4 characters.
     */
    threatName: string;
}

export interface GetAntiSpywareProfileRuleAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetAntiSpywareProfileRuleActionBlockIp;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetAntiSpywareProfileRuleActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareProfileThreatException {
    /**
     * The Action param.
     */
    action: outputs.GetAntiSpywareProfileThreatExceptionAction;
    /**
     * The ExemptIps param.
     */
    exemptIps: outputs.GetAntiSpywareProfileThreatExceptionExemptIp[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Notes param.
     */
    notes: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
}

export interface GetAntiSpywareProfileThreatExceptionAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetAntiSpywareProfileThreatExceptionActionBlockIp;
    /**
     * The Default param.
     */
    default: boolean;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetAntiSpywareProfileThreatExceptionActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareProfileThreatExceptionExemptIp {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetAntiSpywareSignatureDefaultAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetAntiSpywareSignatureDefaultActionBlockIp;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetAntiSpywareSignatureDefaultActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareSignatureListData {
    /**
     * The Bugtraqs param.
     */
    bugtraqs: string[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * The Cves param.
     */
    cves: string[];
    /**
     * The DefaultAction param.
     */
    defaultAction: outputs.GetAntiSpywareSignatureListDataDefaultAction;
    /**
     * The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
     */
    direction: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The References param.
     */
    references: string[];
    /**
     * The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
     */
    severity: string;
    /**
     * The Signature param.
     */
    signature: outputs.GetAntiSpywareSignatureListDataSignature;
    /**
     * threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
     */
    threatId: number;
    /**
     * The Threatname param. String length must not exceed 1024 characters.
     */
    threatname: string;
    /**
     * The Vendors param.
     */
    vendors: string[];
}

export interface GetAntiSpywareSignatureListDataDefaultAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetAntiSpywareSignatureListDataDefaultActionBlockIp;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetAntiSpywareSignatureListDataDefaultActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareSignatureListDataSignature {
    /**
     * The Combination param.
     */
    combination: outputs.GetAntiSpywareSignatureListDataSignatureCombination;
    /**
     * The Standards param.
     */
    standards: outputs.GetAntiSpywareSignatureListDataSignatureStandard[];
}

export interface GetAntiSpywareSignatureListDataSignatureCombination {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetAntiSpywareSignatureListDataSignatureCombinationAndCondition[];
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The TimeAttribute param.
     */
    timeAttribute: outputs.GetAntiSpywareSignatureListDataSignatureCombinationTimeAttribute;
}

export interface GetAntiSpywareSignatureListDataSignatureCombinationAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrCondition[];
}

export interface GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The ThreatId param.
     */
    threatId: string;
}

export interface GetAntiSpywareSignatureListDataSignatureCombinationTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval: number;
    /**
     * The Threshold param. Value must be between 1 and 255.
     */
    threshold: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareSignatureListDataSignatureStandard {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
     */
    scope: string;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrCondition[];
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperator;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatch;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Pattern param.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureSignature {
    /**
     * The Combination param.
     */
    combination: outputs.GetAntiSpywareSignatureSignatureCombination;
    /**
     * The Standards param.
     */
    standards: outputs.GetAntiSpywareSignatureSignatureStandard[];
}

export interface GetAntiSpywareSignatureSignatureCombination {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetAntiSpywareSignatureSignatureCombinationAndCondition[];
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The TimeAttribute param.
     */
    timeAttribute: outputs.GetAntiSpywareSignatureSignatureCombinationTimeAttribute;
}

export interface GetAntiSpywareSignatureSignatureCombinationAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetAntiSpywareSignatureSignatureCombinationAndConditionOrCondition[];
}

export interface GetAntiSpywareSignatureSignatureCombinationAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The ThreatId param.
     */
    threatId: string;
}

export interface GetAntiSpywareSignatureSignatureCombinationTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval: number;
    /**
     * The Threshold param. Value must be between 1 and 255.
     */
    threshold: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
     */
    trackBy: string;
}

export interface GetAntiSpywareSignatureSignatureStandard {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetAntiSpywareSignatureSignatureStandardAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
     */
    scope: string;
}

export interface GetAntiSpywareSignatureSignatureStandardAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrCondition[];
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Pattern param.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAppOverrideRuleListData {
    /**
     * The Application param.
     */
    application: string;
    /**
     * The Description param. String length must not exceed 1024 characters.
     */
    description: string;
    /**
     * The Destinations param.
     */
    destinations: string[];
    /**
     * The Disabled param. Default: `false`.
     */
    disabled: boolean;
    /**
     * The Froms param.
     */
    froms: string[];
    /**
     * The GroupTag param.
     */
    groupTag: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     */
    name: string;
    /**
     * The NegateDestination param. Default: `false`.
     */
    negateDestination: boolean;
    /**
     * The NegateSource param. Default: `false`.
     */
    negateSource: boolean;
    /**
     * The Port param. Value must be between 0 and 65535.
     */
    port: number;
    /**
     * The Protocol param. String must be one of these: `"tcp"`, `"udp"`.
     */
    protocol: string;
    /**
     * The Sources param.
     */
    sources: string[];
    /**
     * The Tags param.
     */
    tags: string[];
    /**
     * The Tos param.
     */
    tos: string[];
}

export interface GetApplicationDefault {
    /**
     * The IdentByIcmp6Type param.
     */
    identByIcmp6Type: outputs.GetApplicationDefaultIdentByIcmp6Type;
    /**
     * The IdentByIcmpType param.
     */
    identByIcmpType: outputs.GetApplicationDefaultIdentByIcmpType;
    /**
     * The IdentByIpProtocol param.
     */
    identByIpProtocol: string;
    /**
     * The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     */
    ports: string[];
}

export interface GetApplicationDefaultIdentByIcmp6Type {
    /**
     * The Code param.
     */
    code: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface GetApplicationDefaultIdentByIcmpType {
    /**
     * The Code param.
     */
    code: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface GetApplicationFilterListData {
    /**
     * The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     */
    categories: string[];
    /**
     * only True is a valid value.
     */
    evasive: boolean;
    /**
     * only True is a valid value.
     */
    excessiveBandwidthUse: boolean;
    /**
     * The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     */
    excludes: string[];
    /**
     * only True is a valid value.
     */
    hasKnownVulnerabilities: boolean;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * only True is a valid value.
     */
    isSaas: boolean;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * only True is a valid value.
     */
    newAppid: boolean;
    /**
     * only True is a valid value.
     */
    pervasive: boolean;
    /**
     * only True is a valid value.
     */
    proneToMisuse: boolean;
    /**
     * The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
     */
    risks: number[];
    /**
     * The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     */
    saasCertifications: string[];
    /**
     * The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     */
    saasRisks: string[];
    /**
     * The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     */
    subcategories: string[];
    /**
     * The Tagging param.
     */
    tagging: outputs.GetApplicationFilterListDataTagging;
    /**
     * The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     */
    technologies: string[];
    /**
     * only True is a valid value.
     */
    transfersFiles: boolean;
    /**
     * only True is a valid value.
     */
    tunnelsOtherApps: boolean;
    /**
     * only True is a valid value.
     */
    usedByMalware: boolean;
}

export interface GetApplicationFilterListDataTagging {
    /**
     * The NoTag param.
     */
    noTag: boolean;
    /**
     * The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
}

export interface GetApplicationFilterTagging {
    /**
     * The NoTag param.
     */
    noTag: boolean;
    /**
     * The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
}

export interface GetApplicationGroupListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     */
    members: string[];
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
}

export interface GetApplicationListData {
    /**
     * The AbleToTransferFile param.
     */
    ableToTransferFile: boolean;
    /**
     * The AlgDisableCapability param. String length must not exceed 127 characters.
     */
    algDisableCapability: string;
    /**
     * The Category param.
     */
    category: string;
    /**
     * The ConsumeBigBandwidth param.
     */
    consumeBigBandwidth: boolean;
    /**
     * The DataIdent param.
     */
    dataIdent: boolean;
    /**
     * The Default param.
     */
    default: outputs.GetApplicationListDataDefault;
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description: string;
    /**
     * The EvasiveBehavior param.
     */
    evasiveBehavior: boolean;
    /**
     * The FileTypeIdent param.
     */
    fileTypeIdent: boolean;
    /**
     * The HasKnownVulnerability param.
     */
    hasKnownVulnerability: boolean;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The NoAppidCaching param.
     */
    noAppidCaching: boolean;
    /**
     * The ParentApp param. String length must not exceed 127 characters.
     */
    parentApp: string;
    /**
     * The PervasiveUse param.
     */
    pervasiveUse: boolean;
    /**
     * The ProneToMisuse param.
     */
    proneToMisuse: boolean;
    /**
     * The Risk param. Value must be between 1 and 5.
     */
    risk: number;
    /**
     * The Signatures param.
     */
    signatures: outputs.GetApplicationListDataSignature[];
    /**
     * The Subcategory param. String length must not exceed 63 characters.
     */
    subcategory: string;
    /**
     * timeout for half-close session in seconds. Value must be between 1 and 604800.
     */
    tcpHalfClosedTimeout: number;
    /**
     * timeout for session in timeWait state in seconds. Value must be between 1 and 600.
     */
    tcpTimeWaitTimeout: number;
    /**
     * timeout in seconds. Value must be between 0 and 604800.
     */
    tcpTimeout: number;
    /**
     * The Technology param. String length must not exceed 63 characters.
     */
    technology: string;
    /**
     * timeout in seconds. Value must be between 0 and 604800.
     */
    timeout: number;
    /**
     * The TunnelApplications param.
     */
    tunnelApplications: boolean;
    /**
     * The TunnelOtherApplication param.
     */
    tunnelOtherApplication: boolean;
    /**
     * timeout in seconds. Value must be between 0 and 604800.
     */
    udpTimeout: number;
    /**
     * The UsedByMalware param.
     */
    usedByMalware: boolean;
    /**
     * The VirusIdent param.
     */
    virusIdent: boolean;
}

export interface GetApplicationListDataDefault {
    /**
     * The IdentByIcmp6Type param.
     */
    identByIcmp6Type: outputs.GetApplicationListDataDefaultIdentByIcmp6Type;
    /**
     * The IdentByIcmpType param.
     */
    identByIcmpType: outputs.GetApplicationListDataDefaultIdentByIcmpType;
    /**
     * The IdentByIpProtocol param.
     */
    identByIpProtocol: string;
    /**
     * The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     */
    ports: string[];
}

export interface GetApplicationListDataDefaultIdentByIcmp6Type {
    /**
     * The Code param.
     */
    code: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface GetApplicationListDataDefaultIdentByIcmpType {
    /**
     * The Code param.
     */
    code: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface GetApplicationListDataSignature {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetApplicationListDataSignatureAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
     */
    scope: string;
}

export interface GetApplicationListDataSignatureAndCondition {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetApplicationListDataSignatureAndConditionOrCondition[];
}

export interface GetApplicationListDataSignatureAndConditionOrCondition {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperator;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatch;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
     */
    mask: string;
    /**
     * The Position param. String length must not exceed 127 characters.
     */
    position: string;
    /**
     * The Value param. String length must not exceed 10 characters.
     */
    value: string;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Pattern param. String length must not exceed 127 characters.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetApplicationSignature {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetApplicationSignatureAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
     */
    scope: string;
}

export interface GetApplicationSignatureAndCondition {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetApplicationSignatureAndConditionOrCondition[];
}

export interface GetApplicationSignatureAndConditionOrCondition {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.GetApplicationSignatureAndConditionOrConditionOperator;
}

export interface GetApplicationSignatureAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo: outputs.GetApplicationSignatureAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan: outputs.GetApplicationSignatureAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan: outputs.GetApplicationSignatureAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch: outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch;
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
     */
    mask: string;
    /**
     * The Position param. String length must not exceed 127 characters.
     */
    position: string;
    /**
     * The Value param. String length must not exceed 10 characters.
     */
    value: string;
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param. String length must not exceed 127 characters.
     */
    context: string;
    /**
     * The Pattern param. String length must not exceed 127 characters.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetAuthenticationPortalListData {
    /**
     * The AuthenticationProfile param.
     */
    authenticationProfile: string;
    /**
     * The CertificateProfile param.
     */
    certificateProfile: string;
    /**
     * The GpUdpPort param. Value must be between 1 and 65535.
     */
    gpUdpPort: number;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The IdleTimer param. Value must be between 1 and 1440.
     */
    idleTimer: number;
    /**
     * The RedirectHost param.
     */
    redirectHost: string;
    /**
     * The Timer param. Value must be between 1 and 1440.
     */
    timer: number;
    /**
     * The TlsServiceProfile param.
     */
    tlsServiceProfile: string;
}

export interface GetAuthenticationProfileListData {
    /**
     * The AllowList param.
     */
    allowLists: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Lockout param.
     */
    lockout: outputs.GetAuthenticationProfileListDataLockout;
    /**
     * The Method param.
     */
    method: outputs.GetAuthenticationProfileListDataMethod;
    /**
     * The MultiFactorAuth param.
     */
    multiFactorAuth: outputs.GetAuthenticationProfileListDataMultiFactorAuth;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The SingleSignOn param.
     */
    singleSignOn: outputs.GetAuthenticationProfileListDataSingleSignOn;
    /**
     * The UserDomain param. String length must not exceed 63 characters.
     */
    userDomain: string;
    /**
     * The UsernameModifier param. String must be one of these: `"%USERINPUT%"`, `"%USERINPUT%@%USERDOMAIN%"`, `"%USERDOMAIN%\\%USERINPUT%"`.
     */
    usernameModifier: string;
}

export interface GetAuthenticationProfileListDataLockout {
    /**
     * The FailedAttempts param. Value must be between 0 and 10.
     */
    failedAttempts: number;
    /**
     * The LockoutTime param. Value must be between 0 and 60.
     */
    lockoutTime: number;
}

export interface GetAuthenticationProfileListDataMethod {
    /**
     * The Cloud param.
     */
    cloud: outputs.GetAuthenticationProfileListDataMethodCloud;
    /**
     * The Kerberos param.
     */
    kerberos: outputs.GetAuthenticationProfileListDataMethodKerberos;
    /**
     * The Ldap param.
     */
    ldap: outputs.GetAuthenticationProfileListDataMethodLdap;
    /**
     * The LocalDatabase param.
     */
    localDatabase: boolean;
    /**
     * The Radius param.
     */
    radius: outputs.GetAuthenticationProfileListDataMethodRadius;
    /**
     * The SamlIdp param.
     */
    samlIdp: outputs.GetAuthenticationProfileListDataMethodSamlIdp;
    /**
     * The Tacplus param.
     */
    tacplus: outputs.GetAuthenticationProfileListDataMethodTacplus;
}

export interface GetAuthenticationProfileListDataMethodCloud {
    /**
     * The tenant profile name.
     */
    profileName: string;
}

export interface GetAuthenticationProfileListDataMethodKerberos {
    /**
     * The Realm param.
     */
    realm: string;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileListDataMethodLdap {
    /**
     * The LoginAttribute param.
     */
    loginAttribute: string;
    /**
     * The PasswdExpDays param.
     */
    passwdExpDays: number;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileListDataMethodRadius {
    /**
     * The Checkgroup param.
     */
    checkgroup: boolean;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileListDataMethodSamlIdp {
    /**
     * The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
     */
    attributeNameUsergroup: string;
    /**
     * The AttributeNameUsername param. String length must be between 1 and 63 characters.
     */
    attributeNameUsername: string;
    /**
     * The CertificateProfile param. String length must not exceed 31 characters.
     */
    certificateProfile: string;
    /**
     * The EnableSingleLogout param.
     */
    enableSingleLogout: boolean;
    /**
     * The RequestSigningCertificate param. String length must not exceed 64 characters.
     */
    requestSigningCertificate: string;
    /**
     * The ServerProfile param. String length must not exceed 63 characters.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileListDataMethodTacplus {
    /**
     * The Checkgroup param.
     */
    checkgroup: boolean;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileListDataMultiFactorAuth {
    /**
     * The Factors param.
     */
    factors: string[];
    /**
     * The MfaEnable param.
     */
    mfaEnable: boolean;
}

export interface GetAuthenticationProfileListDataSingleSignOn {
    /**
     * The KerberosKeytab param. String length must not exceed 8192 characters.
     */
    kerberosKeytab: string;
    /**
     * The Realm param. String length must not exceed 127 characters.
     */
    realm: string;
}

export interface GetAuthenticationProfileLockout {
    /**
     * The FailedAttempts param. Value must be between 0 and 10.
     */
    failedAttempts: number;
    /**
     * The LockoutTime param. Value must be between 0 and 60.
     */
    lockoutTime: number;
}

export interface GetAuthenticationProfileMethod {
    /**
     * The Cloud param.
     */
    cloud: outputs.GetAuthenticationProfileMethodCloud;
    /**
     * The Kerberos param.
     */
    kerberos: outputs.GetAuthenticationProfileMethodKerberos;
    /**
     * The Ldap param.
     */
    ldap: outputs.GetAuthenticationProfileMethodLdap;
    /**
     * The LocalDatabase param.
     */
    localDatabase: boolean;
    /**
     * The Radius param.
     */
    radius: outputs.GetAuthenticationProfileMethodRadius;
    /**
     * The SamlIdp param.
     */
    samlIdp: outputs.GetAuthenticationProfileMethodSamlIdp;
    /**
     * The Tacplus param.
     */
    tacplus: outputs.GetAuthenticationProfileMethodTacplus;
}

export interface GetAuthenticationProfileMethodCloud {
    /**
     * The tenant profile name.
     */
    profileName: string;
}

export interface GetAuthenticationProfileMethodKerberos {
    /**
     * The Realm param.
     */
    realm: string;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileMethodLdap {
    /**
     * The LoginAttribute param.
     */
    loginAttribute: string;
    /**
     * The PasswdExpDays param.
     */
    passwdExpDays: number;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileMethodRadius {
    /**
     * The Checkgroup param.
     */
    checkgroup: boolean;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileMethodSamlIdp {
    /**
     * The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
     */
    attributeNameUsergroup: string;
    /**
     * The AttributeNameUsername param. String length must be between 1 and 63 characters.
     */
    attributeNameUsername: string;
    /**
     * The CertificateProfile param. String length must not exceed 31 characters.
     */
    certificateProfile: string;
    /**
     * The EnableSingleLogout param.
     */
    enableSingleLogout: boolean;
    /**
     * The RequestSigningCertificate param. String length must not exceed 64 characters.
     */
    requestSigningCertificate: string;
    /**
     * The ServerProfile param. String length must not exceed 63 characters.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileMethodTacplus {
    /**
     * The Checkgroup param.
     */
    checkgroup: boolean;
    /**
     * The ServerProfile param.
     */
    serverProfile: string;
}

export interface GetAuthenticationProfileMultiFactorAuth {
    /**
     * The Factors param.
     */
    factors: string[];
    /**
     * The MfaEnable param.
     */
    mfaEnable: boolean;
}

export interface GetAuthenticationProfileSingleSignOn {
    /**
     * The KerberosKeytab param. String length must not exceed 8192 characters.
     */
    kerberosKeytab: string;
    /**
     * The Realm param. String length must not exceed 127 characters.
     */
    realm: string;
}

export interface GetAuthenticationRuleListData {
    /**
     * the authentication profile name to apply to authentication rule.
     */
    authenticationEnforcement: string;
    /**
     * The Categories param.
     */
    categories: string[];
    /**
     * The Description param.
     */
    description: string;
    /**
     * The DestinationHips param.
     */
    destinationHips: string[];
    /**
     * The Destinations param.
     */
    destinations: string[];
    /**
     * The Disabled param. Default: `false`.
     */
    disabled: boolean;
    /**
     * The Froms param.
     */
    froms: string[];
    /**
     * The GroupTag param.
     */
    groupTag: string;
    /**
     * The HipProfiles param.
     */
    hipProfiles: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The LogAuthenticationTimeout param. Default: `false`.
     */
    logAuthenticationTimeout: boolean;
    /**
     * The LogSetting param.
     */
    logSetting: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The NegateDestination param. Default: `false`.
     */
    negateDestination: boolean;
    /**
     * The NegateSource param. Default: `false`.
     */
    negateSource: boolean;
    /**
     * The Services param.
     */
    services: string[];
    /**
     * The SourceHips param.
     */
    sourceHips: string[];
    /**
     * The SourceUsers param.
     */
    sourceUsers: string[];
    /**
     * The Sources param.
     */
    sources: string[];
    /**
     * The Tags param.
     */
    tags: string[];
    /**
     * The Timeout param. Value must be between 1 and 1440.
     */
    timeout: number;
    /**
     * The Tos param.
     */
    tos: string[];
}

export interface GetAuthenticationSequenceListData {
    /**
     * The AuthenticationProfiles param.
     */
    authenticationProfiles: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The UseDomainFindProfile param. Default: `true`.
     */
    useDomainFindProfile: boolean;
}

export interface GetAutoTagActionsListData {
    /**
     * The Actions param.
     */
    actions: outputs.GetAutoTagActionsListDataAction[];
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description: string;
    /**
     * Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
     */
    filter: string;
    /**
     * The LogType param.
     */
    logType: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The Quarantine param.
     */
    quarantine: boolean;
    /**
     * The SendToPanorama param.
     */
    sendToPanorama: boolean;
}

export interface GetAutoTagActionsListDataAction {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Type param.
     */
    type: outputs.GetAutoTagActionsListDataActionType;
}

export interface GetAutoTagActionsListDataActionType {
    /**
     * The Tagging param.
     */
    tagging: outputs.GetAutoTagActionsListDataActionTypeTagging;
}

export interface GetAutoTagActionsListDataActionTypeTagging {
    /**
     * Add or Remove tag option. String must be one of these: `"add-tag"`, `"remove-tag"`.
     */
    action: string;
    /**
     * Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
    /**
     * Source or Destination Address, User, X-Forwarded-For Address.
     */
    target: string;
    /**
     * The Timeout param.
     */
    timeout: number;
}

export interface GetCertificateProfileCaCertificate {
    /**
     * The DefaultOcspUrl param.
     */
    defaultOcspUrl: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OcspVerifyCert param.
     */
    ocspVerifyCert: string;
    /**
     * The TemplateName param.
     */
    templateName: string;
}

export interface GetCertificateProfileListData {
    /**
     * The BlockExpiredCert param.
     */
    blockExpiredCert: boolean;
    /**
     * The BlockTimeoutCert param.
     */
    blockTimeoutCert: boolean;
    /**
     * The BlockUnauthenticatedCert param.
     */
    blockUnauthenticatedCert: boolean;
    /**
     * The BlockUnknownCert param.
     */
    blockUnknownCert: boolean;
    /**
     * The CaCertificates param.
     */
    caCertificates: outputs.GetCertificateProfileListDataCaCertificate[];
    /**
     * The CertStatusTimeout param.
     */
    certStatusTimeout: string;
    /**
     * The CrlReceiveTimeout param.
     */
    crlReceiveTimeout: string;
    /**
     * The Domain param.
     */
    domain: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The OcspReceiveTimeout param.
     */
    ocspReceiveTimeout: string;
    /**
     * The UseCrl param.
     */
    useCrl: boolean;
    /**
     * The UseOcsp param.
     */
    useOcsp: boolean;
    /**
     * The UsernameField param.
     */
    usernameField: outputs.GetCertificateProfileListDataUsernameField;
}

export interface GetCertificateProfileListDataCaCertificate {
    /**
     * The DefaultOcspUrl param.
     */
    defaultOcspUrl: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OcspVerifyCert param.
     */
    ocspVerifyCert: string;
    /**
     * The TemplateName param.
     */
    templateName: string;
}

export interface GetCertificateProfileListDataUsernameField {
    /**
     * The Subject param. String must be one of these: `"common-name"`.
     */
    subject: string;
    /**
     * The SubjectAlt param. String must be one of these: `"email"`.
     */
    subjectAlt: string;
}

export interface GetCertificateProfileUsernameField {
    /**
     * The Subject param. String must be one of these: `"common-name"`.
     */
    subject: string;
    /**
     * The SubjectAlt param. String must be one of these: `"email"`.
     */
    subjectAlt: string;
}

export interface GetDecryptionProfileListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Must start with alphanumeric char and should contain only alphanemeric, underscore, hyphen, dot or space. String validation regex: `^[A-Za-z0-9]{1}[A-Za-z0-9_\-\.\s]{0,}$`.
     */
    name: string;
    /**
     * The SslForwardProxy param.
     */
    sslForwardProxy: outputs.GetDecryptionProfileListDataSslForwardProxy;
    /**
     * The SslInboundProxy param.
     */
    sslInboundProxy: outputs.GetDecryptionProfileListDataSslInboundProxy;
    /**
     * The SslNoProxy param.
     */
    sslNoProxy: outputs.GetDecryptionProfileListDataSslNoProxy;
    /**
     * The SslProtocolSettings param.
     */
    sslProtocolSettings: outputs.GetDecryptionProfileListDataSslProtocolSettings;
}

export interface GetDecryptionProfileListDataSslForwardProxy {
    /**
     * The AutoIncludeAltname param. Default: `false`.
     */
    autoIncludeAltname: boolean;
    /**
     * The BlockClientCert param. Default: `false`.
     */
    blockClientCert: boolean;
    /**
     * The BlockExpiredCertificate param. Default: `false`.
     */
    blockExpiredCertificate: boolean;
    /**
     * The BlockTimeoutCert param. Default: `false`.
     */
    blockTimeoutCert: boolean;
    /**
     * The BlockTls13DowngradeNoResource param. Default: `false`.
     */
    blockTls13DowngradeNoResource: boolean;
    /**
     * The BlockUnknownCert param. Default: `false`.
     */
    blockUnknownCert: boolean;
    /**
     * The BlockUnsupportedCipher param. Default: `false`.
     */
    blockUnsupportedCipher: boolean;
    /**
     * The BlockUnsupportedVersion param. Default: `false`.
     */
    blockUnsupportedVersion: boolean;
    /**
     * The BlockUntrustedIssuer param. Default: `false`.
     */
    blockUntrustedIssuer: boolean;
    /**
     * The RestrictCertExts param. Default: `false`.
     */
    restrictCertExts: boolean;
    /**
     * The StripAlpn param. Default: `false`.
     */
    stripAlpn: boolean;
}

export interface GetDecryptionProfileListDataSslInboundProxy {
    /**
     * The BlockIfHsmUnavailable param. Default: `false`.
     */
    blockIfHsmUnavailable: boolean;
    /**
     * The BlockIfNoResource param. Default: `false`.
     */
    blockIfNoResource: boolean;
    /**
     * The BlockUnsupportedCipher param. Default: `false`.
     */
    blockUnsupportedCipher: boolean;
    /**
     * The BlockUnsupportedVersion param. Default: `false`.
     */
    blockUnsupportedVersion: boolean;
}

export interface GetDecryptionProfileListDataSslNoProxy {
    /**
     * The BlockExpiredCertificate param. Default: `false`.
     */
    blockExpiredCertificate: boolean;
    /**
     * The BlockUntrustedIssuer param. Default: `false`.
     */
    blockUntrustedIssuer: boolean;
}

export interface GetDecryptionProfileListDataSslProtocolSettings {
    /**
     * The AuthAlgoMd5 param. Default: `true`.
     */
    authAlgoMd5: boolean;
    /**
     * The AuthAlgoSha1 param. Default: `true`.
     */
    authAlgoSha1: boolean;
    /**
     * The AuthAlgoSha256 param. Default: `true`.
     */
    authAlgoSha256: boolean;
    /**
     * The AuthAlgoSha384 param. Default: `true`.
     */
    authAlgoSha384: boolean;
    /**
     * The EncAlgo3des param. Default: `true`.
     */
    encAlgo3des: boolean;
    /**
     * The EncAlgoAes128Cbc param. Default: `true`.
     */
    encAlgoAes128Cbc: boolean;
    /**
     * The EncAlgoAes128Gcm param. Default: `true`.
     */
    encAlgoAes128Gcm: boolean;
    /**
     * The EncAlgoAes256Cbc param. Default: `true`.
     */
    encAlgoAes256Cbc: boolean;
    /**
     * The EncAlgoAes256Gcm param. Default: `true`.
     */
    encAlgoAes256Gcm: boolean;
    /**
     * The EncAlgoChacha20Poly1305 param. Default: `true`.
     */
    encAlgoChacha20Poly1305: boolean;
    /**
     * The EncAlgoRc4 param. Default: `true`.
     */
    encAlgoRc4: boolean;
    /**
     * The KeyxchgAlgoDhe param. Default: `true`.
     */
    keyxchgAlgoDhe: boolean;
    /**
     * The KeyxchgAlgoEcdhe param. Default: `true`.
     */
    keyxchgAlgoEcdhe: boolean;
    /**
     * The KeyxchgAlgoRsa param. Default: `true`.
     */
    keyxchgAlgoRsa: boolean;
    /**
     * The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
     */
    maxVersion: string;
    /**
     * The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
     */
    minVersion: string;
}

export interface GetDecryptionProfileSslForwardProxy {
    /**
     * The AutoIncludeAltname param. Default: `false`.
     */
    autoIncludeAltname: boolean;
    /**
     * The BlockClientCert param. Default: `false`.
     */
    blockClientCert: boolean;
    /**
     * The BlockExpiredCertificate param. Default: `false`.
     */
    blockExpiredCertificate: boolean;
    /**
     * The BlockTimeoutCert param. Default: `false`.
     */
    blockTimeoutCert: boolean;
    /**
     * The BlockTls13DowngradeNoResource param. Default: `false`.
     */
    blockTls13DowngradeNoResource: boolean;
    /**
     * The BlockUnknownCert param. Default: `false`.
     */
    blockUnknownCert: boolean;
    /**
     * The BlockUnsupportedCipher param. Default: `false`.
     */
    blockUnsupportedCipher: boolean;
    /**
     * The BlockUnsupportedVersion param. Default: `false`.
     */
    blockUnsupportedVersion: boolean;
    /**
     * The BlockUntrustedIssuer param. Default: `false`.
     */
    blockUntrustedIssuer: boolean;
    /**
     * The RestrictCertExts param. Default: `false`.
     */
    restrictCertExts: boolean;
    /**
     * The StripAlpn param. Default: `false`.
     */
    stripAlpn: boolean;
}

export interface GetDecryptionProfileSslInboundProxy {
    /**
     * The BlockIfHsmUnavailable param. Default: `false`.
     */
    blockIfHsmUnavailable: boolean;
    /**
     * The BlockIfNoResource param. Default: `false`.
     */
    blockIfNoResource: boolean;
    /**
     * The BlockUnsupportedCipher param. Default: `false`.
     */
    blockUnsupportedCipher: boolean;
    /**
     * The BlockUnsupportedVersion param. Default: `false`.
     */
    blockUnsupportedVersion: boolean;
}

export interface GetDecryptionProfileSslNoProxy {
    /**
     * The BlockExpiredCertificate param. Default: `false`.
     */
    blockExpiredCertificate: boolean;
    /**
     * The BlockUntrustedIssuer param. Default: `false`.
     */
    blockUntrustedIssuer: boolean;
}

export interface GetDecryptionProfileSslProtocolSettings {
    /**
     * The AuthAlgoMd5 param. Default: `true`.
     */
    authAlgoMd5: boolean;
    /**
     * The AuthAlgoSha1 param. Default: `true`.
     */
    authAlgoSha1: boolean;
    /**
     * The AuthAlgoSha256 param. Default: `true`.
     */
    authAlgoSha256: boolean;
    /**
     * The AuthAlgoSha384 param. Default: `true`.
     */
    authAlgoSha384: boolean;
    /**
     * The EncAlgo3des param. Default: `true`.
     */
    encAlgo3des: boolean;
    /**
     * The EncAlgoAes128Cbc param. Default: `true`.
     */
    encAlgoAes128Cbc: boolean;
    /**
     * The EncAlgoAes128Gcm param. Default: `true`.
     */
    encAlgoAes128Gcm: boolean;
    /**
     * The EncAlgoAes256Cbc param. Default: `true`.
     */
    encAlgoAes256Cbc: boolean;
    /**
     * The EncAlgoAes256Gcm param. Default: `true`.
     */
    encAlgoAes256Gcm: boolean;
    /**
     * The EncAlgoChacha20Poly1305 param. Default: `true`.
     */
    encAlgoChacha20Poly1305: boolean;
    /**
     * The EncAlgoRc4 param. Default: `true`.
     */
    encAlgoRc4: boolean;
    /**
     * The KeyxchgAlgoDhe param. Default: `true`.
     */
    keyxchgAlgoDhe: boolean;
    /**
     * The KeyxchgAlgoEcdhe param. Default: `true`.
     */
    keyxchgAlgoEcdhe: boolean;
    /**
     * The KeyxchgAlgoRsa param. Default: `true`.
     */
    keyxchgAlgoRsa: boolean;
    /**
     * The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
     */
    maxVersion: string;
    /**
     * The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
     */
    minVersion: string;
}

export interface GetDecryptionRuleListData {
    /**
     * The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
     */
    action: string;
    /**
     * The Categories param.
     */
    categories: string[];
    /**
     * The Description param.
     */
    description: string;
    /**
     * The DestinationHips param.
     */
    destinationHips: string[];
    /**
     * The Destinations param.
     */
    destinations: string[];
    /**
     * The Disabled param.
     */
    disabled: boolean;
    /**
     * The Froms param.
     */
    froms: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The LogFail param.
     */
    logFail: boolean;
    /**
     * The LogSetting param.
     */
    logSetting: string;
    /**
     * The LogSuccess param.
     */
    logSuccess: boolean;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The NegateDestination param.
     */
    negateDestination: boolean;
    /**
     * The NegateSource param.
     */
    negateSource: boolean;
    /**
     * The Profile param.
     */
    profile: string;
    /**
     * The Services param.
     */
    services: string[];
    /**
     * The SourceHips param.
     */
    sourceHips: string[];
    /**
     * The SourceUsers param.
     */
    sourceUsers: string[];
    /**
     * The Sources param.
     */
    sources: string[];
    /**
     * The Tags param.
     */
    tags: string[];
    /**
     * The Tos param.
     */
    tos: string[];
    /**
     * The Type param.
     */
    type: outputs.GetDecryptionRuleListDataType;
}

export interface GetDecryptionRuleListDataType {
    /**
     * The SslForwardProxy param.
     */
    sslForwardProxy: boolean;
    /**
     * add the certificate name for SSL inbound inspection.
     */
    sslInboundInspection: string;
}

export interface GetDecryptionRuleType {
    /**
     * The SslForwardProxy param.
     */
    sslForwardProxy: boolean;
    /**
     * add the certificate name for SSL inbound inspection.
     */
    sslInboundInspection: string;
}

export interface GetDeviceAvailableLicensess {
    /**
     * The Authcode param.
     */
    authcode: string;
    /**
     * The Expires param.
     */
    expires: string;
    /**
     * The Feature param.
     */
    feature: string;
    /**
     * The Issued param.
     */
    issued: string;
}

export interface GetDeviceInstalledLicense {
    /**
     * The Authcode param.
     */
    authcode: string;
    /**
     * The Expired param.
     */
    expired: string;
    /**
     * The Expires param.
     */
    expires: string;
    /**
     * The Feature param.
     */
    feature: string;
    /**
     * The Issued param.
     */
    issued: string;
}

export interface GetDeviceListData {
    /**
     * The AntiVirusVersion param.
     */
    antiVirusVersion: string;
    /**
     * The AppReleaseDate param.
     */
    appReleaseDate: string;
    /**
     * The AppVersion param.
     */
    appVersion: string;
    /**
     * The AvReleaseDate param.
     */
    avReleaseDate: string;
    /**
     * The AvailableLicensess param.
     */
    availableLicensesses: outputs.GetDeviceListDataAvailableLicensess[];
    /**
     * The ConnectedSince param.
     */
    connectedSince: string;
    /**
     * The DevCertDetail param.
     */
    devCertDetail: string;
    /**
     * The DevCertExpiryDate param.
     */
    devCertExpiryDate: string;
    /**
     * The Family param.
     */
    family: string;
    /**
     * The GpClientVerion param.
     */
    gpClientVerion: string;
    /**
     * The GpDataVersion param.
     */
    gpDataVersion: string;
    /**
     * The HaPeerSerial param.
     */
    haPeerSerial: string;
    /**
     * The HaPeerState param.
     */
    haPeerState: string;
    /**
     * The HaState param.
     */
    haState: string;
    /**
     * The Hostname param.
     */
    hostname: string;
    /**
     * The Id param.
     */
    id: string;
    /**
     * The InstalledLicenses param.
     */
    installedLicenses: outputs.GetDeviceListDataInstalledLicense[];
    /**
     * The IotReleaseDate param.
     */
    iotReleaseDate: string;
    /**
     * The IotVersion param.
     */
    iotVersion: string;
    /**
     * The IpAddress param.
     */
    ipAddress: string;
    /**
     * The IpV6Address param.
     */
    ipV6Address: string;
    /**
     * The IsConnected param.
     */
    isConnected: boolean;
    /**
     * The LicenseMatch param.
     */
    licenseMatch: boolean;
    /**
     * The LogDbVersion param.
     */
    logDbVersion: string;
    /**
     * The MacAddress param.
     */
    macAddress: string;
    /**
     * The Model param.
     */
    model: string;
    /**
     * The SoftwareVersion param.
     */
    softwareVersion: string;
    /**
     * The ThreatReleaseDate param.
     */
    threatReleaseDate: string;
    /**
     * The ThreatVersion param.
     */
    threatVersion: string;
    /**
     * The Uptime param.
     */
    uptime: string;
    /**
     * The UrlDbType param.
     */
    urlDbType: string;
    /**
     * The UrlDbVer param.
     */
    urlDbVer: string;
    /**
     * The VmState param.
     */
    vmState: string;
    /**
     * The WfReleaseDate param.
     */
    wfReleaseDate: string;
    /**
     * The WfVer param.
     */
    wfVer: string;
}

export interface GetDeviceListDataAvailableLicensess {
    /**
     * The Authcode param.
     */
    authcode: string;
    /**
     * The Expires param.
     */
    expires: string;
    /**
     * The Feature param.
     */
    feature: string;
    /**
     * The Issued param.
     */
    issued: string;
}

export interface GetDeviceListDataInstalledLicense {
    /**
     * The Authcode param.
     */
    authcode: string;
    /**
     * The Expired param.
     */
    expired: string;
    /**
     * The Expires param.
     */
    expires: string;
    /**
     * The Feature param.
     */
    feature: string;
    /**
     * The Issued param.
     */
    issued: string;
}

export interface GetDnsSecurityProfileBotnetDomains {
    /**
     * The DnsSecurityCategories param.
     */
    dnsSecurityCategories: outputs.GetDnsSecurityProfileBotnetDomainsDnsSecurityCategory[];
    /**
     * The Lists param.
     */
    lists: outputs.GetDnsSecurityProfileBotnetDomainsList[];
    /**
     * The Sinkhole param.
     */
    sinkhole: outputs.GetDnsSecurityProfileBotnetDomainsSinkhole;
    /**
     * The Whitelists param.
     */
    whitelists: outputs.GetDnsSecurityProfileBotnetDomainsWhitelist[];
}

export interface GetDnsSecurityProfileBotnetDomainsDnsSecurityCategory {
    /**
     * The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
     */
    action: string;
    /**
     * The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
     */
    logLevel: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
}

export interface GetDnsSecurityProfileBotnetDomainsList {
    /**
     * The Action param.
     */
    action: outputs.GetDnsSecurityProfileBotnetDomainsListAction;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
}

export interface GetDnsSecurityProfileBotnetDomainsListAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The Block param.
     */
    block: boolean;
    /**
     * The Sinkhole param.
     */
    sinkhole: boolean;
}

export interface GetDnsSecurityProfileBotnetDomainsSinkhole {
    /**
     * The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
     */
    ipv4Address: string;
    /**
     * The Ipv6Address param. String must be one of these: `"::1"`.
     */
    ipv6Address: string;
}

export interface GetDnsSecurityProfileBotnetDomainsWhitelist {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetDnsSecurityProfileListData {
    /**
     * The BotnetDomains param.
     */
    botnetDomains: outputs.GetDnsSecurityProfileListDataBotnetDomains;
    /**
     * The Description param.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetDnsSecurityProfileListDataBotnetDomains {
    /**
     * The DnsSecurityCategories param.
     */
    dnsSecurityCategories: outputs.GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory[];
    /**
     * The Lists param.
     */
    lists: outputs.GetDnsSecurityProfileListDataBotnetDomainsList[];
    /**
     * The Sinkhole param.
     */
    sinkhole: outputs.GetDnsSecurityProfileListDataBotnetDomainsSinkhole;
    /**
     * The Whitelists param.
     */
    whitelists: outputs.GetDnsSecurityProfileListDataBotnetDomainsWhitelist[];
}

export interface GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory {
    /**
     * The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
     */
    action: string;
    /**
     * The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
     */
    logLevel: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
}

export interface GetDnsSecurityProfileListDataBotnetDomainsList {
    /**
     * The Action param.
     */
    action: outputs.GetDnsSecurityProfileListDataBotnetDomainsListAction;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
}

export interface GetDnsSecurityProfileListDataBotnetDomainsListAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The Block param.
     */
    block: boolean;
    /**
     * The Sinkhole param.
     */
    sinkhole: boolean;
}

export interface GetDnsSecurityProfileListDataBotnetDomainsSinkhole {
    /**
     * The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
     */
    ipv4Address: string;
    /**
     * The Ipv6Address param. String must be one of these: `"::1"`.
     */
    ipv6Address: string;
}

export interface GetDnsSecurityProfileListDataBotnetDomainsWhitelist {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetDynamicUserGroupListData {
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description: string;
    /**
     * tag-based filter. String length must not exceed 2047 characters.
     */
    filter: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
}

export interface GetExternalDynamicListListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The Type param.
     */
    type: outputs.GetExternalDynamicListListDataType;
}

export interface GetExternalDynamicListListDataType {
    /**
     * The Domain param.
     */
    domain: outputs.GetExternalDynamicListListDataTypeDomain;
    /**
     * The Imei param.
     */
    imei: outputs.GetExternalDynamicListListDataTypeImei;
    /**
     * The Imsi param.
     */
    imsi: outputs.GetExternalDynamicListListDataTypeImsi;
    /**
     * The Ip param.
     */
    ip: outputs.GetExternalDynamicListListDataTypeIp;
    /**
     * The PredefinedIp param.
     */
    predefinedIp: outputs.GetExternalDynamicListListDataTypePredefinedIp;
    /**
     * The PredefinedUrl param.
     */
    predefinedUrl: outputs.GetExternalDynamicListListDataTypePredefinedUrl;
    /**
     * The Url param.
     */
    url: outputs.GetExternalDynamicListListDataTypeUrl;
}

export interface GetExternalDynamicListListDataTypeDomain {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The DomainAuth param.
     */
    domainAuth: outputs.GetExternalDynamicListListDataTypeDomainDomainAuth;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * Enable/Disable expand domain. Default: `false`.
     */
    expandDomain: boolean;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListListDataTypeDomainRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListListDataTypeDomainDomainAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListListDataTypeDomainRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListListDataTypeDomainRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListListDataTypeDomainRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListListDataTypeDomainRecurringWeekly;
}

export interface GetExternalDynamicListListDataTypeDomainRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListListDataTypeDomainRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListListDataTypeDomainRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListListDataTypeImei {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     */
    exceptionLists: string[];
    /**
     * The ImeiAuth param.
     */
    imeiAuth: outputs.GetExternalDynamicListListDataTypeImeiImeiAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListListDataTypeImeiRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListListDataTypeImeiImeiAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListListDataTypeImeiRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListListDataTypeImeiRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListListDataTypeImeiRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListListDataTypeImeiRecurringWeekly;
}

export interface GetExternalDynamicListListDataTypeImeiRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListListDataTypeImeiRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListListDataTypeImeiRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListListDataTypeImsi {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
     */
    exceptionLists: string[];
    /**
     * The ImsiAuth param.
     */
    imsiAuth: outputs.GetExternalDynamicListListDataTypeImsiImsiAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListListDataTypeImsiRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListListDataTypeImsiImsiAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListListDataTypeImsiRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListListDataTypeImsiRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListListDataTypeImsiRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListListDataTypeImsiRecurringWeekly;
}

export interface GetExternalDynamicListListDataTypeImsiRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListListDataTypeImsiRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListListDataTypeImsiRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListListDataTypeIp {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The IpAuth param.
     */
    ipAuth: outputs.GetExternalDynamicListListDataTypeIpIpAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListListDataTypeIpRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListListDataTypeIpIpAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListListDataTypeIpRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListListDataTypeIpRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListListDataTypeIpRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListListDataTypeIpRecurringWeekly;
}

export interface GetExternalDynamicListListDataTypeIpRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListListDataTypeIpRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListListDataTypeIpRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListListDataTypePredefinedIp {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The Url param.
     */
    url: string;
}

export interface GetExternalDynamicListListDataTypePredefinedUrl {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The Url param.
     */
    url: string;
}

export interface GetExternalDynamicListListDataTypeUrl {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListListDataTypeUrlRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
    /**
     * The UrlAuth param.
     */
    urlAuth: outputs.GetExternalDynamicListListDataTypeUrlUrlAuth;
}

export interface GetExternalDynamicListListDataTypeUrlRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListListDataTypeUrlRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListListDataTypeUrlRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListListDataTypeUrlRecurringWeekly;
}

export interface GetExternalDynamicListListDataTypeUrlRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListListDataTypeUrlRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListListDataTypeUrlRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListListDataTypeUrlUrlAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListType {
    /**
     * The Domain param.
     */
    domain: outputs.GetExternalDynamicListTypeDomain;
    /**
     * The Imei param.
     */
    imei: outputs.GetExternalDynamicListTypeImei;
    /**
     * The Imsi param.
     */
    imsi: outputs.GetExternalDynamicListTypeImsi;
    /**
     * The Ip param.
     */
    ip: outputs.GetExternalDynamicListTypeIp;
    /**
     * The PredefinedIp param.
     */
    predefinedIp: outputs.GetExternalDynamicListTypePredefinedIp;
    /**
     * The PredefinedUrl param.
     */
    predefinedUrl: outputs.GetExternalDynamicListTypePredefinedUrl;
    /**
     * The Url param.
     */
    url: outputs.GetExternalDynamicListTypeUrl;
}

export interface GetExternalDynamicListTypeDomain {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The DomainAuth param.
     */
    domainAuth: outputs.GetExternalDynamicListTypeDomainDomainAuth;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * Enable/Disable expand domain. Default: `false`.
     */
    expandDomain: boolean;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListTypeDomainRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListTypeDomainDomainAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListTypeDomainRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListTypeDomainRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListTypeDomainRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListTypeDomainRecurringWeekly;
}

export interface GetExternalDynamicListTypeDomainRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListTypeDomainRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListTypeDomainRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListTypeImei {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     */
    exceptionLists: string[];
    /**
     * The ImeiAuth param.
     */
    imeiAuth: outputs.GetExternalDynamicListTypeImeiImeiAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListTypeImeiRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListTypeImeiImeiAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListTypeImeiRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListTypeImeiRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListTypeImeiRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListTypeImeiRecurringWeekly;
}

export interface GetExternalDynamicListTypeImeiRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListTypeImeiRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListTypeImeiRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListTypeImsi {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
     */
    exceptionLists: string[];
    /**
     * The ImsiAuth param.
     */
    imsiAuth: outputs.GetExternalDynamicListTypeImsiImsiAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListTypeImsiRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListTypeImsiImsiAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListTypeImsiRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListTypeImsiRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListTypeImsiRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListTypeImsiRecurringWeekly;
}

export interface GetExternalDynamicListTypeImsiRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListTypeImsiRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListTypeImsiRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListTypeIp {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The IpAuth param.
     */
    ipAuth: outputs.GetExternalDynamicListTypeIpIpAuth;
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListTypeIpRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
}

export interface GetExternalDynamicListTypeIpIpAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetExternalDynamicListTypeIpRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListTypeIpRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListTypeIpRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListTypeIpRecurringWeekly;
}

export interface GetExternalDynamicListTypeIpRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListTypeIpRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListTypeIpRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListTypePredefinedIp {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The Url param.
     */
    url: string;
}

export interface GetExternalDynamicListTypePredefinedUrl {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The Url param.
     */
    url: string;
}

export interface GetExternalDynamicListTypeUrl {
    /**
     * Profile for authenticating client certificates. Default: `"None"`.
     */
    certificateProfile: string;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     */
    exceptionLists: string[];
    /**
     * The Recurring param.
     */
    recurring: outputs.GetExternalDynamicListTypeUrlRecurring;
    /**
     * The Url param. String length must not exceed 255 characters. Default: `"http://"`.
     */
    url: string;
    /**
     * The UrlAuth param.
     */
    urlAuth: outputs.GetExternalDynamicListTypeUrlUrlAuth;
}

export interface GetExternalDynamicListTypeUrlRecurring {
    /**
     * The Daily param.
     */
    daily: outputs.GetExternalDynamicListTypeUrlRecurringDaily;
    /**
     * The FiveMinute param.
     */
    fiveMinute: boolean;
    /**
     * The Hourly param.
     */
    hourly: boolean;
    /**
     * The Monthly param.
     */
    monthly: outputs.GetExternalDynamicListTypeUrlRecurringMonthly;
    /**
     * The Weekly param.
     */
    weekly: outputs.GetExternalDynamicListTypeUrlRecurringWeekly;
}

export interface GetExternalDynamicListTypeUrlRecurringDaily {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
}

export interface GetExternalDynamicListTypeUrlRecurringMonthly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfMonth param. Value must be between 1 and 31.
     */
    dayOfMonth: number;
}

export interface GetExternalDynamicListTypeUrlRecurringWeekly {
    /**
     * Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
     */
    at: string;
    /**
     * The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
     */
    dayOfWeek: string;
}

export interface GetExternalDynamicListTypeUrlUrlAuth {
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must be between 1 and 255 characters.
     */
    username: string;
}

export interface GetFileBlockingProfileListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The Id param.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Rules param.
     */
    rules: outputs.GetFileBlockingProfileListDataRule[];
}

export interface GetFileBlockingProfileListDataRule {
    /**
     * The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
     */
    action: string;
    /**
     * The Applications param. List must contain at least 1 elements.
     */
    applications: string[];
    /**
     * The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
     */
    direction: string;
    /**
     * The FileTypes param. List must contain at least 1 elements.
     */
    fileTypes: string[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetFileBlockingProfileRule {
    /**
     * The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
     */
    action: string;
    /**
     * The Applications param. List must contain at least 1 elements.
     */
    applications: string[];
    /**
     * The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
     */
    direction: string;
    /**
     * The FileTypes param. List must contain at least 1 elements.
     */
    fileTypes: string[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetHipObjectAntiMalware {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectAntiMalwareCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectAntiMalwareVendor[];
}

export interface GetHipObjectAntiMalwareCriteria {
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The LastScanTime param.
     */
    lastScanTime: outputs.GetHipObjectAntiMalwareCriteriaLastScanTime;
    /**
     * The ProductVersion param.
     */
    productVersion: outputs.GetHipObjectAntiMalwareCriteriaProductVersion;
    /**
     * real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    realTimeProtection: string;
    /**
     * The VirdefVersion param.
     */
    virdefVersion: outputs.GetHipObjectAntiMalwareCriteriaVirdefVersion;
}

export interface GetHipObjectAntiMalwareCriteriaLastScanTime {
    /**
     * The NotAvailable param.
     */
    notAvailable: boolean;
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeWithin;
}

export interface GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectAntiMalwareCriteriaLastScanTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectAntiMalwareCriteriaProductVersion {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The GreaterEqual param. String length must not exceed 255 characters.
     */
    greaterEqual: string;
    /**
     * The GreaterThan param. String length must not exceed 255 characters.
     */
    greaterThan: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
    /**
     * The LessEqual param. String length must not exceed 255 characters.
     */
    lessEqual: string;
    /**
     * The LessThan param. String length must not exceed 255 characters.
     */
    lessThan: string;
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectAntiMalwareCriteriaProductVersionNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectAntiMalwareCriteriaProductVersionWithin;
}

export interface GetHipObjectAntiMalwareCriteriaProductVersionNotWithin {
    /**
     * versions range. Value must be between 1 and 65535. Default: `1`.
     */
    versions: number;
}

export interface GetHipObjectAntiMalwareCriteriaProductVersionWithin {
    /**
     * versions range. Value must be between 1 and 65535. Default: `1`.
     */
    versions: number;
}

export interface GetHipObjectAntiMalwareCriteriaVirdefVersion {
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionWithin;
}

export interface GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify versions range. Value must be between 1 and 65535.
     */
    versions: number;
}

export interface GetHipObjectAntiMalwareCriteriaVirdefVersionWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify versions range. Value must be between 1 and 65535.
     */
    versions: number;
}

export interface GetHipObjectAntiMalwareVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectCertificate {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectCertificateCriteria;
}

export interface GetHipObjectCertificateCriteria {
    /**
     * The CertificateAttributes param.
     */
    certificateAttributes: outputs.GetHipObjectCertificateCriteriaCertificateAttribute[];
    /**
     * Profile for authenticating client certificates.
     */
    certificateProfile: string;
}

export interface GetHipObjectCertificateCriteriaCertificateAttribute {
    /**
     * Attribute Name.
     */
    name: string;
    /**
     * Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    value: string;
}

export interface GetHipObjectCustomChecks {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectCustomChecksCriteria;
}

export interface GetHipObjectCustomChecksCriteria {
    /**
     * The Plist param.
     */
    plists: outputs.GetHipObjectCustomChecksCriteriaPlist[];
    /**
     * The ProcessList param.
     */
    processLists: outputs.GetHipObjectCustomChecksCriteriaProcessList[];
    /**
     * The RegistryKeys param.
     */
    registryKeys: outputs.GetHipObjectCustomChecksCriteriaRegistryKey[];
}

export interface GetHipObjectCustomChecksCriteriaPlist {
    /**
     * The Keys param.
     */
    keys: outputs.GetHipObjectCustomChecksCriteriaPlistKey[];
    /**
     * Preference list. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Plist does not exist. Default: `false`.
     */
    negate: boolean;
}

export interface GetHipObjectCustomChecksCriteriaPlistKey {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * Value does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    value: string;
}

export interface GetHipObjectCustomChecksCriteriaProcessList {
    /**
     * Process Name. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * The Running param. Default: `true`.
     */
    running: boolean;
}

export interface GetHipObjectCustomChecksCriteriaRegistryKey {
    /**
     * Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    defaultValueData: string;
    /**
     * Registry key. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Key does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * The RegistryValues param.
     */
    registryValues: outputs.GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValue[];
}

export interface GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValue {
    /**
     * Registry value name. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Value does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    valueData: string;
}

export interface GetHipObjectDataLossPrevention {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectDataLossPreventionCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectDataLossPreventionVendor[];
}

export interface GetHipObjectDataLossPreventionCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface GetHipObjectDataLossPreventionVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectDiskBackup {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectDiskBackupCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectDiskBackupVendor[];
}

export interface GetHipObjectDiskBackupCriteria {
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The LastBackupTime param.
     */
    lastBackupTime: outputs.GetHipObjectDiskBackupCriteriaLastBackupTime;
}

export interface GetHipObjectDiskBackupCriteriaLastBackupTime {
    /**
     * The NotAvailable param.
     */
    notAvailable: boolean;
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeWithin;
}

export interface GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectDiskBackupCriteriaLastBackupTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectDiskBackupVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectDiskEncryption {
    /**
     * Encryption locations.
     */
    criteria: outputs.GetHipObjectDiskEncryptionCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectDiskEncryptionVendor[];
}

export interface GetHipObjectDiskEncryptionCriteria {
    /**
     * The EncryptedLocations param.
     */
    encryptedLocations: outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocation[];
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface GetHipObjectDiskEncryptionCriteriaEncryptedLocation {
    /**
     * The EncryptionState param.
     */
    encryptionState: outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState;
    /**
     * Encryption location. String length must not exceed 1023 characters.
     */
    name: string;
}

export interface GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState {
    /**
     * The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
     */
    is: string;
    /**
     * The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
     */
    isNot: string;
}

export interface GetHipObjectDiskEncryptionVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectFirewall {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectFirewallCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectFirewallVendor[];
}

export interface GetHipObjectFirewallCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface GetHipObjectFirewallVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectHostInfo {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectHostInfoCriteria;
}

export interface GetHipObjectHostInfoCriteria {
    /**
     * The ClientVersion param.
     */
    clientVersion: outputs.GetHipObjectHostInfoCriteriaClientVersion;
    /**
     * The Domain param.
     */
    domain: outputs.GetHipObjectHostInfoCriteriaDomain;
    /**
     * The HostId param.
     */
    hostId: outputs.GetHipObjectHostInfoCriteriaHostId;
    /**
     * The HostName param.
     */
    hostName: outputs.GetHipObjectHostInfoCriteriaHostName;
    /**
     * If device is managed.
     */
    managed: boolean;
    /**
     * The Os param.
     */
    os: outputs.GetHipObjectHostInfoCriteriaOs;
    /**
     * The SerialNumber param.
     */
    serialNumber: outputs.GetHipObjectHostInfoCriteriaSerialNumber;
}

export interface GetHipObjectHostInfoCriteriaClientVersion {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectHostInfoCriteriaDomain {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectHostInfoCriteriaHostId {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectHostInfoCriteriaHostName {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectHostInfoCriteriaOs {
    /**
     * The Contains param.
     */
    contains: outputs.GetHipObjectHostInfoCriteriaOsContains;
}

export interface GetHipObjectHostInfoCriteriaOsContains {
    /**
     * Apple vendor. String length must not exceed 255 characters.
     */
    apple: string;
    /**
     * Google vendor. String length must not exceed 255 characters.
     */
    google: string;
    /**
     * Linux vendor. String length must not exceed 255 characters.
     */
    linux: string;
    /**
     * Microsoft vendor. String length must not exceed 255 characters.
     */
    microsoft: string;
    /**
     * Other vendor. String length must not exceed 255 characters.
     */
    other: string;
}

export interface GetHipObjectHostInfoCriteriaSerialNumber {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListData {
    /**
     * The AntiMalware param.
     */
    antiMalware: outputs.GetHipObjectListDataAntiMalware;
    /**
     * The Certificate param.
     */
    certificate: outputs.GetHipObjectListDataCertificate;
    /**
     * The CustomChecks param.
     */
    customChecks: outputs.GetHipObjectListDataCustomChecks;
    /**
     * The DataLossPrevention param.
     */
    dataLossPrevention: outputs.GetHipObjectListDataDataLossPrevention;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * The DiskBackup param.
     */
    diskBackup: outputs.GetHipObjectListDataDiskBackup;
    /**
     * The DiskEncryption param.
     */
    diskEncryption: outputs.GetHipObjectListDataDiskEncryption;
    /**
     * The Firewall param.
     */
    firewall: outputs.GetHipObjectListDataFirewall;
    /**
     * The HostInfo param.
     */
    hostInfo: outputs.GetHipObjectListDataHostInfo;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The MobileDevice param.
     */
    mobileDevice: outputs.GetHipObjectListDataMobileDevice;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The NetworkInfo param.
     */
    networkInfo: outputs.GetHipObjectListDataNetworkInfo;
    /**
     * The PatchManagement param.
     */
    patchManagement: outputs.GetHipObjectListDataPatchManagement;
}

export interface GetHipObjectListDataAntiMalware {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataAntiMalwareCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectListDataAntiMalwareVendor[];
}

export interface GetHipObjectListDataAntiMalwareCriteria {
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The LastScanTime param.
     */
    lastScanTime: outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTime;
    /**
     * The ProductVersion param.
     */
    productVersion: outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersion;
    /**
     * real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    realTimeProtection: string;
    /**
     * The VirdefVersion param.
     */
    virdefVersion: outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersion;
}

export interface GetHipObjectListDataAntiMalwareCriteriaLastScanTime {
    /**
     * The NotAvailable param.
     */
    notAvailable: boolean;
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithin;
}

export interface GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectListDataAntiMalwareCriteriaProductVersion {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The GreaterEqual param. String length must not exceed 255 characters.
     */
    greaterEqual: string;
    /**
     * The GreaterThan param. String length must not exceed 255 characters.
     */
    greaterThan: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
    /**
     * The LessEqual param. String length must not exceed 255 characters.
     */
    lessEqual: string;
    /**
     * The LessThan param. String length must not exceed 255 characters.
     */
    lessThan: string;
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionWithin;
}

export interface GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithin {
    /**
     * versions range. Value must be between 1 and 65535. Default: `1`.
     */
    versions: number;
}

export interface GetHipObjectListDataAntiMalwareCriteriaProductVersionWithin {
    /**
     * versions range. Value must be between 1 and 65535. Default: `1`.
     */
    versions: number;
}

export interface GetHipObjectListDataAntiMalwareCriteriaVirdefVersion {
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithin;
}

export interface GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify versions range. Value must be between 1 and 65535.
     */
    versions: number;
}

export interface GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify versions range. Value must be between 1 and 65535.
     */
    versions: number;
}

export interface GetHipObjectListDataAntiMalwareVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectListDataCertificate {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataCertificateCriteria;
}

export interface GetHipObjectListDataCertificateCriteria {
    /**
     * The CertificateAttributes param.
     */
    certificateAttributes: outputs.GetHipObjectListDataCertificateCriteriaCertificateAttribute[];
    /**
     * Profile for authenticating client certificates.
     */
    certificateProfile: string;
}

export interface GetHipObjectListDataCertificateCriteriaCertificateAttribute {
    /**
     * The Name param.
     */
    name: string;
    /**
     * Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    value: string;
}

export interface GetHipObjectListDataCustomChecks {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataCustomChecksCriteria;
}

export interface GetHipObjectListDataCustomChecksCriteria {
    /**
     * The Plist param.
     */
    plists: outputs.GetHipObjectListDataCustomChecksCriteriaPlist[];
    /**
     * The ProcessList param.
     */
    processLists: outputs.GetHipObjectListDataCustomChecksCriteriaProcessList[];
    /**
     * The RegistryKeys param.
     */
    registryKeys: outputs.GetHipObjectListDataCustomChecksCriteriaRegistryKey[];
}

export interface GetHipObjectListDataCustomChecksCriteriaPlist {
    /**
     * The Keys param.
     */
    keys: outputs.GetHipObjectListDataCustomChecksCriteriaPlistKey[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * Plist does not exist. Default: `false`.
     */
    negate: boolean;
}

export interface GetHipObjectListDataCustomChecksCriteriaPlistKey {
    /**
     * The Name param.
     */
    name: string;
    /**
     * Value does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    value: string;
}

export interface GetHipObjectListDataCustomChecksCriteriaProcessList {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Running param. Default: `true`.
     */
    running: boolean;
}

export interface GetHipObjectListDataCustomChecksCriteriaRegistryKey {
    /**
     * Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    defaultValueData: string;
    /**
     * Registry key. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Key does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * The RegistryValues param.
     */
    registryValues: outputs.GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValue[];
}

export interface GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValue {
    /**
     * Registry value name. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Value does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    valueData: string;
}

export interface GetHipObjectListDataDataLossPrevention {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataDataLossPreventionCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectListDataDataLossPreventionVendor[];
}

export interface GetHipObjectListDataDataLossPreventionCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface GetHipObjectListDataDataLossPreventionVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectListDataDiskBackup {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataDiskBackupCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectListDataDiskBackupVendor[];
}

export interface GetHipObjectListDataDiskBackupCriteria {
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The LastBackupTime param.
     */
    lastBackupTime: outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTime;
}

export interface GetHipObjectListDataDiskBackupCriteriaLastBackupTime {
    /**
     * The NotAvailable param.
     */
    notAvailable: boolean;
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithin;
}

export interface GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 65535.
     */
    days: number;
    /**
     * specify time in hours. Value must be between 1 and 65535.
     */
    hours: number;
}

export interface GetHipObjectListDataDiskBackupVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectListDataDiskEncryption {
    /**
     * Encryption locations.
     */
    criteria: outputs.GetHipObjectListDataDiskEncryptionCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectListDataDiskEncryptionVendor[];
}

export interface GetHipObjectListDataDiskEncryptionCriteria {
    /**
     * The EncryptedLocations param.
     */
    encryptedLocations: outputs.GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocation[];
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocation {
    /**
     * The EncryptionState param.
     */
    encryptionState: outputs.GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionState;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionState {
    /**
     * The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
     */
    is: string;
    /**
     * The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
     */
    isNot: string;
}

export interface GetHipObjectListDataDiskEncryptionVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectListDataFirewall {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataFirewallCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectListDataFirewallVendor[];
}

export interface GetHipObjectListDataFirewallCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface GetHipObjectListDataFirewallVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectListDataHostInfo {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataHostInfoCriteria;
}

export interface GetHipObjectListDataHostInfoCriteria {
    /**
     * The ClientVersion param.
     */
    clientVersion: outputs.GetHipObjectListDataHostInfoCriteriaClientVersion;
    /**
     * The Domain param.
     */
    domain: outputs.GetHipObjectListDataHostInfoCriteriaDomain;
    /**
     * The HostId param.
     */
    hostId: outputs.GetHipObjectListDataHostInfoCriteriaHostId;
    /**
     * The HostName param.
     */
    hostName: outputs.GetHipObjectListDataHostInfoCriteriaHostName;
    /**
     * If device is managed.
     */
    managed: boolean;
    /**
     * The Os param.
     */
    os: outputs.GetHipObjectListDataHostInfoCriteriaOs;
    /**
     * The SerialNumber param.
     */
    serialNumber: outputs.GetHipObjectListDataHostInfoCriteriaSerialNumber;
}

export interface GetHipObjectListDataHostInfoCriteriaClientVersion {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataHostInfoCriteriaDomain {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataHostInfoCriteriaHostId {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataHostInfoCriteriaHostName {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataHostInfoCriteriaOs {
    /**
     * The Contains param.
     */
    contains: outputs.GetHipObjectListDataHostInfoCriteriaOsContains;
}

export interface GetHipObjectListDataHostInfoCriteriaOsContains {
    /**
     * Apple vendor. String length must not exceed 255 characters.
     */
    apple: string;
    /**
     * Google vendor. String length must not exceed 255 characters.
     */
    google: string;
    /**
     * Linux vendor. String length must not exceed 255 characters.
     */
    linux: string;
    /**
     * Microsoft vendor. String length must not exceed 255 characters.
     */
    microsoft: string;
    /**
     * Other vendor. String length must not exceed 255 characters.
     */
    other: string;
}

export interface GetHipObjectListDataHostInfoCriteriaSerialNumber {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataMobileDevice {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataMobileDeviceCriteria;
}

export interface GetHipObjectListDataMobileDeviceCriteria {
    /**
     * The Applications param.
     */
    applications: outputs.GetHipObjectListDataMobileDeviceCriteriaApplications;
    /**
     * If device's disk is encrypted.
     */
    diskEncrypted: boolean;
    /**
     * The Imei param.
     */
    imei: outputs.GetHipObjectListDataMobileDeviceCriteriaImei;
    /**
     * If device is by rooted/jailbroken.
     */
    jailbroken: boolean;
    /**
     * The LastCheckinTime param.
     */
    lastCheckinTime: outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTime;
    /**
     * The Model param.
     */
    model: outputs.GetHipObjectListDataMobileDeviceCriteriaModel;
    /**
     * If device's passcode is present.
     */
    passcodeSet: boolean;
    /**
     * The PhoneNumber param.
     */
    phoneNumber: outputs.GetHipObjectListDataMobileDeviceCriteriaPhoneNumber;
    /**
     * The Tag param.
     */
    tag: outputs.GetHipObjectListDataMobileDeviceCriteriaTag;
}

export interface GetHipObjectListDataMobileDeviceCriteriaApplications {
    /**
     * The HasMalware param.
     */
    hasMalware: outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalware;
    /**
     * Has apps that are not managed.
     */
    hasUnmanagedApp: boolean;
    /**
     * The Includes param.
     */
    includes: outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsInclude[];
}

export interface GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalware {
    /**
     * The No param.
     */
    no: boolean;
    /**
     * The Yes param.
     */
    yes: outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYes;
}

export interface GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYes {
    /**
     * The Excludes param.
     */
    excludes: outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExclude[];
}

export interface GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExclude {
    /**
     * application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    hash: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    package: string;
}

export interface GetHipObjectListDataMobileDeviceCriteriaApplicationsInclude {
    /**
     * application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    hash: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    package: string;
}

export interface GetHipObjectListDataMobileDeviceCriteriaImei {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataMobileDeviceCriteriaLastCheckinTime {
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithin;
}

export interface GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 365. Default: `30`.
     */
    days: number;
}

export interface GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 365. Default: `30`.
     */
    days: number;
}

export interface GetHipObjectListDataMobileDeviceCriteriaModel {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataMobileDeviceCriteriaPhoneNumber {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataMobileDeviceCriteriaTag {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectListDataNetworkInfo {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataNetworkInfoCriteria;
}

export interface GetHipObjectListDataNetworkInfoCriteria {
    /**
     * The Network param.
     */
    network: outputs.GetHipObjectListDataNetworkInfoCriteriaNetwork;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetwork {
    /**
     * The Is param.
     */
    is: outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIs;
    /**
     * The IsNot param.
     */
    isNot: outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNot;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetworkIs {
    /**
     * The Mobile param.
     */
    mobile: outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobile;
    /**
     * The Unknown param.
     */
    unknown: boolean;
    /**
     * The Wifi param.
     */
    wifi: outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifi;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobile {
    /**
     * The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    carrier: string;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetworkIsNot {
    /**
     * The Ethernet param.
     */
    ethernet: boolean;
    /**
     * The Mobile param.
     */
    mobile: outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobile;
    /**
     * The Unknown param.
     */
    unknown: boolean;
    /**
     * The Wifi param.
     */
    wifi: outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifi;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobile {
    /**
     * The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    carrier: string;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifi {
    /**
     * SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    ssid: string;
}

export interface GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifi {
    /**
     * SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    ssid: string;
}

export interface GetHipObjectListDataPatchManagement {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectListDataPatchManagementCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectListDataPatchManagementVendor[];
}

export interface GetHipObjectListDataPatchManagementCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The MissingPatches param.
     */
    missingPatches: outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatches;
}

export interface GetHipObjectListDataPatchManagementCriteriaMissingPatches {
    /**
     * The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
     */
    check: string;
    /**
     * The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    patches: string[];
    /**
     * The Severity param.
     */
    severity: outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity;
}

export interface GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity {
    /**
     * The GreaterEqual param. Value must be between 0 and 100000.
     */
    greaterEqual: number;
    /**
     * The GreaterThan param. Value must be between 0 and 100000.
     */
    greaterThan: number;
    /**
     * The Is param. Value must be between 0 and 100000.
     */
    is: number;
    /**
     * The IsNot param. Value must be between 0 and 100000.
     */
    isNot: number;
    /**
     * The LessEqual param. Value must be between 0 and 100000.
     */
    lessEqual: number;
    /**
     * The LessThan param. Value must be between 0 and 100000.
     */
    lessThan: number;
}

export interface GetHipObjectListDataPatchManagementVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipObjectMobileDevice {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectMobileDeviceCriteria;
}

export interface GetHipObjectMobileDeviceCriteria {
    /**
     * The Applications param.
     */
    applications: outputs.GetHipObjectMobileDeviceCriteriaApplications;
    /**
     * If device's disk is encrypted.
     */
    diskEncrypted: boolean;
    /**
     * The Imei param.
     */
    imei: outputs.GetHipObjectMobileDeviceCriteriaImei;
    /**
     * If device is by rooted/jailbroken.
     */
    jailbroken: boolean;
    /**
     * The LastCheckinTime param.
     */
    lastCheckinTime: outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTime;
    /**
     * The Model param.
     */
    model: outputs.GetHipObjectMobileDeviceCriteriaModel;
    /**
     * If device's passcode is present.
     */
    passcodeSet: boolean;
    /**
     * The PhoneNumber param.
     */
    phoneNumber: outputs.GetHipObjectMobileDeviceCriteriaPhoneNumber;
    /**
     * The Tag param.
     */
    tag: outputs.GetHipObjectMobileDeviceCriteriaTag;
}

export interface GetHipObjectMobileDeviceCriteriaApplications {
    /**
     * The HasMalware param.
     */
    hasMalware: outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalware;
    /**
     * Has apps that are not managed.
     */
    hasUnmanagedApp: boolean;
    /**
     * The Includes param.
     */
    includes: outputs.GetHipObjectMobileDeviceCriteriaApplicationsInclude[];
}

export interface GetHipObjectMobileDeviceCriteriaApplicationsHasMalware {
    /**
     * The No param.
     */
    no: boolean;
    /**
     * The Yes param.
     */
    yes: outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYes;
}

export interface GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYes {
    /**
     * The Excludes param.
     */
    excludes: outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude[];
}

export interface GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude {
    /**
     * application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    hash: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    package: string;
}

export interface GetHipObjectMobileDeviceCriteriaApplicationsInclude {
    /**
     * application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    hash: string;
    /**
     * The Name param. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    package: string;
}

export interface GetHipObjectMobileDeviceCriteriaImei {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectMobileDeviceCriteriaLastCheckinTime {
    /**
     * The NotWithin param.
     */
    notWithin: outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin;
    /**
     * The Within param.
     */
    within: outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithin;
}

export interface GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 365. Default: `30`.
     */
    days: number;
}

export interface GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 365. Default: `30`.
     */
    days: number;
}

export interface GetHipObjectMobileDeviceCriteriaModel {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectMobileDeviceCriteriaPhoneNumber {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectMobileDeviceCriteriaTag {
    /**
     * The Contains param. String length must not exceed 255 characters.
     */
    contains: string;
    /**
     * The Is param. String length must not exceed 255 characters.
     */
    is: string;
    /**
     * The IsNot param. String length must not exceed 255 characters.
     */
    isNot: string;
}

export interface GetHipObjectNetworkInfo {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectNetworkInfoCriteria;
}

export interface GetHipObjectNetworkInfoCriteria {
    /**
     * The Network param.
     */
    network: outputs.GetHipObjectNetworkInfoCriteriaNetwork;
}

export interface GetHipObjectNetworkInfoCriteriaNetwork {
    /**
     * The Is param.
     */
    is: outputs.GetHipObjectNetworkInfoCriteriaNetworkIs;
    /**
     * The IsNot param.
     */
    isNot: outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNot;
}

export interface GetHipObjectNetworkInfoCriteriaNetworkIs {
    /**
     * The Mobile param.
     */
    mobile: outputs.GetHipObjectNetworkInfoCriteriaNetworkIsMobile;
    /**
     * The Unknown param.
     */
    unknown: boolean;
    /**
     * The Wifi param.
     */
    wifi: outputs.GetHipObjectNetworkInfoCriteriaNetworkIsWifi;
}

export interface GetHipObjectNetworkInfoCriteriaNetworkIsMobile {
    /**
     * The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    carrier: string;
}

export interface GetHipObjectNetworkInfoCriteriaNetworkIsNot {
    /**
     * The Ethernet param.
     */
    ethernet: boolean;
    /**
     * The Mobile param.
     */
    mobile: outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotMobile;
    /**
     * The Unknown param.
     */
    unknown: boolean;
    /**
     * The Wifi param.
     */
    wifi: outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotWifi;
}

export interface GetHipObjectNetworkInfoCriteriaNetworkIsNotMobile {
    /**
     * The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    carrier: string;
}

export interface GetHipObjectNetworkInfoCriteriaNetworkIsNotWifi {
    /**
     * SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    ssid: string;
}

export interface GetHipObjectNetworkInfoCriteriaNetworkIsWifi {
    /**
     * SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    ssid: string;
}

export interface GetHipObjectPatchManagement {
    /**
     * The Criteria param.
     */
    criteria: outputs.GetHipObjectPatchManagementCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors: outputs.GetHipObjectPatchManagementVendor[];
}

export interface GetHipObjectPatchManagementCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The MissingPatches param.
     */
    missingPatches: outputs.GetHipObjectPatchManagementCriteriaMissingPatches;
}

export interface GetHipObjectPatchManagementCriteriaMissingPatches {
    /**
     * The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
     */
    check: string;
    /**
     * The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    patches: string[];
    /**
     * The Severity param.
     */
    severity: outputs.GetHipObjectPatchManagementCriteriaMissingPatchesSeverity;
}

export interface GetHipObjectPatchManagementCriteriaMissingPatchesSeverity {
    /**
     * The GreaterEqual param. Value must be between 0 and 100000.
     */
    greaterEqual: number;
    /**
     * The GreaterThan param. Value must be between 0 and 100000.
     */
    greaterThan: number;
    /**
     * The Is param. Value must be between 0 and 100000.
     */
    is: number;
    /**
     * The IsNot param. Value must be between 0 and 100000.
     */
    isNot: number;
    /**
     * The LessEqual param. Value must be between 0 and 100000.
     */
    lessEqual: number;
    /**
     * The LessThan param. Value must be between 0 and 100000.
     */
    lessThan: number;
}

export interface GetHipObjectPatchManagementVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products: string[];
}

export interface GetHipProfileListData {
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Match param. String length must not exceed 2048 characters.
     */
    match: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
}

export interface GetHttpHeaderProfileHttpHeaderInsertion {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Types param.
     */
    types: outputs.GetHttpHeaderProfileHttpHeaderInsertionType[];
}

export interface GetHttpHeaderProfileHttpHeaderInsertionType {
    /**
     * The Domains param.
     */
    domains: string[];
    /**
     * The Headers param.
     */
    headers: outputs.GetHttpHeaderProfileHttpHeaderInsertionTypeHeader[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetHttpHeaderProfileHttpHeaderInsertionTypeHeader {
    /**
     * The Header param.
     */
    header: string;
    /**
     * The Log param. Default: `false`.
     */
    log: boolean;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetHttpHeaderProfileListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The HttpHeaderInsertions param.
     */
    httpHeaderInsertions: outputs.GetHttpHeaderProfileListDataHttpHeaderInsertion[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetHttpHeaderProfileListDataHttpHeaderInsertion {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Types param.
     */
    types: outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionType[];
}

export interface GetHttpHeaderProfileListDataHttpHeaderInsertionType {
    /**
     * The Domains param.
     */
    domains: string[];
    /**
     * The Headers param.
     */
    headers: outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeader[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeader {
    /**
     * The Header param.
     */
    header: string;
    /**
     * The Log param. Default: `false`.
     */
    log: boolean;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetIkeCryptoProfileLifetime {
    /**
     * specify lifetime in days. Value must be between 1 and 365.
     */
    days: number;
    /**
     * specify lifetime in hours. Value must be between 1 and 65535.
     */
    hours: number;
    /**
     * specify lifetime in minutes. Value must be between 3 and 65535.
     */
    minutes: number;
    /**
     * specify lifetime in seconds. Value must be between 180 and 65535.
     */
    seconds: number;
}

export interface GetIkeCryptoProfileListData {
    /**
     * IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
     */
    authenticationMultiple: number;
    /**
     * The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`.
     */
    dhGroups: string[];
    /**
     * Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`.
     */
    encryptions: string[];
    /**
     * The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
     */
    hashes: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Lifetime param.
     */
    lifetime: outputs.GetIkeCryptoProfileListDataLifetime;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
}

export interface GetIkeCryptoProfileListDataLifetime {
    /**
     * specify lifetime in days. Value must be between 1 and 365.
     */
    days: number;
    /**
     * specify lifetime in hours. Value must be between 1 and 65535.
     */
    hours: number;
    /**
     * specify lifetime in minutes. Value must be between 3 and 65535.
     */
    minutes: number;
    /**
     * specify lifetime in seconds. Value must be between 180 and 65535.
     */
    seconds: number;
}

export interface GetIkeGatewayAuthentication {
    /**
     * The Certificate param.
     */
    certificate: outputs.GetIkeGatewayAuthenticationCertificate;
    /**
     * The PreSharedKey param.
     */
    preSharedKey: outputs.GetIkeGatewayAuthenticationPreSharedKey;
}

export interface GetIkeGatewayAuthenticationCertificate {
    /**
     * The AllowIdPayloadMismatch param.
     */
    allowIdPayloadMismatch: boolean;
    /**
     * The CertificateProfile param.
     */
    certificateProfile: string;
    /**
     * The LocalCertificate param.
     */
    localCertificate: outputs.GetIkeGatewayAuthenticationCertificateLocalCertificate;
    /**
     * The StrictValidationRevocation param.
     */
    strictValidationRevocation: boolean;
    /**
     * The UseManagementAsSource param.
     */
    useManagementAsSource: boolean;
}

export interface GetIkeGatewayAuthenticationCertificateLocalCertificate {
    /**
     * The LocalCertificateName param.
     */
    localCertificateName: string;
}

export interface GetIkeGatewayAuthenticationPreSharedKey {
    /**
     * The Key param.
     */
    key: string;
}

export interface GetIkeGatewayListData {
    /**
     * The Authentication param.
     */
    authentication: outputs.GetIkeGatewayListDataAuthentication;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The LocalId param.
     */
    localId: outputs.GetIkeGatewayListDataLocalId;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The PeerAddress param.
     */
    peerAddress: outputs.GetIkeGatewayListDataPeerAddress;
    /**
     * The PeerId param.
     */
    peerId: outputs.GetIkeGatewayListDataPeerId;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetIkeGatewayListDataProtocol;
    /**
     * The ProtocolCommon param.
     */
    protocolCommon: outputs.GetIkeGatewayListDataProtocolCommon;
}

export interface GetIkeGatewayListDataAuthentication {
    /**
     * The Certificate param.
     */
    certificate: outputs.GetIkeGatewayListDataAuthenticationCertificate;
    /**
     * The PreSharedKey param.
     */
    preSharedKey: outputs.GetIkeGatewayListDataAuthenticationPreSharedKey;
}

export interface GetIkeGatewayListDataAuthenticationCertificate {
    /**
     * The AllowIdPayloadMismatch param.
     */
    allowIdPayloadMismatch: boolean;
    /**
     * The CertificateProfile param.
     */
    certificateProfile: string;
    /**
     * The LocalCertificate param.
     */
    localCertificate: outputs.GetIkeGatewayListDataAuthenticationCertificateLocalCertificate;
    /**
     * The StrictValidationRevocation param.
     */
    strictValidationRevocation: boolean;
    /**
     * The UseManagementAsSource param.
     */
    useManagementAsSource: boolean;
}

export interface GetIkeGatewayListDataAuthenticationCertificateLocalCertificate {
    /**
     * The LocalCertificateName param.
     */
    localCertificateName: string;
}

export interface GetIkeGatewayListDataAuthenticationPreSharedKey {
    /**
     * The Key param.
     */
    key: string;
}

export interface GetIkeGatewayListDataLocalId {
    /**
     * Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\,|[^,])+)$`.
     */
    id: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface GetIkeGatewayListDataPeerAddress {
    /**
     * The DynamicAddress param.
     */
    dynamicAddress: boolean;
    /**
     * peer gateway FQDN name. String length must not exceed 255 characters.
     */
    fqdn: string;
    /**
     * peer gateway has static IP address.
     */
    ip: string;
}

export interface GetIkeGatewayListDataPeerId {
    /**
     * Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\@[\*a-zA-Z0-9.-]+)$|^([\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\,|[^,])+)$`.
     */
    id: string;
    /**
     * The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
     */
    type: string;
}

export interface GetIkeGatewayListDataProtocol {
    /**
     * The Ikev1 param.
     */
    ikev1: outputs.GetIkeGatewayListDataProtocolIkev1;
    /**
     * The Ikev2 param.
     */
    ikev2: outputs.GetIkeGatewayListDataProtocolIkev2;
    /**
     * The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
     */
    version: string;
}

export interface GetIkeGatewayListDataProtocolCommon {
    /**
     * The Fragmentation param.
     */
    fragmentation: outputs.GetIkeGatewayListDataProtocolCommonFragmentation;
    /**
     * The NatTraversal param.
     */
    natTraversal: outputs.GetIkeGatewayListDataProtocolCommonNatTraversal;
    /**
     * The PassiveMode param.
     */
    passiveMode: boolean;
}

export interface GetIkeGatewayListDataProtocolCommonFragmentation {
    /**
     * The Enable param. Default: `false`.
     */
    enable: boolean;
}

export interface GetIkeGatewayListDataProtocolCommonNatTraversal {
    /**
     * The Enable param.
     */
    enable: boolean;
}

export interface GetIkeGatewayListDataProtocolIkev1 {
    /**
     * The Dpd param.
     */
    dpd: outputs.GetIkeGatewayListDataProtocolIkev1Dpd;
    /**
     * The IkeCryptoProfile param.
     */
    ikeCryptoProfile: string;
}

export interface GetIkeGatewayListDataProtocolIkev1Dpd {
    /**
     * The Enable param.
     */
    enable: boolean;
}

export interface GetIkeGatewayListDataProtocolIkev2 {
    /**
     * The Dpd param.
     */
    dpd: outputs.GetIkeGatewayListDataProtocolIkev2Dpd;
    /**
     * The IkeCryptoProfile param.
     */
    ikeCryptoProfile: string;
}

export interface GetIkeGatewayListDataProtocolIkev2Dpd {
    /**
     * The Enable param.
     */
    enable: boolean;
}

export interface GetIkeGatewayLocalId {
    /**
     * Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\,|[^,])+)$`.
     */
    id: string;
    /**
     * The Type param.
     */
    type: string;
}

export interface GetIkeGatewayPeerAddress {
    /**
     * The DynamicAddress param.
     */
    dynamicAddress: boolean;
    /**
     * peer gateway FQDN name. String length must not exceed 255 characters.
     */
    fqdn: string;
    /**
     * peer gateway has static IP address.
     */
    ip: string;
}

export interface GetIkeGatewayPeerId {
    /**
     * Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\@[\*a-zA-Z0-9.-]+)$|^([\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\,|[^,])+)$`.
     */
    id: string;
    /**
     * The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
     */
    type: string;
}

export interface GetIkeGatewayProtocol {
    /**
     * The Ikev1 param.
     */
    ikev1: outputs.GetIkeGatewayProtocolIkev1;
    /**
     * The Ikev2 param.
     */
    ikev2: outputs.GetIkeGatewayProtocolIkev2;
    /**
     * The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
     */
    version: string;
}

export interface GetIkeGatewayProtocolCommon {
    /**
     * The Fragmentation param.
     */
    fragmentation: outputs.GetIkeGatewayProtocolCommonFragmentation;
    /**
     * The NatTraversal param.
     */
    natTraversal: outputs.GetIkeGatewayProtocolCommonNatTraversal;
    /**
     * The PassiveMode param.
     */
    passiveMode: boolean;
}

export interface GetIkeGatewayProtocolCommonFragmentation {
    /**
     * The Enable param. Default: `false`.
     */
    enable: boolean;
}

export interface GetIkeGatewayProtocolCommonNatTraversal {
    /**
     * The Enable param.
     */
    enable: boolean;
}

export interface GetIkeGatewayProtocolIkev1 {
    /**
     * The Dpd param.
     */
    dpd: outputs.GetIkeGatewayProtocolIkev1Dpd;
    /**
     * The IkeCryptoProfile param.
     */
    ikeCryptoProfile: string;
}

export interface GetIkeGatewayProtocolIkev1Dpd {
    /**
     * The Enable param.
     */
    enable: boolean;
}

export interface GetIkeGatewayProtocolIkev2 {
    /**
     * The Dpd param.
     */
    dpd: outputs.GetIkeGatewayProtocolIkev2Dpd;
    /**
     * The IkeCryptoProfile param.
     */
    ikeCryptoProfile: string;
}

export interface GetIkeGatewayProtocolIkev2Dpd {
    /**
     * The Enable param.
     */
    enable: boolean;
}

export interface GetInternalDnsServerListData {
    /**
     * The DomainNames param.
     */
    domainNames: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Primary param.
     */
    primary: string;
    /**
     * The Secondary param.
     */
    secondary: string;
}

export interface GetIpsecCryptoProfileAh {
    /**
     * The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
     */
    authentications: string[];
}

export interface GetIpsecCryptoProfileEsp {
    /**
     * Authentication algorithm.
     */
    authentications: string[];
    /**
     * Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
     */
    encryptions: string[];
}

export interface GetIpsecCryptoProfileLifesize {
    /**
     * specify lifesize in gigabytes(GB). Value must be between 1 and 65535.
     */
    gb: number;
    /**
     * specify lifesize in kilobytes(KB). Value must be between 1 and 65535.
     */
    kb: number;
    /**
     * specify lifesize in megabytes(MB). Value must be between 1 and 65535.
     */
    mb: number;
    /**
     * specify lifesize in terabytes(TB). Value must be between 1 and 65535.
     */
    tb: number;
}

export interface GetIpsecCryptoProfileLifetime {
    /**
     * specify lifetime in days. Value must be between 1 and 365.
     */
    days: number;
    /**
     * specify lifetime in hours. Value must be between 1 and 65535.
     */
    hours: number;
    /**
     * specify lifetime in minutes. Value must be between 3 and 65535.
     */
    minutes: number;
    /**
     * specify lifetime in seconds. Value must be between 180 and 65535.
     */
    seconds: number;
}

export interface GetIpsecCryptoProfileListData {
    /**
     * The Ah param.
     */
    ah: outputs.GetIpsecCryptoProfileListDataAh;
    /**
     * phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
     */
    dhGroup: string;
    /**
     * The Esp param.
     */
    esp: outputs.GetIpsecCryptoProfileListDataEsp;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Lifesize param.
     */
    lifesize: outputs.GetIpsecCryptoProfileListDataLifesize;
    /**
     * The Lifetime param.
     */
    lifetime: outputs.GetIpsecCryptoProfileListDataLifetime;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
}

export interface GetIpsecCryptoProfileListDataAh {
    /**
     * The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
     */
    authentications: string[];
}

export interface GetIpsecCryptoProfileListDataEsp {
    /**
     * Authentication algorithm.
     */
    authentications: string[];
    /**
     * Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
     */
    encryptions: string[];
}

export interface GetIpsecCryptoProfileListDataLifesize {
    /**
     * specify lifesize in gigabytes(GB). Value must be between 1 and 65535.
     */
    gb: number;
    /**
     * specify lifesize in kilobytes(KB). Value must be between 1 and 65535.
     */
    kb: number;
    /**
     * specify lifesize in megabytes(MB). Value must be between 1 and 65535.
     */
    mb: number;
    /**
     * specify lifesize in terabytes(TB). Value must be between 1 and 65535.
     */
    tb: number;
}

export interface GetIpsecCryptoProfileListDataLifetime {
    /**
     * specify lifetime in days. Value must be between 1 and 365.
     */
    days: number;
    /**
     * specify lifetime in hours. Value must be between 1 and 65535.
     */
    hours: number;
    /**
     * specify lifetime in minutes. Value must be between 3 and 65535.
     */
    minutes: number;
    /**
     * specify lifetime in seconds. Value must be between 180 and 65535.
     */
    seconds: number;
}

export interface GetIpsecTunnelAutoKey {
    /**
     * The IkeGateways param.
     */
    ikeGateways: outputs.GetIpsecTunnelAutoKeyIkeGateway[];
    /**
     * The IpsecCryptoProfile param.
     */
    ipsecCryptoProfile: string;
    /**
     * IPv6 type of proxy*id values.
     */
    proxyIdV6s: outputs.GetIpsecTunnelAutoKeyProxyIdV6[];
    /**
     * IPv4 type of proxy*id values.
     */
    proxyIds: outputs.GetIpsecTunnelAutoKeyProxyId[];
}

export interface GetIpsecTunnelAutoKeyIkeGateway {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetIpsecTunnelAutoKeyProxyId {
    /**
     * The Local param.
     */
    local: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetIpsecTunnelAutoKeyProxyIdProtocol;
    /**
     * The Remote param.
     */
    remote: string;
}

export interface GetIpsecTunnelAutoKeyProxyIdProtocol {
    /**
     * IP protocol number. Value must be between 1 and 254.
     */
    number: number;
    /**
     * The Tcp param.
     */
    tcp: outputs.GetIpsecTunnelAutoKeyProxyIdProtocolTcp;
    /**
     * The Udp param.
     */
    udp: outputs.GetIpsecTunnelAutoKeyProxyIdProtocolUdp;
}

export interface GetIpsecTunnelAutoKeyProxyIdProtocolTcp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelAutoKeyProxyIdProtocolUdp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelAutoKeyProxyIdV6 {
    /**
     * The Local param.
     */
    local: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetIpsecTunnelAutoKeyProxyIdV6Protocol;
    /**
     * The Remote param.
     */
    remote: string;
}

export interface GetIpsecTunnelAutoKeyProxyIdV6Protocol {
    /**
     * IP protocol number. Value must be between 1 and 254.
     */
    number: number;
    /**
     * The Tcp param.
     */
    tcp: outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcp;
    /**
     * The Udp param.
     */
    udp: outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdp;
}

export interface GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelListData {
    /**
     * Enable Anti-Replay check on this tunnel.
     */
    antiReplay: boolean;
    /**
     * The AutoKey param.
     */
    autoKey: outputs.GetIpsecTunnelListDataAutoKey;
    /**
     * Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
     */
    copyTos: boolean;
    /**
     * allow GRE over IPSec. Default: `false`.
     */
    enableGreEncapsulation: boolean;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The TunnelMonitor param.
     */
    tunnelMonitor: outputs.GetIpsecTunnelListDataTunnelMonitor;
}

export interface GetIpsecTunnelListDataAutoKey {
    /**
     * The IkeGateways param.
     */
    ikeGateways: outputs.GetIpsecTunnelListDataAutoKeyIkeGateway[];
    /**
     * The IpsecCryptoProfile param.
     */
    ipsecCryptoProfile: string;
    /**
     * IPv6 type of proxy*id values.
     */
    proxyIdV6s: outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6[];
    /**
     * IPv4 type of proxy*id values.
     */
    proxyIds: outputs.GetIpsecTunnelListDataAutoKeyProxyId[];
}

export interface GetIpsecTunnelListDataAutoKeyIkeGateway {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetIpsecTunnelListDataAutoKeyProxyId {
    /**
     * The Local param.
     */
    local: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocol;
    /**
     * The Remote param.
     */
    remote: string;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdProtocol {
    /**
     * IP protocol number. Value must be between 1 and 254.
     */
    number: number;
    /**
     * The Tcp param.
     */
    tcp: outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcp;
    /**
     * The Udp param.
     */
    udp: outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdp;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdV6 {
    /**
     * The Local param.
     */
    local: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6Protocol;
    /**
     * The Remote param.
     */
    remote: string;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdV6Protocol {
    /**
     * IP protocol number. Value must be between 1 and 254.
     */
    number: number;
    /**
     * The Tcp param.
     */
    tcp: outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcp;
    /**
     * The Udp param.
     */
    udp: outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdp;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface GetIpsecTunnelListDataTunnelMonitor {
    /**
     * Destination IP to send ICMP probe.
     */
    destinationIp: string;
    /**
     * Enable tunnel monitoring on this tunnel. Default: `true`.
     */
    enable: boolean;
    /**
     * Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
     */
    proxyId: string;
}

export interface GetIpsecTunnelTunnelMonitor {
    /**
     * Destination IP to send ICMP probe.
     */
    destinationIp: string;
    /**
     * Enable tunnel monitoring on this tunnel. Default: `true`.
     */
    enable: boolean;
    /**
     * Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
     */
    proxyId: string;
}

export interface GetJobsListData {
    /**
     * A description provided by the administrator or service account.
     */
    description: string;
    /**
     * The name of the device.
     */
    deviceName: string;
    /**
     * The timestamp indicating when the job was finished.
     */
    endTs: string;
    /**
     * The job ID.
     */
    id: number;
    /**
     * The job result.
     */
    jobResult: number;
    /**
     * The current status of the job.
     */
    jobStatus: number;
    /**
     * The job type.
     */
    jobType: number;
    /**
     * The parent job ID.
     */
    parentId: number;
    /**
     * Job completion percentage. Value must be less than or equal to 100.
     */
    percent: number;
    /**
     * The result of the job. String must be one of these: `"OK"`, `"FAIL"`, `"PEND"`, `"WAIT"`, `"CANCELLED"`.
     */
    resultStr: string;
    /**
     * The timestamp indicating when the job was created.
     */
    startTs: string;
    /**
     * The current status of the job. String must be one of these: `"ACT"`, `"FIN"`, `"PEND"`, `"PUSHSENT"`, `"PUSHFAIL"`.
     */
    statusStr: string;
    /**
     * The completion summary of the job.
     */
    summary: string;
    /**
     * The job type. String must be one of these: `"CommitAll"`, `"CommitAndPush"`, `"NGFW-Bootstrap-Push"`, `"Validate"`.
     */
    typeStr: string;
    /**
     * The administrator or service account that created the job.
     */
    uname: string;
}

export interface GetKerberosServerProfileListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Servers param.
     */
    servers: outputs.GetKerberosServerProfileListDataServer[];
}

export interface GetKerberosServerProfileListDataServer {
    /**
     * The Host param.
     */
    host: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
}

export interface GetKerberosServerProfileServer {
    /**
     * The Host param.
     */
    host: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
}

export interface GetLabelListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The Id param.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetLdapServerProfileListData {
    /**
     * The Base param. String length must not exceed 255 characters.
     */
    base: string;
    /**
     * The BindDn param. String length must not exceed 255 characters.
     */
    bindDn: string;
    /**
     * The BindPassword param. String length must not exceed 121 characters.
     */
    bindPassword: string;
    /**
     * The BindTimelimit param.
     */
    bindTimelimit: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
     */
    ldapType: string;
    /**
     * The RetryInterval param.
     */
    retryInterval: number;
    /**
     * The Servers param.
     */
    servers: outputs.GetLdapServerProfileListDataServer[];
    /**
     * The Ssl param.
     */
    ssl: boolean;
    /**
     * The Timelimit param.
     */
    timelimit: number;
    /**
     * The VerifyServerCertificate param.
     */
    verifyServerCertificate: boolean;
}

export interface GetLdapServerProfileListDataServer {
    /**
     * The Address param.
     */
    address: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
}

export interface GetLdapServerProfileServer {
    /**
     * The Address param.
     */
    address: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
}

export interface GetLocalUserGroupListData {
    /**
     * The Name param. String length must not exceed 31 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     */
    name: string;
    /**
     * The Users param.
     */
    users: string[];
}

export interface GetLocalUserListData {
    /**
     * The Disabled param.
     */
    disabled: boolean;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The Password param. String length must not exceed 63 characters.
     */
    password: string;
}

export interface GetMfaServerMfaVendorType {
    /**
     * The DuoSecurityV2 param.
     */
    duoSecurityV2: outputs.GetMfaServerMfaVendorTypeDuoSecurityV2;
    /**
     * The OktaAdaptiveV1 param.
     */
    oktaAdaptiveV1: outputs.GetMfaServerMfaVendorTypeOktaAdaptiveV1;
    /**
     * The PingIdentityV1 param.
     */
    pingIdentityV1: outputs.GetMfaServerMfaVendorTypePingIdentityV1;
    /**
     * The RsaSecuridAccessV1 param.
     */
    rsaSecuridAccessV1: outputs.GetMfaServerMfaVendorTypeRsaSecuridAccessV1;
}

export interface GetMfaServerMfaVendorTypeDuoSecurityV2 {
    /**
     * The DuoApiHost param.
     */
    duoApiHost: string;
    /**
     * The DuoBaseuri param.
     */
    duoBaseuri: string;
    /**
     * The DuoIntegrationKey param.
     */
    duoIntegrationKey: string;
    /**
     * The DuoSecretKey param.
     */
    duoSecretKey: string;
    /**
     * The DuoTimeout param.
     */
    duoTimeout: string;
}

export interface GetMfaServerMfaVendorTypeOktaAdaptiveV1 {
    /**
     * The OktaApiHost param.
     */
    oktaApiHost: string;
    /**
     * The OktaBaseuri param.
     */
    oktaBaseuri: string;
    /**
     * The OktaOrg param.
     */
    oktaOrg: string;
    /**
     * The OktaTimeout param.
     */
    oktaTimeout: string;
    /**
     * The OktaToken param.
     */
    oktaToken: string;
}

export interface GetMfaServerMfaVendorTypePingIdentityV1 {
    /**
     * The PingApiHost param.
     */
    pingApiHost: string;
    /**
     * The PingBaseuri param.
     */
    pingBaseuri: string;
    /**
     * The PingOrg param.
     */
    pingOrg: string;
    /**
     * The PingOrgAlias param.
     */
    pingOrgAlias: string;
    /**
     * The PingTimeout param.
     */
    pingTimeout: string;
    /**
     * The PingToken param.
     */
    pingToken: string;
}

export interface GetMfaServerMfaVendorTypeRsaSecuridAccessV1 {
    /**
     * The RsaAccessid param.
     */
    rsaAccessid: string;
    /**
     * The RsaAccesskey param.
     */
    rsaAccesskey: string;
    /**
     * The RsaApiHost param.
     */
    rsaApiHost: string;
    /**
     * The RsaAssurancepolicyid param.
     */
    rsaAssurancepolicyid: string;
    /**
     * The RsaBaseuri param.
     */
    rsaBaseuri: string;
    /**
     * The RsaTimeout param.
     */
    rsaTimeout: string;
}

export interface GetNatRuleDestinationTranslation {
    /**
     * The DnsRewrite param.
     */
    dnsRewrite: outputs.GetNatRuleDestinationTranslationDnsRewrite;
    /**
     * The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
    /**
     * The TranslatedPort param.
     */
    translatedPort: number;
}

export interface GetNatRuleDestinationTranslationDnsRewrite {
    /**
     * The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
     */
    direction: string;
}

export interface GetNatRuleDynamicDestinationTranslation {
    /**
     * The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
     */
    distribution: string;
    /**
     * The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
    /**
     * The TranslatedPort param.
     */
    translatedPort: number;
}

export interface GetNatRuleListData {
    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    activeActiveDeviceBinding: string;
    /**
     * The Description param.
     */
    description: string;
    /**
     * Static destination translation parameter.
     */
    destinationTranslation: outputs.GetNatRuleListDataDestinationTranslation;
    /**
     * The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    destinations: string[];
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    device: string;
    /**
     * The Disabled param.
     */
    disabled: boolean;
    /**
     * Dynamic destination translation parameter.
     */
    dynamicDestinationTranslation: outputs.GetNatRuleListDataDynamicDestinationTranslation;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    folder: string;
    /**
     * The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    froms: string[];
    /**
     * The GroupTag param.
     */
    groupTag: string;
    /**
     * The Id param.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    natType: string;
    /**
     * The Service param.
     */
    service: string;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    snippet: string;
    /**
     * The SourceTranslation param.
     */
    sourceTranslation: outputs.GetNatRuleListDataSourceTranslation;
    /**
     * The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    sources: string[];
    /**
     * The Tags param.
     */
    tags: string[];
    /**
     * The Target param.
     */
    target: outputs.GetNatRuleListDataTarget;
    /**
     * The ToInterface param. String must be one of these: `"any"`.
     */
    toInterface: string;
    /**
     * The destination security zone(s).
     */
    tos: string[];
}

export interface GetNatRuleListDataDestinationTranslation {
    /**
     * The DnsRewrite param.
     */
    dnsRewrite: outputs.GetNatRuleListDataDestinationTranslationDnsRewrite;
    /**
     * The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
    /**
     * The TranslatedPort param.
     */
    translatedPort: number;
}

export interface GetNatRuleListDataDestinationTranslationDnsRewrite {
    /**
     * The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
     */
    direction: string;
}

export interface GetNatRuleListDataDynamicDestinationTranslation {
    /**
     * The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
     */
    distribution: string;
    /**
     * The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
    /**
     * The TranslatedPort param.
     */
    translatedPort: number;
}

export interface GetNatRuleListDataSourceTranslation {
    /**
     * The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
     */
    biDirectional: string;
    /**
     * The Fallback param.
     */
    fallback: outputs.GetNatRuleListDataSourceTranslationFallback;
    /**
     * The TranslatedAddressArray param.
     */
    translatedAddressArrays: string[];
    /**
     * The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
}

export interface GetNatRuleListDataSourceTranslationFallback {
    /**
     * The Interface param.
     */
    interface: string;
}

export interface GetNatRuleListDataTarget {
    /**
     * The Devices param.
     */
    devices: outputs.GetNatRuleListDataTargetDevice[];
    /**
     * The Negate param.
     */
    negate: boolean;
    /**
     * The Tags param.
     */
    tags: string[];
}

export interface GetNatRuleListDataTargetDevice {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetNatRuleSourceTranslation {
    /**
     * The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
     */
    biDirectional: string;
    /**
     * The Fallback param.
     */
    fallback: outputs.GetNatRuleSourceTranslationFallback;
    /**
     * The TranslatedAddressArray param.
     */
    translatedAddressArrays: string[];
    /**
     * The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
}

export interface GetNatRuleSourceTranslationFallback {
    /**
     * The Interface param.
     */
    interface: string;
}

export interface GetNatRuleTarget {
    /**
     * The Devices param.
     */
    devices: outputs.GetNatRuleTargetDevice[];
    /**
     * The Negate param.
     */
    negate: boolean;
    /**
     * The Tags param.
     */
    tags: string[];
}

export interface GetNatRuleTargetDevice {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetOcspResponderListData {
    /**
     * The HostName param. String length must be between 1 and 255 characters.
     */
    hostName: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * alphanumeric string [:0-9a-zA-Z._-]. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     */
    name: string;
}

export interface GetProfileGroupListData {
    /**
     * The DnsSecurities param.
     */
    dnsSecurities: string[];
    /**
     * The FileBlockings param.
     */
    fileBlockings: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The SaasSecurities param.
     */
    saasSecurities: string[];
    /**
     * The Spywares param.
     */
    spywares: string[];
    /**
     * The UrlFilterings param.
     */
    urlFilterings: string[];
    /**
     * The VirusAndWildfireAnalyses param.
     */
    virusAndWildfireAnalyses: string[];
    /**
     * The Vulnerabilities param.
     */
    vulnerabilities: string[];
}

export interface GetQosPolicyRuleAction {
    /**
     * The Class param.
     */
    class: string;
}

export interface GetQosPolicyRuleDscpTos {
    /**
     * The Codepoints param.
     */
    codepoints: outputs.GetQosPolicyRuleDscpTosCodepoint[];
}

export interface GetQosPolicyRuleDscpTosCodepoint {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Type param.
     */
    type: outputs.GetQosPolicyRuleDscpTosCodepointType;
}

export interface GetQosPolicyRuleDscpTosCodepointType {
    /**
     * The Af param.
     */
    af: outputs.GetQosPolicyRuleDscpTosCodepointTypeAf;
    /**
     * The Cs param.
     */
    cs: outputs.GetQosPolicyRuleDscpTosCodepointTypeCs;
    /**
     * The Custom param.
     */
    custom: outputs.GetQosPolicyRuleDscpTosCodepointTypeCustom;
    /**
     * The Ef param.
     */
    ef: boolean;
    /**
     * The Tos param.
     */
    tos: outputs.GetQosPolicyRuleDscpTosCodepointTypeTos;
}

export interface GetQosPolicyRuleDscpTosCodepointTypeAf {
    /**
     * The Codepoint param.
     */
    codepoint: string;
}

export interface GetQosPolicyRuleDscpTosCodepointTypeCs {
    /**
     * The Codepoint param.
     */
    codepoint: string;
}

export interface GetQosPolicyRuleDscpTosCodepointTypeCustom {
    /**
     * The Codepoint param.
     */
    codepoint: outputs.GetQosPolicyRuleDscpTosCodepointTypeCustomCodepoint;
}

export interface GetQosPolicyRuleDscpTosCodepointTypeCustomCodepoint {
    /**
     * The BinaryValue param.
     */
    binaryValue: string;
    /**
     * The CodepointName param.
     */
    codepointName: string;
}

export interface GetQosPolicyRuleDscpTosCodepointTypeTos {
    /**
     * The Codepoint param.
     */
    codepoint: string;
}

export interface GetQosPolicyRuleListData {
    /**
     * The Action param.
     */
    action: outputs.GetQosPolicyRuleListDataAction;
    /**
     * The Description param.
     */
    description: string;
    /**
     * The DscpTos param.
     */
    dscpTos: outputs.GetQosPolicyRuleListDataDscpTos;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Schedule param.
     */
    schedule: string;
}

export interface GetQosPolicyRuleListDataAction {
    /**
     * The Class param.
     */
    class: string;
}

export interface GetQosPolicyRuleListDataDscpTos {
    /**
     * The Codepoints param.
     */
    codepoints: outputs.GetQosPolicyRuleListDataDscpTosCodepoint[];
}

export interface GetQosPolicyRuleListDataDscpTosCodepoint {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Type param.
     */
    type: outputs.GetQosPolicyRuleListDataDscpTosCodepointType;
}

export interface GetQosPolicyRuleListDataDscpTosCodepointType {
    /**
     * The Af param.
     */
    af: outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeAf;
    /**
     * The Cs param.
     */
    cs: outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCs;
    /**
     * The Custom param.
     */
    custom: outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCustom;
    /**
     * The Ef param.
     */
    ef: boolean;
    /**
     * The Tos param.
     */
    tos: outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeTos;
}

export interface GetQosPolicyRuleListDataDscpTosCodepointTypeAf {
    /**
     * The Codepoint param.
     */
    codepoint: string;
}

export interface GetQosPolicyRuleListDataDscpTosCodepointTypeCs {
    /**
     * The Codepoint param.
     */
    codepoint: string;
}

export interface GetQosPolicyRuleListDataDscpTosCodepointTypeCustom {
    /**
     * The Codepoint param.
     */
    codepoint: outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepoint;
}

export interface GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepoint {
    /**
     * The BinaryValue param.
     */
    binaryValue: string;
    /**
     * The CodepointName param.
     */
    codepointName: string;
}

export interface GetQosPolicyRuleListDataDscpTosCodepointTypeTos {
    /**
     * The Codepoint param.
     */
    codepoint: string;
}

export interface GetQosProfileAggregateBandwidth {
    /**
     * guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
     */
    egressGuaranteed: number;
    /**
     * max sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressMax: number;
}

export interface GetQosProfileClassBandwidthType {
    /**
     * The Mbps param.
     */
    mbps: outputs.GetQosProfileClassBandwidthTypeMbps;
    /**
     * The Percentage param.
     */
    percentage: outputs.GetQosProfileClassBandwidthTypePercentage;
}

export interface GetQosProfileClassBandwidthTypeMbps {
    /**
     * QoS setting for traffic classes.
     */
    classes: outputs.GetQosProfileClassBandwidthTypeMbpsClass[];
}

export interface GetQosProfileClassBandwidthTypeMbpsClass {
    /**
     * The ClassBandwidth param.
     */
    classBandwidth: outputs.GetQosProfileClassBandwidthTypeMbpsClassClassBandwidth;
    /**
     * Traffic class. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
     */
    priority: string;
}

export interface GetQosProfileClassBandwidthTypeMbpsClassClassBandwidth {
    /**
     * guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressGuaranteed: number;
    /**
     * max sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressMax: number;
}

export interface GetQosProfileClassBandwidthTypePercentage {
    /**
     * QoS setting for traffic classes.
     */
    classes: outputs.GetQosProfileClassBandwidthTypePercentageClass[];
}

export interface GetQosProfileClassBandwidthTypePercentageClass {
    /**
     * The ClassBandwidth param.
     */
    classBandwidth: outputs.GetQosProfileClassBandwidthTypePercentageClassClassBandwidth;
    /**
     * Traffic class. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
     */
    priority: string;
}

export interface GetQosProfileClassBandwidthTypePercentageClassClassBandwidth {
    /**
     * guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
     */
    egressGuaranteed: number;
    /**
     * max sending bandwidth in percentage. Value must be between 0 and 100.
     */
    egressMax: number;
}

export interface GetQosProfileListData {
    /**
     * The AggregateBandwidth param.
     */
    aggregateBandwidth: outputs.GetQosProfileListDataAggregateBandwidth;
    /**
     * The ClassBandwidthType param.
     */
    classBandwidthType: outputs.GetQosProfileListDataClassBandwidthType;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
}

export interface GetQosProfileListDataAggregateBandwidth {
    /**
     * guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
     */
    egressGuaranteed: number;
    /**
     * max sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressMax: number;
}

export interface GetQosProfileListDataClassBandwidthType {
    /**
     * The Mbps param.
     */
    mbps: outputs.GetQosProfileListDataClassBandwidthTypeMbps;
    /**
     * The Percentage param.
     */
    percentage: outputs.GetQosProfileListDataClassBandwidthTypePercentage;
}

export interface GetQosProfileListDataClassBandwidthTypeMbps {
    /**
     * QoS setting for traffic classes.
     */
    classes: outputs.GetQosProfileListDataClassBandwidthTypeMbpsClass[];
}

export interface GetQosProfileListDataClassBandwidthTypeMbpsClass {
    /**
     * The ClassBandwidth param.
     */
    classBandwidth: outputs.GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidth;
    /**
     * Traffic class. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
     */
    priority: string;
}

export interface GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidth {
    /**
     * guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressGuaranteed: number;
    /**
     * max sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressMax: number;
}

export interface GetQosProfileListDataClassBandwidthTypePercentage {
    /**
     * QoS setting for traffic classes.
     */
    classes: outputs.GetQosProfileListDataClassBandwidthTypePercentageClass[];
}

export interface GetQosProfileListDataClassBandwidthTypePercentageClass {
    /**
     * The ClassBandwidth param.
     */
    classBandwidth: outputs.GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidth;
    /**
     * Traffic class. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
     */
    priority: string;
}

export interface GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidth {
    /**
     * guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
     */
    egressGuaranteed: number;
    /**
     * max sending bandwidth in percentage. Value must be between 0 and 100.
     */
    egressMax: number;
}

export interface GetRadiusServerProfileListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetRadiusServerProfileListDataProtocol;
    /**
     * The Retries param. Value must be between 1 and 5.
     */
    retries: number;
    /**
     * The Servers param.
     */
    servers: outputs.GetRadiusServerProfileListDataServer[];
    /**
     * The Timeout param. Value must be between 1 and 120.
     */
    timeout: number;
}

export interface GetRadiusServerProfileListDataProtocol {
    /**
     * The Chap param.
     */
    chap: boolean;
    /**
     * The EapTtlsWithPap param.
     */
    eapTtlsWithPap: outputs.GetRadiusServerProfileListDataProtocolEapTtlsWithPap;
    /**
     * The Pap param.
     */
    pap: boolean;
    /**
     * The PeapMschapV2 param.
     */
    peapMschapV2: outputs.GetRadiusServerProfileListDataProtocolPeapMschapV2;
    /**
     * The PeapWithGtc param.
     */
    peapWithGtc: outputs.GetRadiusServerProfileListDataProtocolPeapWithGtc;
}

export interface GetRadiusServerProfileListDataProtocolEapTtlsWithPap {
    /**
     * The AnonOuterId param.
     */
    anonOuterId: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile: string;
}

export interface GetRadiusServerProfileListDataProtocolPeapMschapV2 {
    /**
     * The AllowPwdChange param.
     */
    allowPwdChange: boolean;
    /**
     * The AnonOuterId param.
     */
    anonOuterId: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile: string;
}

export interface GetRadiusServerProfileListDataProtocolPeapWithGtc {
    /**
     * The AnonOuterId param.
     */
    anonOuterId: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile: string;
}

export interface GetRadiusServerProfileListDataServer {
    /**
     * The IpAddress param.
     */
    ipAddress: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
    /**
     * The Secret param. String length must not exceed 64 characters.
     */
    secret: string;
}

export interface GetRadiusServerProfileProtocol {
    /**
     * The Chap param.
     */
    chap: boolean;
    /**
     * The EapTtlsWithPap param.
     */
    eapTtlsWithPap: outputs.GetRadiusServerProfileProtocolEapTtlsWithPap;
    /**
     * The Pap param.
     */
    pap: boolean;
    /**
     * The PeapMschapV2 param.
     */
    peapMschapV2: outputs.GetRadiusServerProfileProtocolPeapMschapV2;
    /**
     * The PeapWithGtc param.
     */
    peapWithGtc: outputs.GetRadiusServerProfileProtocolPeapWithGtc;
}

export interface GetRadiusServerProfileProtocolEapTtlsWithPap {
    /**
     * The AnonOuterId param.
     */
    anonOuterId: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile: string;
}

export interface GetRadiusServerProfileProtocolPeapMschapV2 {
    /**
     * The AllowPwdChange param.
     */
    allowPwdChange: boolean;
    /**
     * The AnonOuterId param.
     */
    anonOuterId: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile: string;
}

export interface GetRadiusServerProfileProtocolPeapWithGtc {
    /**
     * The AnonOuterId param.
     */
    anonOuterId: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile: string;
}

export interface GetRadiusServerProfileServer {
    /**
     * The IpAddress param.
     */
    ipAddress: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
    /**
     * The Secret param. String length must not exceed 64 characters.
     */
    secret: string;
}

export interface GetRegionGeoLocation {
    /**
     * latitude coordinate. Value must be between -90 and 90.
     */
    latitude: number;
    /**
     * longitude coordinate. Value must be between -180 and 180.
     */
    longitude: number;
}

export interface GetRegionListData {
    /**
     * The Addresses param.
     */
    addresses: string[];
    /**
     * The GeoLocation param.
     */
    geoLocation: outputs.GetRegionListDataGeoLocation;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
}

export interface GetRegionListDataGeoLocation {
    /**
     * latitude coordinate. Value must be between -90 and 90.
     */
    latitude: number;
    /**
     * longitude coordinate. Value must be between -180 and 180.
     */
    longitude: number;
}

export interface GetRemoteNetworkEcmpTunnel {
    /**
     * The IpsecTunnel param.
     */
    ipsecTunnel: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetRemoteNetworkEcmpTunnelProtocol;
}

export interface GetRemoteNetworkEcmpTunnelProtocol {
    /**
     * The Bgp param.
     */
    bgp: outputs.GetRemoteNetworkEcmpTunnelProtocolBgp;
}

export interface GetRemoteNetworkEcmpTunnelProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes: boolean;
    /**
     * to setup bgp protocol, enable need to set as true.
     */
    enable: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute: boolean;
    /**
     * The PeerAs param.
     */
    peerAs: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
     */
    peeringType: string;
    /**
     * The Secret param.
     */
    secret: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes: boolean;
}

export interface GetRemoteNetworkListData {
    /**
     * The EcmpLoadBalancing param. String must be one of these: `"enable"`, `"disable"`. Default: `"disable"`.
     */
    ecmpLoadBalancing: string;
    /**
     * ecmp*tunnels is required when ecmp*load*balancing is enable.
     */
    ecmpTunnels: outputs.GetRemoteNetworkListDataEcmpTunnel[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * ipsec*tunnel is required when ecmp*load_balancing is disable.
     */
    ipsecTunnel: string;
    /**
     * New customer will only be on aggregate bandwidth licensing. String length must exceed 1 characters. Default: `"FWAAS-AGGREGATE"`.
     */
    licenseType: string;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * setup the protocol when ecmp*load*balancing is disable.
     */
    protocol: outputs.GetRemoteNetworkListDataProtocol;
    /**
     * The Region param. String length must exceed 1 characters.
     */
    region: string;
    /**
     * specify secondary ipsecTunnel if needed.
     */
    secondaryIpsecTunnel: string;
    /**
     * spn-name is needed when licenseType is FWAAS-AGGREGATE.
     */
    spnName: string;
    /**
     * The Subnets param.
     */
    subnets: string[];
}

export interface GetRemoteNetworkListDataEcmpTunnel {
    /**
     * The IpsecTunnel param.
     */
    ipsecTunnel: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetRemoteNetworkListDataEcmpTunnelProtocol;
}

export interface GetRemoteNetworkListDataEcmpTunnelProtocol {
    /**
     * The Bgp param.
     */
    bgp: outputs.GetRemoteNetworkListDataEcmpTunnelProtocolBgp;
}

export interface GetRemoteNetworkListDataEcmpTunnelProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes: boolean;
    /**
     * to setup bgp protocol, enable need to set as true.
     */
    enable: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute: boolean;
    /**
     * The PeerAs param.
     */
    peerAs: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
     */
    peeringType: string;
    /**
     * The Secret param.
     */
    secret: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes: boolean;
}

export interface GetRemoteNetworkListDataProtocol {
    /**
     * The Bgp param.
     */
    bgp: outputs.GetRemoteNetworkListDataProtocolBgp;
    /**
     * secondary bgp routing as bgp*peer.
     */
    bgpPeer: outputs.GetRemoteNetworkListDataProtocolBgpPeer;
}

export interface GetRemoteNetworkListDataProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes: boolean;
    /**
     * to setup bgp protocol, enable need to set as true.
     */
    enable: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute: boolean;
    /**
     * The PeerAs param.
     */
    peerAs: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
     */
    peeringType: string;
    /**
     * The Secret param.
     */
    secret: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes: boolean;
}

export interface GetRemoteNetworkListDataProtocolBgpPeer {
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * The Secret param.
     */
    secret: string;
}

export interface GetRemoteNetworkProtocol {
    /**
     * The Bgp param.
     */
    bgp: outputs.GetRemoteNetworkProtocolBgp;
    /**
     * secondary bgp routing as bgp*peer.
     */
    bgpPeer: outputs.GetRemoteNetworkProtocolBgpPeer;
}

export interface GetRemoteNetworkProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes: boolean;
    /**
     * to setup bgp protocol, enable need to set as true.
     */
    enable: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute: boolean;
    /**
     * The PeerAs param.
     */
    peerAs: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
     */
    peeringType: string;
    /**
     * The Secret param.
     */
    secret: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes: boolean;
}

export interface GetRemoteNetworkProtocolBgpPeer {
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * The Secret param.
     */
    secret: string;
}

export interface GetSamlServerProfileListData {
    /**
     * The Certificate param. String length must not exceed 63 characters.
     */
    certificate: string;
    /**
     * The EntityId param. String length must be between 1 and 1024 characters.
     */
    entityId: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The MaxClockSkew param. Value must be between 1 and 900.
     */
    maxClockSkew: number;
    /**
     * The SloBindings param. String must be one of these: `"post"`, `"redirect"`.
     */
    sloBindings: string;
    /**
     * The SsoBindings param. String must be one of these: `"post"`, `"redirect"`.
     */
    ssoBindings: string;
    /**
     * The SsoUrl param. String length must be between 1 and 255 characters.
     */
    ssoUrl: string;
    /**
     * The ValidateIdpCertificate param.
     */
    validateIdpCertificate: boolean;
    /**
     * The WantAuthRequestsSigned param.
     */
    wantAuthRequestsSigned: boolean;
}

export interface GetScepProfileAlgorithm {
    /**
     * The Rsa param.
     */
    rsa: outputs.GetScepProfileAlgorithmRsa;
}

export interface GetScepProfileAlgorithmRsa {
    /**
     * The RsaNbits param.
     */
    rsaNbits: string;
}

export interface GetScepProfileCertificateAttributes {
    /**
     * The Dnsname param.
     */
    dnsname: string;
    /**
     * The Rfc822name param.
     */
    rfc822name: string;
    /**
     * The UniformResourceIdentifier param.
     */
    uniformResourceIdentifier: string;
}

export interface GetScepProfileListData {
    /**
     * The Algorithm param.
     */
    algorithm: outputs.GetScepProfileListDataAlgorithm;
    /**
     * The CaIdentityName param.
     */
    caIdentityName: string;
    /**
     * The CertificateAttributes param.
     */
    certificateAttributes: outputs.GetScepProfileListDataCertificateAttributes;
    /**
     * The Digest param.
     */
    digest: string;
    /**
     * The Fingerprint param.
     */
    fingerprint: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The ScepCaCert param.
     */
    scepCaCert: string;
    /**
     * The ScepChallenge param.
     */
    scepChallenge: outputs.GetScepProfileListDataScepChallenge;
    /**
     * The ScepClientCert param.
     */
    scepClientCert: string;
    /**
     * The ScepUrl param.
     */
    scepUrl: string;
    /**
     * The Subject param.
     */
    subject: string;
    /**
     * The UseAsDigitalSignature param.
     */
    useAsDigitalSignature: boolean;
    /**
     * The UseForKeyEncipherment param.
     */
    useForKeyEncipherment: boolean;
}

export interface GetScepProfileListDataAlgorithm {
    /**
     * The Rsa param.
     */
    rsa: outputs.GetScepProfileListDataAlgorithmRsa;
}

export interface GetScepProfileListDataAlgorithmRsa {
    /**
     * The RsaNbits param.
     */
    rsaNbits: string;
}

export interface GetScepProfileListDataCertificateAttributes {
    /**
     * The Dnsname param.
     */
    dnsname: string;
    /**
     * The Rfc822name param.
     */
    rfc822name: string;
    /**
     * The UniformResourceIdentifier param.
     */
    uniformResourceIdentifier: string;
}

export interface GetScepProfileListDataScepChallenge {
    /**
     * The DynamicChallenge param.
     */
    dynamicChallenge: outputs.GetScepProfileListDataScepChallengeDynamicChallenge;
    /**
     * Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters.
     */
    fixed: string;
    /**
     * The None param. String must be one of these: `""`.
     */
    none: string;
}

export interface GetScepProfileListDataScepChallengeDynamicChallenge {
    /**
     * The OtpServerUrl param. String length must not exceed 255 characters.
     */
    otpServerUrl: string;
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must not exceed 255 characters.
     */
    username: string;
}

export interface GetScepProfileScepChallenge {
    /**
     * The DynamicChallenge param.
     */
    dynamicChallenge: outputs.GetScepProfileScepChallengeDynamicChallenge;
    /**
     * Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters.
     */
    fixed: string;
    /**
     * The None param. String must be one of these: `""`.
     */
    none: string;
}

export interface GetScepProfileScepChallengeDynamicChallenge {
    /**
     * The OtpServerUrl param. String length must not exceed 255 characters.
     */
    otpServerUrl: string;
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password: string;
    /**
     * The Username param. String length must not exceed 255 characters.
     */
    username: string;
}

export interface GetScheduleListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * The ScheduleType param.
     */
    scheduleType: outputs.GetScheduleListDataScheduleType;
}

export interface GetScheduleListDataScheduleType {
    /**
     * The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    nonRecurringLists: string[];
    /**
     * The Recurring param.
     */
    recurring: outputs.GetScheduleListDataScheduleTypeRecurring;
}

export interface GetScheduleListDataScheduleTypeRecurring {
    /**
     * The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    dailyLists: string[];
    /**
     * The Weekly param.
     */
    weekly: outputs.GetScheduleListDataScheduleTypeRecurringWeekly;
}

export interface GetScheduleListDataScheduleTypeRecurringWeekly {
    /**
     * The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    fridayLists: string[];
    /**
     * The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    mondayLists: string[];
    /**
     * The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    saturdayLists: string[];
    /**
     * The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    sundayLists: string[];
    /**
     * The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    thursdayLists: string[];
    /**
     * The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    tuesdayLists: string[];
    /**
     * The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    wednesdayLists: string[];
}

export interface GetScheduleScheduleType {
    /**
     * The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    nonRecurringLists: string[];
    /**
     * The Recurring param.
     */
    recurring: outputs.GetScheduleScheduleTypeRecurring;
}

export interface GetScheduleScheduleTypeRecurring {
    /**
     * The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    dailyLists: string[];
    /**
     * The Weekly param.
     */
    weekly: outputs.GetScheduleScheduleTypeRecurringWeekly;
}

export interface GetScheduleScheduleTypeRecurringWeekly {
    /**
     * The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    fridayLists: string[];
    /**
     * The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    mondayLists: string[];
    /**
     * The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    saturdayLists: string[];
    /**
     * The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    sundayLists: string[];
    /**
     * The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    thursdayLists: string[];
    /**
     * The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    tuesdayLists: string[];
    /**
     * The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    wednesdayLists: string[];
}

export interface GetSecurityRuleListData {
    /**
     * The action to be taken when the rule is matched. String must be one of these: `"allow"`, `"deny"`, `"drop"`, `"reset-client"`, `"reset-server"`, `"reset-both"`.
     */
    action: string;
    /**
     * The application(s) being accessed.
     */
    applications: string[];
    /**
     * The URL categories being accessed.
     */
    categories: string[];
    /**
     * The description of the security rule.
     */
    description: string;
    /**
     * The destination Host Integrity Profile(s).
     */
    destinationHips: string[];
    /**
     * The destination address(es).
     */
    destinations: string[];
    /**
     * The state of the security rule. Default: `false`.
     */
    disabled: boolean;
    /**
     * The source security zone(s).
     */
    froms: string[];
    /**
     * The UUID of the security rule.
     */
    id: string;
    /**
     * The external log forwarding profile.
     */
    logSetting: string;
    /**
     * The name of the security rule.
     */
    name: string;
    /**
     * Negate the destination addresses(es). Default: `false`.
     */
    negateDestination: boolean;
    /**
     * Negate the source address(es). Default: `false`.
     */
    negateSource: boolean;
    /**
     * The security profile object.
     */
    profileSetting: outputs.GetSecurityRuleListDataProfileSetting;
    /**
     * The service(s) being accessed.
     */
    services: string[];
    /**
     * The source Host Integrity Profile(s).
     */
    sourceHips: string[];
    /**
     * The source user(s) or group(s).
     */
    sourceUsers: string[];
    /**
     * The source address(es).
     */
    sources: string[];
    /**
     * The tags associated with the security rule.
     */
    tags: string[];
    /**
     * The destination security zone(s).
     */
    tos: string[];
}

export interface GetSecurityRuleListDataProfileSetting {
    /**
     * The security profile group.
     */
    groups: string[];
}

export interface GetSecurityRuleProfileSetting {
    /**
     * The security profile group.
     */
    groups: string[];
}

export interface GetServiceConnectionBgpPeer {
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The LocalIpv6Address param.
     */
    localIpv6Address: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * The PeerIpv6Address param.
     */
    peerIpv6Address: string;
    /**
     * The SameAsPrimary param.
     */
    sameAsPrimary: boolean;
    /**
     * The Secret param.
     */
    secret: string;
}

export interface GetServiceConnectionGroupListData {
    /**
     * The DisableSnat param.
     */
    disableSnat: boolean;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PbfOnly param.
     */
    pbfOnly: boolean;
    /**
     * The Targets param.
     */
    targets: string[];
}

export interface GetServiceConnectionListData {
    /**
     * The BackupSC param.
     */
    backupSC: string;
    /**
     * The BgpPeer param.
     */
    bgpPeer: outputs.GetServiceConnectionListDataBgpPeer;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The IpsecTunnel param.
     */
    ipsecTunnel: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The NatPool param.
     */
    natPool: string;
    /**
     * The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
     */
    noExportCommunity: string;
    /**
     * The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
     */
    onboardingType: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetServiceConnectionListDataProtocol;
    /**
     * The Qos param.
     */
    qos: outputs.GetServiceConnectionListDataQos;
    /**
     * The Region param.
     */
    region: string;
    /**
     * The SecondaryIpsecTunnel param.
     */
    secondaryIpsecTunnel: string;
    /**
     * The SourceNat param.
     */
    sourceNat: boolean;
    /**
     * The Subnets param.
     */
    subnets: string[];
}

export interface GetServiceConnectionListDataBgpPeer {
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The LocalIpv6Address param.
     */
    localIpv6Address: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * The PeerIpv6Address param.
     */
    peerIpv6Address: string;
    /**
     * The SameAsPrimary param.
     */
    sameAsPrimary: boolean;
    /**
     * The Secret param.
     */
    secret: string;
}

export interface GetServiceConnectionListDataProtocol {
    /**
     * The Bgp param.
     */
    bgp: outputs.GetServiceConnectionListDataProtocolBgp;
}

export interface GetServiceConnectionListDataProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes: boolean;
    /**
     * The Enable param.
     */
    enable: boolean;
    /**
     * The FastFailover param.
     */
    fastFailover: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute: boolean;
    /**
     * The PeerAs param.
     */
    peerAs: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * The Secret param.
     */
    secret: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes: boolean;
}

export interface GetServiceConnectionListDataQos {
    /**
     * The Enable param.
     */
    enable: boolean;
    /**
     * The QosProfile param.
     */
    qosProfile: string;
}

export interface GetServiceConnectionProtocol {
    /**
     * The Bgp param.
     */
    bgp: outputs.GetServiceConnectionProtocolBgp;
}

export interface GetServiceConnectionProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes: boolean;
    /**
     * The Enable param.
     */
    enable: boolean;
    /**
     * The FastFailover param.
     */
    fastFailover: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute: boolean;
    /**
     * The PeerAs param.
     */
    peerAs: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress: string;
    /**
     * The Secret param.
     */
    secret: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes: boolean;
}

export interface GetServiceConnectionQos {
    /**
     * The Enable param.
     */
    enable: boolean;
    /**
     * The QosProfile param.
     */
    qosProfile: string;
}

export interface GetServiceGroupListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     */
    members: string[];
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
}

export interface GetServiceListData {
    /**
     * The Description param. String length must not exceed 1023 characters.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.GetServiceListDataProtocol;
    /**
     * Tags for service object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     */
    tags: string[];
}

export interface GetServiceListDataProtocol {
    /**
     * The Tcp param.
     */
    tcp: outputs.GetServiceListDataProtocolTcp;
    /**
     * The Udp param.
     */
    udp: outputs.GetServiceListDataProtocolUdp;
}

export interface GetServiceListDataProtocolTcp {
    /**
     * The Override param.
     */
    override: outputs.GetServiceListDataProtocolTcpOverride;
    /**
     * The Port param. String length must be between 1 and 1023 characters.
     */
    port: string;
    /**
     * The SourcePort param. String length must be between 1 and 1023 characters.
     */
    sourcePort: string;
}

export interface GetServiceListDataProtocolTcpOverride {
    /**
     * tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
     */
    halfcloseTimeout: number;
    /**
     * tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
     */
    timeout: number;
    /**
     * tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
     */
    timewaitTimeout: number;
}

export interface GetServiceListDataProtocolUdp {
    /**
     * The Override param.
     */
    override: outputs.GetServiceListDataProtocolUdpOverride;
    /**
     * The Port param. String length must be between 1 and 1023 characters.
     */
    port: string;
    /**
     * The SourcePort param. String length must be between 1 and 1023 characters.
     */
    sourcePort: string;
}

export interface GetServiceListDataProtocolUdpOverride {
    /**
     * udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
     */
    timeout: number;
}

export interface GetServiceProtocol {
    /**
     * The Tcp param.
     */
    tcp: outputs.GetServiceProtocolTcp;
    /**
     * The Udp param.
     */
    udp: outputs.GetServiceProtocolUdp;
}

export interface GetServiceProtocolTcp {
    /**
     * The Override param.
     */
    override: outputs.GetServiceProtocolTcpOverride;
    /**
     * The Port param. String length must be between 1 and 1023 characters.
     */
    port: string;
    /**
     * The SourcePort param. String length must be between 1 and 1023 characters.
     */
    sourcePort: string;
}

export interface GetServiceProtocolTcpOverride {
    /**
     * tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
     */
    halfcloseTimeout: number;
    /**
     * tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
     */
    timeout: number;
    /**
     * tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
     */
    timewaitTimeout: number;
}

export interface GetServiceProtocolUdp {
    /**
     * The Override param.
     */
    override: outputs.GetServiceProtocolUdpOverride;
    /**
     * The Port param. String length must be between 1 and 1023 characters.
     */
    port: string;
    /**
     * The SourcePort param. String length must be between 1 and 1023 characters.
     */
    sourcePort: string;
}

export interface GetServiceProtocolUdpOverride {
    /**
     * udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
     */
    timeout: number;
}

export interface GetSharedInfrastructureSettingsListData {
    /**
     * The ApiKey param.
     */
    apiKey: string;
    /**
     * The CaptivePortalRedirectIpAddress param.
     */
    captivePortalRedirectIpAddress: string;
    /**
     * The EgressIpNotificationUrl param.
     */
    egressIpNotificationUrl: string;
    /**
     * The InfraBgpAs param.
     */
    infraBgpAs: string;
    /**
     * The InfrastructureSubnet param.
     */
    infrastructureSubnet: string;
    /**
     * The InfrastructureSubnetIpv6 param.
     */
    infrastructureSubnetIpv6: string;
    /**
     * The Ipv6 param.
     */
    ipv6: boolean;
    /**
     * The LoopbackIps param.
     */
    loopbackIps: string[];
    /**
     * The TunnelMonitorIpAddress param.
     */
    tunnelMonitorIpAddress: string;
}

export interface GetSnippetFolder {
    /**
     * The Id param.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetSnippetListData {
    /**
     * The CreatedIn param.
     */
    createdIn: string;
    /**
     * The Description param.
     */
    description: string;
    /**
     * The DisplayName param.
     */
    displayName: string;
    /**
     * The Folders param.
     */
    folders: outputs.GetSnippetListDataFolder[];
    /**
     * The Id param.
     */
    id: string;
    /**
     * The Labels param.
     */
    labels: string[];
    /**
     * The LastUpdate param.
     */
    lastUpdate: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The SharedIn param.
     */
    sharedIn: string;
    /**
     * The Type param. String must be one of these: `"predefined"`.
     */
    type: string;
}

export interface GetSnippetListDataFolder {
    /**
     * The Id param.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetTacacsServerProfileListData {
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Protocol param. String must be one of these: `"CHAP"`, `"PAP"`.
     */
    protocol: string;
    /**
     * The Servers param.
     */
    servers: outputs.GetTacacsServerProfileListDataServer[];
    /**
     * The Timeout param. Value must be between 1 and 30.
     */
    timeout: number;
    /**
     * The UseSingleConnection param.
     */
    useSingleConnection: boolean;
}

export interface GetTacacsServerProfileListDataServer {
    /**
     * The Address param.
     */
    address: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
    /**
     * The Secret param. String length must not exceed 64 characters.
     */
    secret: string;
}

export interface GetTacacsServerProfileServer {
    /**
     * The Address param.
     */
    address: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port: number;
    /**
     * The Secret param. String length must not exceed 64 characters.
     */
    secret: string;
}

export interface GetTagListData {
    /**
     * The Color param. String must be one of these: `"Red"`, `"Green"`, `"Blue"`, `"Yellow"`, `"Copper"`, `"Orange"`, `"Purple"`, `"Gray"`, `"Light Green"`, `"Cyan"`, `"Light Gray"`, `"Blue Gray"`, `"Lime"`, `"Black"`, `"Gold"`, `"Brown"`, `"Olive"`, `"Maroon"`, `"Red-Orange"`, `"Yellow-Orange"`, `"Forest Green"`, `"Turquoise Blue"`, `"Azure Blue"`, `"Cerulean Blue"`, `"Midnight Blue"`, `"Medium Blue"`, `"Cobalt Blue"`, `"Violet Blue"`, `"Blue Violet"`, `"Medium Violet"`, `"Medium Rose"`, `"Lavender"`, `"Orchid"`, `"Thistle"`, `"Peach"`, `"Salmon"`, `"Magenta"`, `"Red Violet"`, `"Mahogany"`, `"Burnt Sienna"`, `"Chestnut"`.
     */
    color: string;
    /**
     * The Comments param. String length must not exceed 1023 characters.
     */
    comments: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param. String length must not exceed 127 characters.
     */
    name: string;
}

export interface GetTlsServiceProfileListData {
    /**
     * SSL certificate file name. String length must not exceed 255 characters.
     */
    certificate: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     */
    name: string;
    /**
     * The ProtocolSettings param.
     */
    protocolSettings: outputs.GetTlsServiceProfileListDataProtocolSettings;
}

export interface GetTlsServiceProfileListDataProtocolSettings {
    /**
     * Allow authentication SHA1.
     */
    authAlgoSha1: boolean;
    /**
     * Allow authentication SHA256.
     */
    authAlgoSha256: boolean;
    /**
     * Allow authentication SHA384.
     */
    authAlgoSha384: boolean;
    /**
     * Allow algorithm 3DES.
     */
    encAlgo3des: boolean;
    /**
     * Allow algorithm AES-128-CBC.
     */
    encAlgoAes128Cbc: boolean;
    /**
     * Allow algorithm AES-128-GCM.
     */
    encAlgoAes128Gcm: boolean;
    /**
     * Allow algorithm AES-256-CBC.
     */
    encAlgoAes256Cbc: boolean;
    /**
     * Allow algorithm AES-256-GCM.
     */
    encAlgoAes256Gcm: boolean;
    /**
     * Allow algorithm RC4.
     */
    encAlgoRc4: boolean;
    /**
     * Allow algorithm DHE.
     */
    keyxchgAlgoDhe: boolean;
    /**
     * Allow algorithm ECDHE.
     */
    keyxchgAlgoEcdhe: boolean;
    /**
     * Allow algorithm RSA.
     */
    keyxchgAlgoRsa: boolean;
    /**
     * The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
     */
    maxVersion: string;
    /**
     * The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
     */
    minVersion: string;
}

export interface GetTlsServiceProfileProtocolSettings {
    /**
     * Allow authentication SHA1.
     */
    authAlgoSha1: boolean;
    /**
     * Allow authentication SHA256.
     */
    authAlgoSha256: boolean;
    /**
     * Allow authentication SHA384.
     */
    authAlgoSha384: boolean;
    /**
     * Allow algorithm 3DES.
     */
    encAlgo3des: boolean;
    /**
     * Allow algorithm AES-128-CBC.
     */
    encAlgoAes128Cbc: boolean;
    /**
     * Allow algorithm AES-128-GCM.
     */
    encAlgoAes128Gcm: boolean;
    /**
     * Allow algorithm AES-256-CBC.
     */
    encAlgoAes256Cbc: boolean;
    /**
     * Allow algorithm AES-256-GCM.
     */
    encAlgoAes256Gcm: boolean;
    /**
     * Allow algorithm RC4.
     */
    encAlgoRc4: boolean;
    /**
     * Allow algorithm DHE.
     */
    keyxchgAlgoDhe: boolean;
    /**
     * Allow algorithm ECDHE.
     */
    keyxchgAlgoEcdhe: boolean;
    /**
     * Allow algorithm RSA.
     */
    keyxchgAlgoRsa: boolean;
    /**
     * The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
     */
    maxVersion: string;
    /**
     * The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
     */
    minVersion: string;
}

export interface GetTrafficSteeringRuleAction {
    /**
     * The Forward param.
     */
    forward: outputs.GetTrafficSteeringRuleActionForward;
    /**
     * The NoPbf param.
     */
    noPbf: boolean;
}

export interface GetTrafficSteeringRuleActionForward {
    /**
     * The Target param.
     */
    target: string;
}

export interface GetTrafficSteeringRuleListData {
    /**
     * The Action param.
     */
    action: outputs.GetTrafficSteeringRuleListDataAction;
    /**
     * The Category param.
     */
    categories: string[];
    /**
     * The Destination param.
     */
    destinations: string[];
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Service param.
     */
    services: string[];
    /**
     * The SourceUser param.
     */
    sourceUsers: string[];
    /**
     * The Source param.
     */
    sources: string[];
}

export interface GetTrafficSteeringRuleListDataAction {
    /**
     * The Forward param.
     */
    forward: outputs.GetTrafficSteeringRuleListDataActionForward;
    /**
     * The NoPbf param.
     */
    noPbf: boolean;
}

export interface GetTrafficSteeringRuleListDataActionForward {
    /**
     * The Target param.
     */
    target: string;
}

export interface GetTrustedCertificateAuthorityListData {
    /**
     * The CommonName param. String length must not exceed 255 characters.
     */
    commonName: string;
    /**
     * The ExpiryEpoch param.
     */
    expiryEpoch: string;
    /**
     * The Filename param.
     */
    filename: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Issuer param.
     */
    issuer: string;
    /**
     * The Name param. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The NotValidAfter param.
     */
    notValidAfter: string;
    /**
     * The NotValidBefore param.
     */
    notValidBefore: string;
    /**
     * The SerialNumber param.
     */
    serialNumber: string;
    /**
     * The Subject param.
     */
    subject: string;
}

export interface GetUrlAccessProfileCredentialEnforcement {
    /**
     * The Alerts param.
     */
    alerts: string[];
    /**
     * The Allows param.
     */
    allows: string[];
    /**
     * The Blocks param.
     */
    blocks: string[];
    /**
     * The Continues param.
     */
    continues: string[];
    /**
     * The LogSeverity param. Default: `"medium"`.
     */
    logSeverity: string;
    /**
     * The Mode param.
     */
    mode: outputs.GetUrlAccessProfileCredentialEnforcementMode;
}

export interface GetUrlAccessProfileCredentialEnforcementMode {
    /**
     * The Disabled param. Default: `false`.
     */
    disabled: boolean;
    /**
     * The DomainCredentials param. Default: `false`.
     */
    domainCredentials: boolean;
    /**
     * The GroupMapping param.
     */
    groupMapping: string;
    /**
     * The IpUser param. Default: `false`.
     */
    ipUser: boolean;
}

export interface GetUrlAccessProfileListData {
    /**
     * The Alerts param.
     */
    alerts: string[];
    /**
     * The Allows param.
     */
    allows: string[];
    /**
     * The Blocks param.
     */
    blocks: string[];
    /**
     * The CloudInlineCat param.
     */
    cloudInlineCat: boolean;
    /**
     * The Continues param.
     */
    continues: string[];
    /**
     * The CredentialEnforcement param.
     */
    credentialEnforcement: outputs.GetUrlAccessProfileListDataCredentialEnforcement;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The LocalInlineCat param.
     */
    localInlineCat: boolean;
    /**
     * The LogContainerPageOnly param. Default: `true`.
     */
    logContainerPageOnly: boolean;
    /**
     * The LogHttpHdrReferer param. Default: `false`.
     */
    logHttpHdrReferer: boolean;
    /**
     * The LogHttpHdrUserAgent param. Default: `false`.
     */
    logHttpHdrUserAgent: boolean;
    /**
     * The LogHttpHdrXff param. Default: `false`.
     */
    logHttpHdrXff: boolean;
    /**
     * The MlavCategoryExceptions param.
     */
    mlavCategoryExceptions: string[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The SafeSearchEnforcement param. Default: `false`.
     */
    safeSearchEnforcement: boolean;
}

export interface GetUrlAccessProfileListDataCredentialEnforcement {
    /**
     * The Alerts param.
     */
    alerts: string[];
    /**
     * The Allows param.
     */
    allows: string[];
    /**
     * The Blocks param.
     */
    blocks: string[];
    /**
     * The Continues param.
     */
    continues: string[];
    /**
     * The LogSeverity param. Default: `"medium"`.
     */
    logSeverity: string;
    /**
     * The Mode param.
     */
    mode: outputs.GetUrlAccessProfileListDataCredentialEnforcementMode;
}

export interface GetUrlAccessProfileListDataCredentialEnforcementMode {
    /**
     * The Disabled param. Default: `false`.
     */
    disabled: boolean;
    /**
     * The DomainCredentials param. Default: `false`.
     */
    domainCredentials: boolean;
    /**
     * The GroupMapping param.
     */
    groupMapping: string;
    /**
     * The IpUser param. Default: `false`.
     */
    ipUser: boolean;
}

export interface GetUrlCategoryListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The List param.
     */
    lists: string[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Type param. String must be one of these: `"URL List"`, `"Category Match"`. Default: `"URL List"`.
     */
    type: string;
}

export interface GetUrlFilteringCategoryListData {
    /**
     * The Type param.
     */
    type: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVariableListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name: string;
    /**
     * The Overridden param.
     */
    overridden: boolean;
    /**
     * The Type param. String must be one of these: `"percent"`, `"count"`, `"ip-netmask"`, `"zone"`, `"ip-range"`, `"ip-wildcard"`, `"device-priority"`, `"device-id"`, `"egress-max"`, `"as-number"`, `"fqdn"`, `"port"`, `"link-tag"`, `"group-id"`, `"rate"`, `"router-id"`, `"qos-profile"`, `"timer"`.
     */
    type: string;
    /**
     * value can accept either string or integer.
     */
    value: string;
}

export interface GetVulnerabilityProtectionProfileListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The Name param. String validation regex: `^[a-zA-Z0-9._-]+$`.
     */
    name: string;
    /**
     * The Rules param.
     */
    rules: outputs.GetVulnerabilityProtectionProfileListDataRule[];
    /**
     * The ThreatExceptions param.
     */
    threatExceptions: outputs.GetVulnerabilityProtectionProfileListDataThreatException[];
}

export interface GetVulnerabilityProtectionProfileListDataRule {
    /**
     * The Action param.
     */
    action: outputs.GetVulnerabilityProtectionProfileListDataRuleAction;
    /**
     * The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
     */
    category: string;
    /**
     * The Cves param.
     */
    cves: string[];
    /**
     * The Host param.
     */
    host: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
    /**
     * The Severities param.
     */
    severities: string[];
    /**
     * The ThreatName param.
     */
    threatName: string;
    /**
     * The VendorIds param.
     */
    vendorIds: string[];
}

export interface GetVulnerabilityProtectionProfileListDataRuleAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetVulnerabilityProtectionProfileListDataRuleActionBlockIp;
    /**
     * The Default param.
     */
    default: boolean;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetVulnerabilityProtectionProfileListDataRuleActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionProfileListDataThreatException {
    /**
     * The Action param.
     */
    action: outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionAction;
    /**
     * The ExemptIps param.
     */
    exemptIps: outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIp[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Notes param.
     */
    notes: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
    /**
     * The TimeAttribute param.
     */
    timeAttribute: outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttribute;
}

export interface GetVulnerabilityProtectionProfileListDataThreatExceptionAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIp;
    /**
     * The Default param.
     */
    default: boolean;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIp {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval: number;
    /**
     * The Threshold param. Value must be between 1 and 65535.
     */
    threshold: number;
    /**
     * The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionProfileRule {
    /**
     * The Action param.
     */
    action: outputs.GetVulnerabilityProtectionProfileRuleAction;
    /**
     * The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
     */
    category: string;
    /**
     * The Cves param.
     */
    cves: string[];
    /**
     * The Host param.
     */
    host: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
    /**
     * The Severities param.
     */
    severities: string[];
    /**
     * The ThreatName param.
     */
    threatName: string;
    /**
     * The VendorIds param.
     */
    vendorIds: string[];
}

export interface GetVulnerabilityProtectionProfileRuleAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetVulnerabilityProtectionProfileRuleActionBlockIp;
    /**
     * The Default param.
     */
    default: boolean;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetVulnerabilityProtectionProfileRuleActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionProfileThreatException {
    /**
     * The Action param.
     */
    action: outputs.GetVulnerabilityProtectionProfileThreatExceptionAction;
    /**
     * The ExemptIps param.
     */
    exemptIps: outputs.GetVulnerabilityProtectionProfileThreatExceptionExemptIp[];
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Notes param.
     */
    notes: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture: string;
    /**
     * The TimeAttribute param.
     */
    timeAttribute: outputs.GetVulnerabilityProtectionProfileThreatExceptionTimeAttribute;
}

export interface GetVulnerabilityProtectionProfileThreatExceptionAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetVulnerabilityProtectionProfileThreatExceptionActionBlockIp;
    /**
     * The Default param.
     */
    default: boolean;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetVulnerabilityProtectionProfileThreatExceptionActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionProfileThreatExceptionExemptIp {
    /**
     * The Name param.
     */
    name: string;
}

export interface GetVulnerabilityProtectionProfileThreatExceptionTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval: number;
    /**
     * The Threshold param. Value must be between 1 and 65535.
     */
    threshold: number;
    /**
     * The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionSignaturesAffectedHost {
    /**
     * The Client param.
     */
    client: boolean;
    /**
     * The Server param.
     */
    server: boolean;
}

export interface GetVulnerabilityProtectionSignaturesDefaultAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetVulnerabilityProtectionSignaturesDefaultActionBlockIp;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetVulnerabilityProtectionSignaturesDefaultActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionSignaturesListData {
    /**
     * The AffectedHost param.
     */
    affectedHost: outputs.GetVulnerabilityProtectionSignaturesListDataAffectedHost;
    /**
     * The Bugtraqs param.
     */
    bugtraqs: string[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * The Cves param.
     */
    cves: string[];
    /**
     * The DefaultAction param.
     */
    defaultAction: outputs.GetVulnerabilityProtectionSignaturesListDataDefaultAction;
    /**
     * The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
     */
    direction: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The References param.
     */
    references: string[];
    /**
     * The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
     */
    severity: string;
    /**
     * The Signature param.
     */
    signature: outputs.GetVulnerabilityProtectionSignaturesListDataSignature;
    /**
     * threat id range \n\n and \n\n. Value must be between 41000 and 6900000.
     */
    threatId: number;
    /**
     * The Threatname param. String length must not exceed 1024 characters.
     */
    threatname: string;
    /**
     * The Vendors param.
     */
    vendors: string[];
}

export interface GetVulnerabilityProtectionSignaturesListDataAffectedHost {
    /**
     * The Client param.
     */
    client: boolean;
    /**
     * The Server param.
     */
    server: boolean;
}

export interface GetVulnerabilityProtectionSignaturesListDataDefaultAction {
    /**
     * The Alert param.
     */
    alert: boolean;
    /**
     * The Allow param.
     */
    allow: boolean;
    /**
     * The BlockIp param.
     */
    blockIp: outputs.GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIp;
    /**
     * The Drop param.
     */
    drop: boolean;
    /**
     * The ResetBoth param.
     */
    resetBoth: boolean;
    /**
     * The ResetClient param.
     */
    resetClient: boolean;
    /**
     * The ResetServer param.
     */
    resetServer: boolean;
}

export interface GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignature {
    /**
     * The Combination param.
     */
    combination: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombination;
    /**
     * The Standards param.
     */
    standards: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandard[];
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureCombination {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndCondition[];
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The TimeAttribute param.
     */
    timeAttribute: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttribute;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrCondition[];
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The ThreatId param.
     */
    threatId: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval: number;
    /**
     * The Threshold param. Value must be between 1 and 255.
     */
    threshold: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandard {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
     */
    scope: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrCondition[];
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperator;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatch;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Pattern param.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesSignature {
    /**
     * The Combination param.
     */
    combination: outputs.GetVulnerabilityProtectionSignaturesSignatureCombination;
    /**
     * The Standards param.
     */
    standards: outputs.GetVulnerabilityProtectionSignaturesSignatureStandard[];
}

export interface GetVulnerabilityProtectionSignaturesSignatureCombination {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationAndCondition[];
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The TimeAttribute param.
     */
    timeAttribute: outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute;
}

export interface GetVulnerabilityProtectionSignaturesSignatureCombinationAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition[];
}

export interface GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The ThreatId param.
     */
    threatId: string;
}

export interface GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval: number;
    /**
     * The Threshold param. Value must be between 1 and 255.
     */
    threshold: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
     */
    trackBy: string;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandard {
    /**
     * The AndConditions param.
     */
    andConditions: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
     */
    scope: string;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrConditions param.
     */
    orConditions: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition[];
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Operator param.
     */
    operator: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value: number;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param.
     */
    context: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Pattern param.
     */
    pattern: string;
    /**
     * The Qualifiers param.
     */
    qualifiers: outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface GetWildfireAntiVirusProfileListData {
    /**
     * The Description param.
     */
    description: string;
    /**
     * UUID of the resource.
     */
    id: string;
    /**
     * The MlavExceptions param.
     */
    mlavExceptions: outputs.GetWildfireAntiVirusProfileListDataMlavException[];
    /**
     * The Name param. String validation regex: `^[a-zA-Z0-9._-]+$`.
     */
    name: string;
    /**
     * The PacketCapture param.
     */
    packetCapture: boolean;
    /**
     * The Rules param.
     */
    rules: outputs.GetWildfireAntiVirusProfileListDataRule[];
    /**
     * The ThreatExceptions param.
     */
    threatExceptions: outputs.GetWildfireAntiVirusProfileListDataThreatException[];
}

export interface GetWildfireAntiVirusProfileListDataMlavException {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The Filename param.
     */
    filename: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetWildfireAntiVirusProfileListDataRule {
    /**
     * The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
     */
    analysis: string;
    /**
     * The Applications param.
     */
    applications: string[];
    /**
     * The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
     */
    direction: string;
    /**
     * The FileTypes param.
     */
    fileTypes: string[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetWildfireAntiVirusProfileListDataThreatException {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Notes param.
     */
    notes: string;
}

export interface GetWildfireAntiVirusProfileMlavException {
    /**
     * The Description param.
     */
    description: string;
    /**
     * The Filename param.
     */
    filename: string;
    /**
     * The Name param.
     */
    name: string;
}

export interface GetWildfireAntiVirusProfileRule {
    /**
     * The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
     */
    analysis: string;
    /**
     * The Applications param.
     */
    applications: string[];
    /**
     * The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
     */
    direction: string;
    /**
     * The FileTypes param.
     */
    fileTypes: string[];
    /**
     * The Name param.
     */
    name: string;
}

export interface GetWildfireAntiVirusProfileThreatException {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Notes param.
     */
    notes: string;
}

export interface HipObjectAntiMalware {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectAntiMalwareCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors?: outputs.HipObjectAntiMalwareVendor[];
}

export interface HipObjectAntiMalwareCriteria {
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The LastScanTime param.
     */
    lastScanTime?: outputs.HipObjectAntiMalwareCriteriaLastScanTime;
    /**
     * The ProductVersion param.
     */
    productVersion?: outputs.HipObjectAntiMalwareCriteriaProductVersion;
    /**
     * real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    realTimeProtection?: string;
    /**
     * The VirdefVersion param.
     */
    virdefVersion?: outputs.HipObjectAntiMalwareCriteriaVirdefVersion;
}

export interface HipObjectAntiMalwareCriteriaLastScanTime {
    /**
     * The NotAvailable param. Ensure that only one of the following is specified: `notAvailable`, `notWithin`, `within`
     */
    notAvailable?: boolean;
    /**
     * The NotWithin param. Ensure that only one of the following is specified: `notAvailable`, `notWithin`, `within`
     */
    notWithin?: outputs.HipObjectAntiMalwareCriteriaLastScanTimeNotWithin;
    /**
     * The Within param. Ensure that only one of the following is specified: `notAvailable`, `notWithin`, `within`
     */
    within?: outputs.HipObjectAntiMalwareCriteriaLastScanTimeWithin;
}

export interface HipObjectAntiMalwareCriteriaLastScanTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    days?: number;
    /**
     * specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    hours?: number;
}

export interface HipObjectAntiMalwareCriteriaLastScanTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    days?: number;
    /**
     * specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    hours?: number;
}

export interface HipObjectAntiMalwareCriteriaProductVersion {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    contains?: string;
    /**
     * The GreaterEqual param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    greaterEqual?: string;
    /**
     * The GreaterThan param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    greaterThan?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    isNot?: string;
    /**
     * The LessEqual param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    lessEqual?: string;
    /**
     * The LessThan param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    lessThan?: string;
    /**
     * The NotWithin param. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    notWithin?: outputs.HipObjectAntiMalwareCriteriaProductVersionNotWithin;
    /**
     * The Within param. Ensure that only one of the following is specified: `contains`, `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`, `notWithin`, `within`
     */
    within?: outputs.HipObjectAntiMalwareCriteriaProductVersionWithin;
}

export interface HipObjectAntiMalwareCriteriaProductVersionNotWithin {
    /**
     * versions range. Value must be between 1 and 65535. Default: `1`.
     */
    versions: number;
}

export interface HipObjectAntiMalwareCriteriaProductVersionWithin {
    /**
     * versions range. Value must be between 1 and 65535. Default: `1`.
     */
    versions: number;
}

export interface HipObjectAntiMalwareCriteriaVirdefVersion {
    /**
     * The NotWithin param. Ensure that only one of the following is specified: `notWithin`, `within`
     */
    notWithin?: outputs.HipObjectAntiMalwareCriteriaVirdefVersionNotWithin;
    /**
     * The Within param. Ensure that only one of the following is specified: `notWithin`, `within`
     */
    within?: outputs.HipObjectAntiMalwareCriteriaVirdefVersionWithin;
}

export interface HipObjectAntiMalwareCriteriaVirdefVersionNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
     */
    days?: number;
    /**
     * specify versions range. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
     */
    versions?: number;
}

export interface HipObjectAntiMalwareCriteriaVirdefVersionWithin {
    /**
     * specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
     */
    days?: number;
    /**
     * specify versions range. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
     */
    versions?: number;
}

export interface HipObjectAntiMalwareVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products?: string[];
}

export interface HipObjectCertificate {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectCertificateCriteria;
}

export interface HipObjectCertificateCriteria {
    /**
     * The CertificateAttributes param.
     */
    certificateAttributes?: outputs.HipObjectCertificateCriteriaCertificateAttribute[];
    /**
     * Profile for authenticating client certificates.
     */
    certificateProfile?: string;
}

export interface HipObjectCertificateCriteriaCertificateAttribute {
    /**
     * Attribute Name.
     */
    name: string;
    /**
     * Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    value?: string;
}

export interface HipObjectCustomChecks {
    /**
     * The Criteria param.
     */
    criteria: outputs.HipObjectCustomChecksCriteria;
}

export interface HipObjectCustomChecksCriteria {
    /**
     * The Plist param.
     */
    plists?: outputs.HipObjectCustomChecksCriteriaPlist[];
    /**
     * The ProcessList param.
     */
    processLists?: outputs.HipObjectCustomChecksCriteriaProcessList[];
    /**
     * The RegistryKeys param.
     */
    registryKeys?: outputs.HipObjectCustomChecksCriteriaRegistryKey[];
}

export interface HipObjectCustomChecksCriteriaPlist {
    /**
     * The Keys param.
     */
    keys?: outputs.HipObjectCustomChecksCriteriaPlistKey[];
    /**
     * Preference list. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Plist does not exist. Default: `false`.
     */
    negate: boolean;
}

export interface HipObjectCustomChecksCriteriaPlistKey {
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * Value does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    value?: string;
}

export interface HipObjectCustomChecksCriteriaProcessList {
    /**
     * Process Name. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * The Running param. Default: `true`.
     */
    running: boolean;
}

export interface HipObjectCustomChecksCriteriaRegistryKey {
    /**
     * Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    defaultValueData?: string;
    /**
     * Registry key. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Key does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * The RegistryValues param.
     */
    registryValues?: outputs.HipObjectCustomChecksCriteriaRegistryKeyRegistryValue[];
}

export interface HipObjectCustomChecksCriteriaRegistryKeyRegistryValue {
    /**
     * Registry value name. String length must not exceed 1023 characters.
     */
    name: string;
    /**
     * Value does not exist or match specified value data. Default: `false`.
     */
    negate: boolean;
    /**
     * Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    valueData?: string;
}

export interface HipObjectDataLossPrevention {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectDataLossPreventionCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors?: outputs.HipObjectDataLossPreventionVendor[];
}

export interface HipObjectDataLossPreventionCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled?: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface HipObjectDataLossPreventionVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products?: string[];
}

export interface HipObjectDiskBackup {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectDiskBackupCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors?: outputs.HipObjectDiskBackupVendor[];
}

export interface HipObjectDiskBackupCriteria {
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The LastBackupTime param.
     */
    lastBackupTime?: outputs.HipObjectDiskBackupCriteriaLastBackupTime;
}

export interface HipObjectDiskBackupCriteriaLastBackupTime {
    /**
     * The NotAvailable param. Ensure that only one of the following is specified: `notAvailable`, `notWithin`, `within`
     */
    notAvailable?: boolean;
    /**
     * The NotWithin param. Ensure that only one of the following is specified: `notAvailable`, `notWithin`, `within`
     */
    notWithin?: outputs.HipObjectDiskBackupCriteriaLastBackupTimeNotWithin;
    /**
     * The Within param. Ensure that only one of the following is specified: `notAvailable`, `notWithin`, `within`
     */
    within?: outputs.HipObjectDiskBackupCriteriaLastBackupTimeWithin;
}

export interface HipObjectDiskBackupCriteriaLastBackupTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    days?: number;
    /**
     * specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    hours?: number;
}

export interface HipObjectDiskBackupCriteriaLastBackupTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    days?: number;
    /**
     * specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
     */
    hours?: number;
}

export interface HipObjectDiskBackupVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products?: string[];
}

export interface HipObjectDiskEncryption {
    /**
     * Encryption locations.
     */
    criteria?: outputs.HipObjectDiskEncryptionCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors?: outputs.HipObjectDiskEncryptionVendor[];
}

export interface HipObjectDiskEncryptionCriteria {
    /**
     * The EncryptedLocations param.
     */
    encryptedLocations?: outputs.HipObjectDiskEncryptionCriteriaEncryptedLocation[];
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface HipObjectDiskEncryptionCriteriaEncryptedLocation {
    /**
     * The EncryptionState param.
     */
    encryptionState?: outputs.HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState;
    /**
     * Encryption location. String length must not exceed 1023 characters.
     */
    name: string;
}

export interface HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState {
    /**
     * The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`. Ensure that only one of the following is specified: `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`. Ensure that only one of the following is specified: `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectDiskEncryptionVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products?: string[];
}

export interface HipObjectFirewall {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectFirewallCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors?: outputs.HipObjectFirewallVendor[];
}

export interface HipObjectFirewallCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled?: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
}

export interface HipObjectFirewallVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products?: string[];
}

export interface HipObjectHostInfo {
    /**
     * The Criteria param.
     */
    criteria: outputs.HipObjectHostInfoCriteria;
}

export interface HipObjectHostInfoCriteria {
    /**
     * The ClientVersion param.
     */
    clientVersion?: outputs.HipObjectHostInfoCriteriaClientVersion;
    /**
     * The Domain param.
     */
    domain?: outputs.HipObjectHostInfoCriteriaDomain;
    /**
     * The HostId param.
     */
    hostId?: outputs.HipObjectHostInfoCriteriaHostId;
    /**
     * The HostName param.
     */
    hostName?: outputs.HipObjectHostInfoCriteriaHostName;
    /**
     * If device is managed.
     */
    managed?: boolean;
    /**
     * The Os param.
     */
    os?: outputs.HipObjectHostInfoCriteriaOs;
    /**
     * The SerialNumber param.
     */
    serialNumber?: outputs.HipObjectHostInfoCriteriaSerialNumber;
}

export interface HipObjectHostInfoCriteriaClientVersion {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectHostInfoCriteriaDomain {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectHostInfoCriteriaHostId {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectHostInfoCriteriaHostName {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectHostInfoCriteriaOs {
    /**
     * The Contains param. Ensure that only one of the following is specified: `contains`
     */
    contains?: outputs.HipObjectHostInfoCriteriaOsContains;
}

export interface HipObjectHostInfoCriteriaOsContains {
    /**
     * Apple vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
     */
    apple?: string;
    /**
     * Google vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
     */
    google?: string;
    /**
     * Linux vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
     */
    linux?: string;
    /**
     * Microsoft vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
     */
    microsoft?: string;
    /**
     * Other vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
     */
    other?: string;
}

export interface HipObjectHostInfoCriteriaSerialNumber {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectMobileDevice {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectMobileDeviceCriteria;
}

export interface HipObjectMobileDeviceCriteria {
    /**
     * The Applications param.
     */
    applications?: outputs.HipObjectMobileDeviceCriteriaApplications;
    /**
     * If device's disk is encrypted.
     */
    diskEncrypted?: boolean;
    /**
     * The Imei param.
     */
    imei?: outputs.HipObjectMobileDeviceCriteriaImei;
    /**
     * If device is by rooted/jailbroken.
     */
    jailbroken?: boolean;
    /**
     * The LastCheckinTime param.
     */
    lastCheckinTime?: outputs.HipObjectMobileDeviceCriteriaLastCheckinTime;
    /**
     * The Model param.
     */
    model?: outputs.HipObjectMobileDeviceCriteriaModel;
    /**
     * If device's passcode is present.
     */
    passcodeSet?: boolean;
    /**
     * The PhoneNumber param.
     */
    phoneNumber?: outputs.HipObjectMobileDeviceCriteriaPhoneNumber;
    /**
     * The Tag param.
     */
    tag?: outputs.HipObjectMobileDeviceCriteriaTag;
}

export interface HipObjectMobileDeviceCriteriaApplications {
    /**
     * The HasMalware param.
     */
    hasMalware?: outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalware;
    /**
     * Has apps that are not managed.
     */
    hasUnmanagedApp?: boolean;
    /**
     * The Includes param.
     */
    includes?: outputs.HipObjectMobileDeviceCriteriaApplicationsInclude[];
}

export interface HipObjectMobileDeviceCriteriaApplicationsHasMalware {
    /**
     * The No param. Ensure that only one of the following is specified: `no`, `yes`
     */
    no?: boolean;
    /**
     * The Yes param. Ensure that only one of the following is specified: `no`, `yes`
     */
    yes?: outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalwareYes;
}

export interface HipObjectMobileDeviceCriteriaApplicationsHasMalwareYes {
    /**
     * The Excludes param.
     */
    excludes?: outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude[];
}

export interface HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude {
    /**
     * application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    hash?: string;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    package?: string;
}

export interface HipObjectMobileDeviceCriteriaApplicationsInclude {
    /**
     * application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    hash?: string;
    /**
     * The Name param. String length must not exceed 31 characters.
     */
    name: string;
    /**
     * application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
     */
    package?: string;
}

export interface HipObjectMobileDeviceCriteriaImei {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectMobileDeviceCriteriaLastCheckinTime {
    /**
     * The NotWithin param. Ensure that only one of the following is specified: `notWithin`, `within`
     */
    notWithin?: outputs.HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin;
    /**
     * The Within param. Ensure that only one of the following is specified: `notWithin`, `within`
     */
    within?: outputs.HipObjectMobileDeviceCriteriaLastCheckinTimeWithin;
}

export interface HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin {
    /**
     * specify time in days. Value must be between 1 and 365. Default: `30`.
     */
    days: number;
}

export interface HipObjectMobileDeviceCriteriaLastCheckinTimeWithin {
    /**
     * specify time in days. Value must be between 1 and 365. Default: `30`.
     */
    days: number;
}

export interface HipObjectMobileDeviceCriteriaModel {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectMobileDeviceCriteriaPhoneNumber {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectMobileDeviceCriteriaTag {
    /**
     * The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    contains?: string;
    /**
     * The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    is?: string;
    /**
     * The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `isNot`
     */
    isNot?: string;
}

export interface HipObjectNetworkInfo {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectNetworkInfoCriteria;
}

export interface HipObjectNetworkInfoCriteria {
    /**
     * The Network param.
     */
    network?: outputs.HipObjectNetworkInfoCriteriaNetwork;
}

export interface HipObjectNetworkInfoCriteriaNetwork {
    /**
     * The Is param. Ensure that only one of the following is specified: `is`, `isNot`
     */
    is?: outputs.HipObjectNetworkInfoCriteriaNetworkIs;
    /**
     * The IsNot param. Ensure that only one of the following is specified: `is`, `isNot`
     */
    isNot?: outputs.HipObjectNetworkInfoCriteriaNetworkIsNot;
}

export interface HipObjectNetworkInfoCriteriaNetworkIs {
    /**
     * The Mobile param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
     */
    mobile?: outputs.HipObjectNetworkInfoCriteriaNetworkIsMobile;
    /**
     * The Unknown param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
     */
    unknown?: boolean;
    /**
     * The Wifi param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
     */
    wifi?: outputs.HipObjectNetworkInfoCriteriaNetworkIsWifi;
}

export interface HipObjectNetworkInfoCriteriaNetworkIsMobile {
    /**
     * The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    carrier?: string;
}

export interface HipObjectNetworkInfoCriteriaNetworkIsNot {
    /**
     * The Ethernet param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
     */
    ethernet?: boolean;
    /**
     * The Mobile param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
     */
    mobile?: outputs.HipObjectNetworkInfoCriteriaNetworkIsNotMobile;
    /**
     * The Unknown param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
     */
    unknown?: boolean;
    /**
     * The Wifi param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
     */
    wifi?: outputs.HipObjectNetworkInfoCriteriaNetworkIsNotWifi;
}

export interface HipObjectNetworkInfoCriteriaNetworkIsNotMobile {
    /**
     * The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    carrier?: string;
}

export interface HipObjectNetworkInfoCriteriaNetworkIsNotWifi {
    /**
     * SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    ssid?: string;
}

export interface HipObjectNetworkInfoCriteriaNetworkIsWifi {
    /**
     * SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    ssid?: string;
}

export interface HipObjectPatchManagement {
    /**
     * The Criteria param.
     */
    criteria?: outputs.HipObjectPatchManagementCriteria;
    /**
     * The ExcludeVendor param. Default: `false`.
     */
    excludeVendor: boolean;
    /**
     * Vendor name.
     */
    vendors?: outputs.HipObjectPatchManagementVendor[];
}

export interface HipObjectPatchManagementCriteria {
    /**
     * is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
     */
    isEnabled?: string;
    /**
     * Is Installed. Default: `true`.
     */
    isInstalled: boolean;
    /**
     * The MissingPatches param.
     */
    missingPatches?: outputs.HipObjectPatchManagementCriteriaMissingPatches;
}

export interface HipObjectPatchManagementCriteriaMissingPatches {
    /**
     * The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
     */
    check: string;
    /**
     * The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    patches?: string[];
    /**
     * The Severity param.
     */
    severity?: outputs.HipObjectPatchManagementCriteriaMissingPatchesSeverity;
}

export interface HipObjectPatchManagementCriteriaMissingPatchesSeverity {
    /**
     * The GreaterEqual param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`
     */
    greaterEqual?: number;
    /**
     * The GreaterThan param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`
     */
    greaterThan?: number;
    /**
     * The Is param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`
     */
    is?: number;
    /**
     * The IsNot param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`
     */
    isNot?: number;
    /**
     * The LessEqual param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`
     */
    lessEqual?: number;
    /**
     * The LessThan param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greaterEqual`, `greaterThan`, `is`, `isNot`, `lessEqual`, `lessThan`
     */
    lessThan?: number;
}

export interface HipObjectPatchManagementVendor {
    /**
     * The Name param. String length must not exceed 103 characters.
     */
    name: string;
    /**
     * Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     */
    products?: string[];
}

export interface HttpHeaderProfileHttpHeaderInsertion {
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Types param.
     */
    types: outputs.HttpHeaderProfileHttpHeaderInsertionType[];
}

export interface HttpHeaderProfileHttpHeaderInsertionType {
    /**
     * The Domains param.
     */
    domains: string[];
    /**
     * The Headers param.
     */
    headers: outputs.HttpHeaderProfileHttpHeaderInsertionTypeHeader[];
    /**
     * The Name param.
     */
    name: string;
}

export interface HttpHeaderProfileHttpHeaderInsertionTypeHeader {
    /**
     * The Header param.
     */
    header: string;
    /**
     * The Log param. Default: `false`.
     */
    log: boolean;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Value param.
     */
    value: string;
}

export interface IkeCryptoProfileLifetime {
    /**
     * specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    days?: number;
    /**
     * specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    hours?: number;
    /**
     * specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    minutes?: number;
    /**
     * specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    seconds?: number;
}

export interface IkeGatewayAuthentication {
    /**
     * The Certificate param. Ensure that only one of the following is specified: `certificate`, `preSharedKey`
     */
    certificate?: outputs.IkeGatewayAuthenticationCertificate;
    /**
     * The PreSharedKey param. Ensure that only one of the following is specified: `certificate`, `preSharedKey`
     */
    preSharedKey?: outputs.IkeGatewayAuthenticationPreSharedKey;
}

export interface IkeGatewayAuthenticationCertificate {
    /**
     * The AllowIdPayloadMismatch param.
     */
    allowIdPayloadMismatch?: boolean;
    /**
     * The CertificateProfile param.
     */
    certificateProfile?: string;
    /**
     * The LocalCertificate param.
     */
    localCertificate?: outputs.IkeGatewayAuthenticationCertificateLocalCertificate;
    /**
     * The StrictValidationRevocation param.
     */
    strictValidationRevocation?: boolean;
    /**
     * The UseManagementAsSource param.
     */
    useManagementAsSource?: boolean;
}

export interface IkeGatewayAuthenticationCertificateLocalCertificate {
    /**
     * The LocalCertificateName param.
     */
    localCertificateName?: string;
}

export interface IkeGatewayAuthenticationPreSharedKey {
    /**
     * The Key param.
     */
    key?: string;
}

export interface IkeGatewayLocalId {
    /**
     * Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\,|[^,])+)$`.
     */
    id?: string;
    /**
     * The Type param.
     */
    type?: string;
}

export interface IkeGatewayPeerAddress {
    /**
     * The DynamicAddress param. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
     */
    dynamicAddress?: boolean;
    /**
     * peer gateway FQDN name. String length must not exceed 255 characters. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
     */
    fqdn?: string;
    /**
     * peer gateway has static IP address. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
     */
    ip?: string;
}

export interface IkeGatewayPeerId {
    /**
     * Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\@[\*a-zA-Z0-9.-]+)$|^([\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\,|[^,])+)$`.
     */
    id?: string;
    /**
     * The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
     */
    type?: string;
}

export interface IkeGatewayProtocol {
    /**
     * The Ikev1 param.
     */
    ikev1?: outputs.IkeGatewayProtocolIkev1;
    /**
     * The Ikev2 param.
     */
    ikev2?: outputs.IkeGatewayProtocolIkev2;
    /**
     * The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
     */
    version: string;
}

export interface IkeGatewayProtocolCommon {
    /**
     * The Fragmentation param.
     */
    fragmentation?: outputs.IkeGatewayProtocolCommonFragmentation;
    /**
     * The NatTraversal param.
     */
    natTraversal?: outputs.IkeGatewayProtocolCommonNatTraversal;
    /**
     * The PassiveMode param.
     */
    passiveMode?: boolean;
}

export interface IkeGatewayProtocolCommonFragmentation {
    /**
     * The Enable param. Default: `false`.
     */
    enable: boolean;
}

export interface IkeGatewayProtocolCommonNatTraversal {
    /**
     * The Enable param.
     */
    enable?: boolean;
}

export interface IkeGatewayProtocolIkev1 {
    /**
     * The Dpd param.
     */
    dpd?: outputs.IkeGatewayProtocolIkev1Dpd;
    /**
     * The IkeCryptoProfile param.
     */
    ikeCryptoProfile?: string;
}

export interface IkeGatewayProtocolIkev1Dpd {
    /**
     * The Enable param.
     */
    enable?: boolean;
}

export interface IkeGatewayProtocolIkev2 {
    /**
     * The Dpd param.
     */
    dpd?: outputs.IkeGatewayProtocolIkev2Dpd;
    /**
     * The IkeCryptoProfile param.
     */
    ikeCryptoProfile?: string;
}

export interface IkeGatewayProtocolIkev2Dpd {
    /**
     * The Enable param.
     */
    enable?: boolean;
}

export interface IpsecCryptoProfileAh {
    /**
     * The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
     */
    authentications: string[];
}

export interface IpsecCryptoProfileEsp {
    /**
     * Authentication algorithm.
     */
    authentications: string[];
    /**
     * Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
     */
    encryptions: string[];
}

export interface IpsecCryptoProfileLifesize {
    /**
     * specify lifesize in gigabytes(GB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
     */
    gb?: number;
    /**
     * specify lifesize in kilobytes(KB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
     */
    kb?: number;
    /**
     * specify lifesize in megabytes(MB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
     */
    mb?: number;
    /**
     * specify lifesize in terabytes(TB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
     */
    tb?: number;
}

export interface IpsecCryptoProfileLifetime {
    /**
     * specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    days?: number;
    /**
     * specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    hours?: number;
    /**
     * specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    minutes?: number;
    /**
     * specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     */
    seconds?: number;
}

export interface IpsecTunnelAutoKey {
    /**
     * The IkeGateways param.
     */
    ikeGateways: outputs.IpsecTunnelAutoKeyIkeGateway[];
    /**
     * The IpsecCryptoProfile param.
     */
    ipsecCryptoProfile: string;
    /**
     * IPv6 type of proxy*id values.
     */
    proxyIdV6s?: outputs.IpsecTunnelAutoKeyProxyIdV6[];
    /**
     * IPv4 type of proxy*id values.
     */
    proxyIds?: outputs.IpsecTunnelAutoKeyProxyId[];
}

export interface IpsecTunnelAutoKeyIkeGateway {
    /**
     * The Name param.
     */
    name?: string;
}

export interface IpsecTunnelAutoKeyProxyId {
    /**
     * The Local param.
     */
    local?: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol?: outputs.IpsecTunnelAutoKeyProxyIdProtocol;
    /**
     * The Remote param.
     */
    remote?: string;
}

export interface IpsecTunnelAutoKeyProxyIdProtocol {
    /**
     * IP protocol number. Value must be between 1 and 254. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
     */
    number?: number;
    /**
     * The Tcp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
     */
    tcp?: outputs.IpsecTunnelAutoKeyProxyIdProtocolTcp;
    /**
     * The Udp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
     */
    udp?: outputs.IpsecTunnelAutoKeyProxyIdProtocolUdp;
}

export interface IpsecTunnelAutoKeyProxyIdProtocolTcp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface IpsecTunnelAutoKeyProxyIdProtocolUdp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface IpsecTunnelAutoKeyProxyIdV6 {
    /**
     * The Local param.
     */
    local?: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol?: outputs.IpsecTunnelAutoKeyProxyIdV6Protocol;
    /**
     * The Remote param.
     */
    remote?: string;
}

export interface IpsecTunnelAutoKeyProxyIdV6Protocol {
    /**
     * IP protocol number. Value must be between 1 and 254. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
     */
    number?: number;
    /**
     * The Tcp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
     */
    tcp?: outputs.IpsecTunnelAutoKeyProxyIdV6ProtocolTcp;
    /**
     * The Udp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
     */
    udp?: outputs.IpsecTunnelAutoKeyProxyIdV6ProtocolUdp;
}

export interface IpsecTunnelAutoKeyProxyIdV6ProtocolTcp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface IpsecTunnelAutoKeyProxyIdV6ProtocolUdp {
    /**
     * The LocalPort param. Value must be between 0 and 65535. Default: `0`.
     */
    localPort: number;
    /**
     * The RemotePort param. Value must be between 0 and 65535. Default: `0`.
     */
    remotePort: number;
}

export interface IpsecTunnelTunnelMonitor {
    /**
     * Destination IP to send ICMP probe.
     */
    destinationIp: string;
    /**
     * Enable tunnel monitoring on this tunnel. Default: `true`.
     */
    enable: boolean;
    /**
     * Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
     */
    proxyId?: string;
}

export interface KerberosServerProfileServer {
    /**
     * The Host param.
     */
    host?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port?: number;
}

export interface LdapServerProfileServer {
    /**
     * The Address param.
     */
    address?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port?: number;
}

export interface MfaServerMfaVendorType {
    /**
     * The DuoSecurityV2 param. Ensure that only one of the following is specified: `duoSecurityV2`, `oktaAdaptiveV1`, `pingIdentityV1`, `rsaSecuridAccessV1`
     */
    duoSecurityV2?: outputs.MfaServerMfaVendorTypeDuoSecurityV2;
    /**
     * The OktaAdaptiveV1 param. Ensure that only one of the following is specified: `duoSecurityV2`, `oktaAdaptiveV1`, `pingIdentityV1`, `rsaSecuridAccessV1`
     */
    oktaAdaptiveV1?: outputs.MfaServerMfaVendorTypeOktaAdaptiveV1;
    /**
     * The PingIdentityV1 param. Ensure that only one of the following is specified: `duoSecurityV2`, `oktaAdaptiveV1`, `pingIdentityV1`, `rsaSecuridAccessV1`
     */
    pingIdentityV1?: outputs.MfaServerMfaVendorTypePingIdentityV1;
    /**
     * The RsaSecuridAccessV1 param. Ensure that only one of the following is specified: `duoSecurityV2`, `oktaAdaptiveV1`, `pingIdentityV1`, `rsaSecuridAccessV1`
     */
    rsaSecuridAccessV1?: outputs.MfaServerMfaVendorTypeRsaSecuridAccessV1;
}

export interface MfaServerMfaVendorTypeDuoSecurityV2 {
    /**
     * The DuoApiHost param.
     */
    duoApiHost?: string;
    /**
     * The DuoBaseuri param.
     */
    duoBaseuri?: string;
    /**
     * The DuoIntegrationKey param.
     */
    duoIntegrationKey?: string;
    /**
     * The DuoSecretKey param.
     */
    duoSecretKey?: string;
    /**
     * The DuoTimeout param.
     */
    duoTimeout?: string;
}

export interface MfaServerMfaVendorTypeOktaAdaptiveV1 {
    /**
     * The OktaApiHost param.
     */
    oktaApiHost?: string;
    /**
     * The OktaBaseuri param.
     */
    oktaBaseuri?: string;
    /**
     * The OktaOrg param.
     */
    oktaOrg?: string;
    /**
     * The OktaTimeout param.
     */
    oktaTimeout?: string;
    /**
     * The OktaToken param.
     */
    oktaToken?: string;
}

export interface MfaServerMfaVendorTypePingIdentityV1 {
    /**
     * The PingApiHost param.
     */
    pingApiHost?: string;
    /**
     * The PingBaseuri param.
     */
    pingBaseuri?: string;
    /**
     * The PingOrg param.
     */
    pingOrg?: string;
    /**
     * The PingOrgAlias param.
     */
    pingOrgAlias?: string;
    /**
     * The PingTimeout param.
     */
    pingTimeout?: string;
    /**
     * The PingToken param.
     */
    pingToken?: string;
}

export interface MfaServerMfaVendorTypeRsaSecuridAccessV1 {
    /**
     * The RsaAccessid param.
     */
    rsaAccessid?: string;
    /**
     * The RsaAccesskey param.
     */
    rsaAccesskey?: string;
    /**
     * The RsaApiHost param.
     */
    rsaApiHost?: string;
    /**
     * The RsaAssurancepolicyid param.
     */
    rsaAssurancepolicyid?: string;
    /**
     * The RsaBaseuri param.
     */
    rsaBaseuri?: string;
    /**
     * The RsaTimeout param.
     */
    rsaTimeout?: string;
}

export interface NatRuleDestinationTranslation {
    /**
     * The DnsRewrite param.
     */
    dnsRewrite?: outputs.NatRuleDestinationTranslationDnsRewrite;
    /**
     * The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
    /**
     * The TranslatedPort param.
     */
    translatedPort?: number;
}

export interface NatRuleDestinationTranslationDnsRewrite {
    /**
     * The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
     */
    direction: string;
}

export interface NatRuleDynamicDestinationTranslation {
    /**
     * The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
     */
    distribution: string;
    /**
     * The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     */
    translatedAddressSingle: string;
    /**
     * The TranslatedPort param.
     */
    translatedPort?: number;
}

export interface NatRuleSourceTranslation {
    /**
     * The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
     */
    biDirectional?: string;
    /**
     * The Fallback param.
     */
    fallback?: outputs.NatRuleSourceTranslationFallback;
    /**
     * The TranslatedAddressArray param. Ensure that only one of the following is specified: `translatedAddressArray`, `translatedAddressSingle`
     */
    translatedAddressArrays?: string[];
    /**
     * The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`. Ensure that only one of the following is specified: `translatedAddressArray`, `translatedAddressSingle`
     */
    translatedAddressSingle?: string;
}

export interface NatRuleSourceTranslationFallback {
    /**
     * The Interface param. Ensure that only one of the following is specified: `interface`
     */
    interface?: string;
}

export interface NatRuleTarget {
    /**
     * The Devices param.
     */
    devices?: outputs.NatRuleTargetDevice[];
    /**
     * The Negate param.
     */
    negate?: boolean;
    /**
     * The Tags param.
     */
    tags?: string[];
}

export interface NatRuleTargetDevice {
    /**
     * The Name param.
     */
    name?: string;
}

export interface QosPolicyRuleAction {
    /**
     * The Class param.
     */
    class?: string;
}

export interface QosPolicyRuleDscpTos {
    /**
     * The Codepoints param.
     */
    codepoints?: outputs.QosPolicyRuleDscpTosCodepoint[];
}

export interface QosPolicyRuleDscpTosCodepoint {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Type param.
     */
    type?: outputs.QosPolicyRuleDscpTosCodepointType;
}

export interface QosPolicyRuleDscpTosCodepointType {
    /**
     * The Af param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
     */
    af?: outputs.QosPolicyRuleDscpTosCodepointTypeAf;
    /**
     * The Cs param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
     */
    cs?: outputs.QosPolicyRuleDscpTosCodepointTypeCs;
    /**
     * The Custom param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
     */
    custom?: outputs.QosPolicyRuleDscpTosCodepointTypeCustom;
    /**
     * The Ef param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
     */
    ef?: boolean;
    /**
     * The Tos param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
     */
    tos?: outputs.QosPolicyRuleDscpTosCodepointTypeTos;
}

export interface QosPolicyRuleDscpTosCodepointTypeAf {
    /**
     * The Codepoint param.
     */
    codepoint?: string;
}

export interface QosPolicyRuleDscpTosCodepointTypeCs {
    /**
     * The Codepoint param.
     */
    codepoint?: string;
}

export interface QosPolicyRuleDscpTosCodepointTypeCustom {
    /**
     * The Codepoint param.
     */
    codepoint?: outputs.QosPolicyRuleDscpTosCodepointTypeCustomCodepoint;
}

export interface QosPolicyRuleDscpTosCodepointTypeCustomCodepoint {
    /**
     * The BinaryValue param.
     */
    binaryValue?: string;
    /**
     * The CodepointName param.
     */
    codepointName?: string;
}

export interface QosPolicyRuleDscpTosCodepointTypeTos {
    /**
     * The Codepoint param.
     */
    codepoint?: string;
}

export interface QosProfileAggregateBandwidth {
    /**
     * guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
     */
    egressGuaranteed?: number;
    /**
     * max sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressMax?: number;
}

export interface QosProfileClassBandwidthType {
    /**
     * The Mbps param. Ensure that only one of the following is specified: `mbps`, `percentage`
     */
    mbps?: outputs.QosProfileClassBandwidthTypeMbps;
    /**
     * The Percentage param. Ensure that only one of the following is specified: `mbps`, `percentage`
     */
    percentage?: outputs.QosProfileClassBandwidthTypePercentage;
}

export interface QosProfileClassBandwidthTypeMbps {
    /**
     * QoS setting for traffic classes.
     */
    classes?: outputs.QosProfileClassBandwidthTypeMbpsClass[];
}

export interface QosProfileClassBandwidthTypeMbpsClass {
    /**
     * The ClassBandwidth param.
     */
    classBandwidth?: outputs.QosProfileClassBandwidthTypeMbpsClassClassBandwidth;
    /**
     * Traffic class. String length must not exceed 31 characters.
     */
    name?: string;
    /**
     * traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
     */
    priority: string;
}

export interface QosProfileClassBandwidthTypeMbpsClassClassBandwidth {
    /**
     * guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressGuaranteed?: number;
    /**
     * max sending bandwidth in mbps. Value must be between 0 and 60000.
     */
    egressMax?: number;
}

export interface QosProfileClassBandwidthTypePercentage {
    /**
     * QoS setting for traffic classes.
     */
    classes?: outputs.QosProfileClassBandwidthTypePercentageClass[];
}

export interface QosProfileClassBandwidthTypePercentageClass {
    /**
     * The ClassBandwidth param.
     */
    classBandwidth?: outputs.QosProfileClassBandwidthTypePercentageClassClassBandwidth;
    /**
     * Traffic class. String length must not exceed 31 characters.
     */
    name?: string;
    /**
     * traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
     */
    priority: string;
}

export interface QosProfileClassBandwidthTypePercentageClassClassBandwidth {
    /**
     * guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
     */
    egressGuaranteed?: number;
    /**
     * max sending bandwidth in percentage. Value must be between 0 and 100.
     */
    egressMax?: number;
}

export interface RadiusServerProfileProtocol {
    /**
     * The Chap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
     */
    chap?: boolean;
    /**
     * The EapTtlsWithPap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
     */
    eapTtlsWithPap?: outputs.RadiusServerProfileProtocolEapTtlsWithPap;
    /**
     * The Pap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
     */
    pap?: boolean;
    /**
     * The PeapMschapV2 param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
     */
    peapMschapV2?: outputs.RadiusServerProfileProtocolPeapMschapV2;
    /**
     * The PeapWithGtc param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
     */
    peapWithGtc?: outputs.RadiusServerProfileProtocolPeapWithGtc;
}

export interface RadiusServerProfileProtocolEapTtlsWithPap {
    /**
     * The AnonOuterId param.
     */
    anonOuterId?: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile?: string;
}

export interface RadiusServerProfileProtocolPeapMschapV2 {
    /**
     * The AllowPwdChange param.
     */
    allowPwdChange?: boolean;
    /**
     * The AnonOuterId param.
     */
    anonOuterId?: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile?: string;
}

export interface RadiusServerProfileProtocolPeapWithGtc {
    /**
     * The AnonOuterId param.
     */
    anonOuterId?: boolean;
    /**
     * The RadiusCertProfile param.
     */
    radiusCertProfile?: string;
}

export interface RadiusServerProfileServer {
    /**
     * The IpAddress param.
     */
    ipAddress?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port?: number;
    /**
     * The Secret param. String length must not exceed 64 characters.
     */
    secret?: string;
}

export interface RegionGeoLocation {
    /**
     * latitude coordinate. Value must be between -90 and 90.
     */
    latitude: number;
    /**
     * longitude coordinate. Value must be between -180 and 180.
     */
    longitude: number;
}

export interface RemoteNetworkEcmpTunnel {
    /**
     * The IpsecTunnel param.
     */
    ipsecTunnel: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The Protocol param.
     */
    protocol: outputs.RemoteNetworkEcmpTunnelProtocol;
}

export interface RemoteNetworkEcmpTunnelProtocol {
    /**
     * The Bgp param.
     */
    bgp?: outputs.RemoteNetworkEcmpTunnelProtocolBgp;
}

export interface RemoteNetworkEcmpTunnelProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes?: boolean;
    /**
     * to setup bgp protocol, enable need to set as true.
     */
    enable?: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress?: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute?: boolean;
    /**
     * The PeerAs param.
     */
    peerAs?: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress?: string;
    /**
     * Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
     */
    peeringType?: string;
    /**
     * The Secret param.
     */
    secret?: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes?: boolean;
}

export interface RemoteNetworkProtocol {
    /**
     * The Bgp param.
     */
    bgp?: outputs.RemoteNetworkProtocolBgp;
    /**
     * secondary bgp routing as bgp*peer.
     */
    bgpPeer?: outputs.RemoteNetworkProtocolBgpPeer;
}

export interface RemoteNetworkProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes?: boolean;
    /**
     * to setup bgp protocol, enable need to set as true.
     */
    enable?: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress?: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute?: boolean;
    /**
     * The PeerAs param.
     */
    peerAs?: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress?: string;
    /**
     * Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
     */
    peeringType?: string;
    /**
     * The Secret param.
     */
    secret?: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes?: boolean;
}

export interface RemoteNetworkProtocolBgpPeer {
    /**
     * The LocalIpAddress param.
     */
    localIpAddress?: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress?: string;
    /**
     * The Secret param.
     */
    secret?: string;
}

export interface ScepProfileAlgorithm {
    /**
     * The Rsa param.
     */
    rsa?: outputs.ScepProfileAlgorithmRsa;
}

export interface ScepProfileAlgorithmRsa {
    /**
     * The RsaNbits param.
     */
    rsaNbits?: string;
}

export interface ScepProfileCertificateAttributes {
    /**
     * The Dnsname param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniformResourceIdentifier`
     */
    dnsname?: string;
    /**
     * The Rfc822name param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniformResourceIdentifier`
     */
    rfc822name?: string;
    /**
     * The UniformResourceIdentifier param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniformResourceIdentifier`
     */
    uniformResourceIdentifier?: string;
}

export interface ScepProfileScepChallenge {
    /**
     * The DynamicChallenge param. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     */
    dynamicChallenge?: outputs.ScepProfileScepChallengeDynamicChallenge;
    /**
     * Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     */
    fixed?: string;
    /**
     * The None param. String must be one of these: `""`. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     */
    none?: string;
}

export interface ScepProfileScepChallengeDynamicChallenge {
    /**
     * The OtpServerUrl param. String length must not exceed 255 characters.
     */
    otpServerUrl?: string;
    /**
     * The Password param. String length must not exceed 255 characters.
     */
    password?: string;
    /**
     * The Username param. String length must not exceed 255 characters.
     */
    username?: string;
}

export interface ScheduleScheduleType {
    /**
     * The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`. Ensure that only one of the following is specified: `nonRecurring`, `recurring`
     */
    nonRecurringLists?: string[];
    /**
     * The Recurring param. Ensure that only one of the following is specified: `nonRecurring`, `recurring`
     */
    recurring?: outputs.ScheduleScheduleTypeRecurring;
}

export interface ScheduleScheduleTypeRecurring {
    /**
     * The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`. Ensure that only one of the following is specified: `daily`, `weekly`
     */
    dailyLists?: string[];
    /**
     * The Weekly param. Ensure that only one of the following is specified: `daily`, `weekly`
     */
    weekly?: outputs.ScheduleScheduleTypeRecurringWeekly;
}

export interface ScheduleScheduleTypeRecurringWeekly {
    /**
     * The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    fridayLists?: string[];
    /**
     * The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    mondayLists?: string[];
    /**
     * The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    saturdayLists?: string[];
    /**
     * The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    sundayLists?: string[];
    /**
     * The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    thursdayLists?: string[];
    /**
     * The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    tuesdayLists?: string[];
    /**
     * The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
     */
    wednesdayLists?: string[];
}

export interface SecurityRuleProfileSetting {
    /**
     * The security profile group.
     */
    groups?: string[];
}

export interface ServiceConnectionBgpPeer {
    /**
     * The LocalIpAddress param.
     */
    localIpAddress?: string;
    /**
     * The LocalIpv6Address param.
     */
    localIpv6Address?: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress?: string;
    /**
     * The PeerIpv6Address param.
     */
    peerIpv6Address?: string;
    /**
     * The SameAsPrimary param.
     */
    sameAsPrimary?: boolean;
    /**
     * The Secret param.
     */
    secret?: string;
}

export interface ServiceConnectionProtocol {
    /**
     * The Bgp param.
     */
    bgp?: outputs.ServiceConnectionProtocolBgp;
}

export interface ServiceConnectionProtocolBgp {
    /**
     * The DoNotExportRoutes param.
     */
    doNotExportRoutes?: boolean;
    /**
     * The Enable param.
     */
    enable?: boolean;
    /**
     * The FastFailover param.
     */
    fastFailover?: boolean;
    /**
     * The LocalIpAddress param.
     */
    localIpAddress?: string;
    /**
     * The OriginateDefaultRoute param.
     */
    originateDefaultRoute?: boolean;
    /**
     * The PeerAs param.
     */
    peerAs?: string;
    /**
     * The PeerIpAddress param.
     */
    peerIpAddress?: string;
    /**
     * The Secret param.
     */
    secret?: string;
    /**
     * The SummarizeMobileUserRoutes param.
     */
    summarizeMobileUserRoutes?: boolean;
}

export interface ServiceConnectionQos {
    /**
     * The Enable param.
     */
    enable?: boolean;
    /**
     * The QosProfile param.
     */
    qosProfile?: string;
}

export interface ServiceProtocol {
    /**
     * The Tcp param. Ensure that only one of the following is specified: `tcp`, `udp`
     */
    tcp?: outputs.ServiceProtocolTcp;
    /**
     * The Udp param. Ensure that only one of the following is specified: `tcp`, `udp`
     */
    udp?: outputs.ServiceProtocolUdp;
}

export interface ServiceProtocolTcp {
    /**
     * The Override param.
     */
    override?: outputs.ServiceProtocolTcpOverride;
    /**
     * The Port param. String length must be between 1 and 1023 characters.
     */
    port: string;
    /**
     * The SourcePort param. String length must be between 1 and 1023 characters.
     */
    sourcePort?: string;
}

export interface ServiceProtocolTcpOverride {
    /**
     * tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
     */
    halfcloseTimeout: number;
    /**
     * tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
     */
    timeout: number;
    /**
     * tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
     */
    timewaitTimeout: number;
}

export interface ServiceProtocolUdp {
    /**
     * The Override param.
     */
    override?: outputs.ServiceProtocolUdpOverride;
    /**
     * The Port param. String length must be between 1 and 1023 characters.
     */
    port: string;
    /**
     * The SourcePort param. String length must be between 1 and 1023 characters.
     */
    sourcePort?: string;
}

export interface ServiceProtocolUdpOverride {
    /**
     * udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
     */
    timeout: number;
}

export interface SnippetFolder {
    /**
     * The Id param.
     */
    id?: string;
    /**
     * The Name param.
     */
    name?: string;
}

export interface TacacsServerProfileServer {
    /**
     * The Address param.
     */
    address?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Port param. Value must be between 1 and 65535.
     */
    port?: number;
    /**
     * The Secret param. String length must not exceed 64 characters.
     */
    secret?: string;
}

export interface TlsServiceProfileProtocolSettings {
    /**
     * Allow authentication SHA1.
     */
    authAlgoSha1?: boolean;
    /**
     * Allow authentication SHA256.
     */
    authAlgoSha256?: boolean;
    /**
     * Allow authentication SHA384.
     */
    authAlgoSha384?: boolean;
    /**
     * Allow algorithm 3DES.
     */
    encAlgo3des?: boolean;
    /**
     * Allow algorithm AES-128-CBC.
     */
    encAlgoAes128Cbc?: boolean;
    /**
     * Allow algorithm AES-128-GCM.
     */
    encAlgoAes128Gcm?: boolean;
    /**
     * Allow algorithm AES-256-CBC.
     */
    encAlgoAes256Cbc?: boolean;
    /**
     * Allow algorithm AES-256-GCM.
     */
    encAlgoAes256Gcm?: boolean;
    /**
     * Allow algorithm RC4.
     */
    encAlgoRc4?: boolean;
    /**
     * Allow algorithm DHE.
     */
    keyxchgAlgoDhe?: boolean;
    /**
     * Allow algorithm ECDHE.
     */
    keyxchgAlgoEcdhe?: boolean;
    /**
     * Allow algorithm RSA.
     */
    keyxchgAlgoRsa?: boolean;
    /**
     * The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
     */
    maxVersion: string;
    /**
     * The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
     */
    minVersion: string;
}

export interface TrafficSteeringRuleAction {
    /**
     * The Forward param. Ensure that only one of the following is specified: `forward`, `no-pbf`
     */
    forward?: outputs.TrafficSteeringRuleActionForward;
    /**
     * The NoPbf param. Ensure that only one of the following is specified: `forward`, `no-pbf`
     */
    noPbf?: boolean;
}

export interface TrafficSteeringRuleActionForward {
    /**
     * The Target param.
     */
    target?: string;
}

export interface UrlAccessProfileCredentialEnforcement {
    /**
     * The Alerts param.
     */
    alerts?: string[];
    /**
     * The Allows param.
     */
    allows?: string[];
    /**
     * The Blocks param.
     */
    blocks?: string[];
    /**
     * The Continues param.
     */
    continues?: string[];
    /**
     * The LogSeverity param. Default: `"medium"`.
     */
    logSeverity: string;
    /**
     * The Mode param.
     */
    mode?: outputs.UrlAccessProfileCredentialEnforcementMode;
}

export interface UrlAccessProfileCredentialEnforcementMode {
    /**
     * The Disabled param. Default: `false`.
     */
    disabled: boolean;
    /**
     * The DomainCredentials param. Default: `false`.
     */
    domainCredentials: boolean;
    /**
     * The GroupMapping param.
     */
    groupMapping?: string;
    /**
     * The IpUser param. Default: `false`.
     */
    ipUser: boolean;
}

export interface VulnerabilityProtectionProfileRule {
    /**
     * The Action param.
     */
    action?: outputs.VulnerabilityProtectionProfileRuleAction;
    /**
     * The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
     */
    category?: string;
    /**
     * The Cves param.
     */
    cves?: string[];
    /**
     * The Host param.
     */
    host?: string;
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture?: string;
    /**
     * The Severities param.
     */
    severities?: string[];
    /**
     * The ThreatName param.
     */
    threatName?: string;
    /**
     * The VendorIds param.
     */
    vendorIds?: string[];
}

export interface VulnerabilityProtectionProfileRuleAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    allow?: boolean;
    /**
     * The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    blockIp?: outputs.VulnerabilityProtectionProfileRuleActionBlockIp;
    /**
     * The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    default?: boolean;
    /**
     * The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    drop?: boolean;
    /**
     * The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetBoth?: boolean;
    /**
     * The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetClient?: boolean;
    /**
     * The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetServer?: boolean;
}

export interface VulnerabilityProtectionProfileRuleActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy?: string;
}

export interface VulnerabilityProtectionProfileThreatException {
    /**
     * The Action param.
     */
    action?: outputs.VulnerabilityProtectionProfileThreatExceptionAction;
    /**
     * The ExemptIps param.
     */
    exemptIps?: outputs.VulnerabilityProtectionProfileThreatExceptionExemptIp[];
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Notes param.
     */
    notes?: string;
    /**
     * The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
     */
    packetCapture?: string;
    /**
     * The TimeAttribute param.
     */
    timeAttribute?: outputs.VulnerabilityProtectionProfileThreatExceptionTimeAttribute;
}

export interface VulnerabilityProtectionProfileThreatExceptionAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    allow?: boolean;
    /**
     * The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    blockIp?: outputs.VulnerabilityProtectionProfileThreatExceptionActionBlockIp;
    /**
     * The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    default?: boolean;
    /**
     * The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    drop?: boolean;
    /**
     * The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetBoth?: boolean;
    /**
     * The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetClient?: boolean;
    /**
     * The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `default`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetServer?: boolean;
}

export interface VulnerabilityProtectionProfileThreatExceptionActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy?: string;
}

export interface VulnerabilityProtectionProfileThreatExceptionExemptIp {
    /**
     * The Name param.
     */
    name: string;
}

export interface VulnerabilityProtectionProfileThreatExceptionTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval?: number;
    /**
     * The Threshold param. Value must be between 1 and 65535.
     */
    threshold?: number;
    /**
     * The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
     */
    trackBy?: string;
}

export interface VulnerabilityProtectionSignaturesAffectedHost {
    /**
     * The Client param. Ensure that only one of the following is specified: `client`, `server`
     */
    client?: boolean;
    /**
     * The Server param. Ensure that only one of the following is specified: `client`, `server`
     */
    server?: boolean;
}

export interface VulnerabilityProtectionSignaturesDefaultAction {
    /**
     * The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    alert?: boolean;
    /**
     * The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    allow?: boolean;
    /**
     * The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    blockIp?: outputs.VulnerabilityProtectionSignaturesDefaultActionBlockIp;
    /**
     * The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    drop?: boolean;
    /**
     * The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetBoth?: boolean;
    /**
     * The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetClient?: boolean;
    /**
     * The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `blockIp`, `drop`, `resetBoth`, `resetClient`, `resetServer`
     */
    resetServer?: boolean;
}

export interface VulnerabilityProtectionSignaturesDefaultActionBlockIp {
    /**
     * The Duration param. Value must be between 1 and 3600.
     */
    duration?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
     */
    trackBy?: string;
}

export interface VulnerabilityProtectionSignaturesSignature {
    /**
     * The Combination param. Ensure that only one of the following is specified: `combination`, `standard`
     */
    combination?: outputs.VulnerabilityProtectionSignaturesSignatureCombination;
    /**
     * The Standards param. Ensure that only one of the following is specified: `combination`, `standard`
     */
    standards?: outputs.VulnerabilityProtectionSignaturesSignatureStandard[];
}

export interface VulnerabilityProtectionSignaturesSignatureCombination {
    /**
     * The AndConditions param.
     */
    andConditions?: outputs.VulnerabilityProtectionSignaturesSignatureCombinationAndCondition[];
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The TimeAttribute param.
     */
    timeAttribute?: outputs.VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute;
}

export interface VulnerabilityProtectionSignaturesSignatureCombinationAndCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The OrConditions param.
     */
    orConditions?: outputs.VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition[];
}

export interface VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The ThreatId param.
     */
    threatId?: string;
}

export interface VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute {
    /**
     * The Interval param. Value must be between 1 and 3600.
     */
    interval?: number;
    /**
     * The Threshold param. Value must be between 1 and 255.
     */
    threshold?: number;
    /**
     * The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
     */
    trackBy?: string;
}

export interface VulnerabilityProtectionSignaturesSignatureStandard {
    /**
     * The AndConditions param.
     */
    andConditions?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndCondition[];
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment?: string;
    /**
     * The Name param.
     */
    name: string;
    /**
     * The OrderFree param. Default: `false`.
     */
    orderFree: boolean;
    /**
     * The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
     */
    scope?: string;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The OrConditions param.
     */
    orConditions?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition[];
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Operator param.
     */
    operator?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator {
    /**
     * The EqualTo param.
     */
    equalTo?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo;
    /**
     * The GreaterThan param.
     */
    greaterThan?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan;
    /**
     * The LessThan param.
     */
    lessThan?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan;
    /**
     * The PatternMatch param.
     */
    patternMatch?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value?: number;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value?: number;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier[];
    /**
     * The Value param. Value must be between 0 and 4294967295.
     */
    value?: number;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch {
    /**
     * The Context param.
     */
    context?: string;
    /**
     * The Negate param. Default: `false`.
     */
    negate: boolean;
    /**
     * The Pattern param.
     */
    pattern?: string;
    /**
     * The Qualifiers param.
     */
    qualifiers?: outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier[];
}

export interface VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Value param.
     */
    value?: string;
}

export interface WildfireAntiVirusProfileMlavException {
    /**
     * The Description param.
     */
    description?: string;
    /**
     * The Filename param.
     */
    filename?: string;
    /**
     * The Name param.
     */
    name?: string;
}

export interface WildfireAntiVirusProfileRule {
    /**
     * The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
     */
    analysis?: string;
    /**
     * The Applications param.
     */
    applications?: string[];
    /**
     * The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
     */
    direction?: string;
    /**
     * The FileTypes param.
     */
    fileTypes?: string[];
    /**
     * The Name param.
     */
    name?: string;
}

export interface WildfireAntiVirusProfileThreatException {
    /**
     * The Name param.
     */
    name?: string;
    /**
     * The Notes param.
     */
    notes?: string;
}

