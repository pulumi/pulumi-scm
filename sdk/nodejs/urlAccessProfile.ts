// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.UrlAccessProfile("example", {folder: "Shared"});
 * ```
 */
export class UrlAccessProfile extends pulumi.CustomResource {
    /**
     * Get an existing UrlAccessProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UrlAccessProfileState, opts?: pulumi.CustomResourceOptions): UrlAccessProfile {
        return new UrlAccessProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/urlAccessProfile:UrlAccessProfile';

    /**
     * Returns true if the given object is an instance of UrlAccessProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UrlAccessProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UrlAccessProfile.__pulumiType;
    }

    /**
     * The Alerts param.
     */
    declare public readonly alerts: pulumi.Output<string[] | undefined>;
    /**
     * The Allows param.
     */
    declare public readonly allows: pulumi.Output<string[] | undefined>;
    /**
     * The Blocks param.
     */
    declare public readonly blocks: pulumi.Output<string[] | undefined>;
    /**
     * The CloudInlineCat param.
     */
    declare public readonly cloudInlineCat: pulumi.Output<boolean | undefined>;
    /**
     * The Continues param.
     */
    declare public readonly continues: pulumi.Output<string[] | undefined>;
    /**
     * The CredentialEnforcement param.
     */
    declare public readonly credentialEnforcement: pulumi.Output<outputs.UrlAccessProfileCredentialEnforcement | undefined>;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The Device param.
     */
    declare public readonly device: pulumi.Output<string | undefined>;
    /**
     * The Folder param.
     */
    declare public readonly folder: pulumi.Output<string | undefined>;
    /**
     * The LocalInlineCat param.
     */
    declare public readonly localInlineCat: pulumi.Output<boolean | undefined>;
    /**
     * The LogContainerPageOnly param. Default: `true`.
     */
    declare public readonly logContainerPageOnly: pulumi.Output<boolean>;
    /**
     * The LogHttpHdrReferer param. Default: `false`.
     */
    declare public readonly logHttpHdrReferer: pulumi.Output<boolean>;
    /**
     * The LogHttpHdrUserAgent param. Default: `false`.
     */
    declare public readonly logHttpHdrUserAgent: pulumi.Output<boolean>;
    /**
     * The LogHttpHdrXff param. Default: `false`.
     */
    declare public readonly logHttpHdrXff: pulumi.Output<boolean>;
    /**
     * The MlavCategoryExceptions param.
     */
    declare public readonly mlavCategoryExceptions: pulumi.Output<string[] | undefined>;
    /**
     * The Name param.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The SafeSearchEnforcement param. Default: `false`.
     */
    declare public readonly safeSearchEnforcement: pulumi.Output<boolean>;
    /**
     * The Snippet param.
     */
    declare public readonly snippet: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly tfid: pulumi.Output<string>;

    /**
     * Create a UrlAccessProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UrlAccessProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UrlAccessProfileArgs | UrlAccessProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UrlAccessProfileState | undefined;
            resourceInputs["alerts"] = state?.alerts;
            resourceInputs["allows"] = state?.allows;
            resourceInputs["blocks"] = state?.blocks;
            resourceInputs["cloudInlineCat"] = state?.cloudInlineCat;
            resourceInputs["continues"] = state?.continues;
            resourceInputs["credentialEnforcement"] = state?.credentialEnforcement;
            resourceInputs["description"] = state?.description;
            resourceInputs["device"] = state?.device;
            resourceInputs["folder"] = state?.folder;
            resourceInputs["localInlineCat"] = state?.localInlineCat;
            resourceInputs["logContainerPageOnly"] = state?.logContainerPageOnly;
            resourceInputs["logHttpHdrReferer"] = state?.logHttpHdrReferer;
            resourceInputs["logHttpHdrUserAgent"] = state?.logHttpHdrUserAgent;
            resourceInputs["logHttpHdrXff"] = state?.logHttpHdrXff;
            resourceInputs["mlavCategoryExceptions"] = state?.mlavCategoryExceptions;
            resourceInputs["name"] = state?.name;
            resourceInputs["safeSearchEnforcement"] = state?.safeSearchEnforcement;
            resourceInputs["snippet"] = state?.snippet;
            resourceInputs["tfid"] = state?.tfid;
        } else {
            const args = argsOrState as UrlAccessProfileArgs | undefined;
            resourceInputs["alerts"] = args?.alerts;
            resourceInputs["allows"] = args?.allows;
            resourceInputs["blocks"] = args?.blocks;
            resourceInputs["cloudInlineCat"] = args?.cloudInlineCat;
            resourceInputs["continues"] = args?.continues;
            resourceInputs["credentialEnforcement"] = args?.credentialEnforcement;
            resourceInputs["description"] = args?.description;
            resourceInputs["device"] = args?.device;
            resourceInputs["folder"] = args?.folder;
            resourceInputs["localInlineCat"] = args?.localInlineCat;
            resourceInputs["logContainerPageOnly"] = args?.logContainerPageOnly;
            resourceInputs["logHttpHdrReferer"] = args?.logHttpHdrReferer;
            resourceInputs["logHttpHdrUserAgent"] = args?.logHttpHdrUserAgent;
            resourceInputs["logHttpHdrXff"] = args?.logHttpHdrXff;
            resourceInputs["mlavCategoryExceptions"] = args?.mlavCategoryExceptions;
            resourceInputs["name"] = args?.name;
            resourceInputs["safeSearchEnforcement"] = args?.safeSearchEnforcement;
            resourceInputs["snippet"] = args?.snippet;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UrlAccessProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UrlAccessProfile resources.
 */
export interface UrlAccessProfileState {
    /**
     * The Alerts param.
     */
    alerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Allows param.
     */
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Blocks param.
     */
    blocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CloudInlineCat param.
     */
    cloudInlineCat?: pulumi.Input<boolean>;
    /**
     * The Continues param.
     */
    continues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CredentialEnforcement param.
     */
    credentialEnforcement?: pulumi.Input<inputs.UrlAccessProfileCredentialEnforcement>;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The LocalInlineCat param.
     */
    localInlineCat?: pulumi.Input<boolean>;
    /**
     * The LogContainerPageOnly param. Default: `true`.
     */
    logContainerPageOnly?: pulumi.Input<boolean>;
    /**
     * The LogHttpHdrReferer param. Default: `false`.
     */
    logHttpHdrReferer?: pulumi.Input<boolean>;
    /**
     * The LogHttpHdrUserAgent param. Default: `false`.
     */
    logHttpHdrUserAgent?: pulumi.Input<boolean>;
    /**
     * The LogHttpHdrXff param. Default: `false`.
     */
    logHttpHdrXff?: pulumi.Input<boolean>;
    /**
     * The MlavCategoryExceptions param.
     */
    mlavCategoryExceptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The SafeSearchEnforcement param. Default: `false`.
     */
    safeSearchEnforcement?: pulumi.Input<boolean>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    tfid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UrlAccessProfile resource.
 */
export interface UrlAccessProfileArgs {
    /**
     * The Alerts param.
     */
    alerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Allows param.
     */
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Blocks param.
     */
    blocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CloudInlineCat param.
     */
    cloudInlineCat?: pulumi.Input<boolean>;
    /**
     * The Continues param.
     */
    continues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CredentialEnforcement param.
     */
    credentialEnforcement?: pulumi.Input<inputs.UrlAccessProfileCredentialEnforcement>;
    /**
     * The Description param. String length must not exceed 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The LocalInlineCat param.
     */
    localInlineCat?: pulumi.Input<boolean>;
    /**
     * The LogContainerPageOnly param. Default: `true`.
     */
    logContainerPageOnly?: pulumi.Input<boolean>;
    /**
     * The LogHttpHdrReferer param. Default: `false`.
     */
    logHttpHdrReferer?: pulumi.Input<boolean>;
    /**
     * The LogHttpHdrUserAgent param. Default: `false`.
     */
    logHttpHdrUserAgent?: pulumi.Input<boolean>;
    /**
     * The LogHttpHdrXff param. Default: `false`.
     */
    logHttpHdrXff?: pulumi.Input<boolean>;
    /**
     * The MlavCategoryExceptions param.
     */
    mlavCategoryExceptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name param.
     */
    name?: pulumi.Input<string>;
    /**
     * The SafeSearchEnforcement param. Default: `false`.
     */
    safeSearchEnforcement?: pulumi.Input<boolean>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
}
