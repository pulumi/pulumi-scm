// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.IpsecCryptoProfile("example", {});
 * ```
 */
export class IpsecCryptoProfile extends pulumi.CustomResource {
    /**
     * Get an existing IpsecCryptoProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsecCryptoProfileState, opts?: pulumi.CustomResourceOptions): IpsecCryptoProfile {
        return new IpsecCryptoProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/ipsecCryptoProfile:IpsecCryptoProfile';

    /**
     * Returns true if the given object is an instance of IpsecCryptoProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpsecCryptoProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpsecCryptoProfile.__pulumiType;
    }

    /**
     * The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
     */
    declare public readonly ah: pulumi.Output<outputs.IpsecCryptoProfileAh | undefined>;
    /**
     * The Device param.
     */
    declare public readonly device: pulumi.Output<string | undefined>;
    /**
     * phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
     */
    declare public readonly dhGroup: pulumi.Output<string>;
    /**
     * The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
     */
    declare public readonly esp: pulumi.Output<outputs.IpsecCryptoProfileEsp | undefined>;
    /**
     * The Folder param.
     */
    declare public readonly folder: pulumi.Output<string | undefined>;
    /**
     * The Lifesize param.
     */
    declare public readonly lifesize: pulumi.Output<outputs.IpsecCryptoProfileLifesize | undefined>;
    /**
     * The Lifetime param.
     */
    declare public readonly lifetime: pulumi.Output<outputs.IpsecCryptoProfileLifetime>;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The Snippet param.
     */
    declare public readonly snippet: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly tfid: pulumi.Output<string>;

    /**
     * Create a IpsecCryptoProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpsecCryptoProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsecCryptoProfileArgs | IpsecCryptoProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsecCryptoProfileState | undefined;
            resourceInputs["ah"] = state?.ah;
            resourceInputs["device"] = state?.device;
            resourceInputs["dhGroup"] = state?.dhGroup;
            resourceInputs["esp"] = state?.esp;
            resourceInputs["folder"] = state?.folder;
            resourceInputs["lifesize"] = state?.lifesize;
            resourceInputs["lifetime"] = state?.lifetime;
            resourceInputs["name"] = state?.name;
            resourceInputs["snippet"] = state?.snippet;
            resourceInputs["tfid"] = state?.tfid;
        } else {
            const args = argsOrState as IpsecCryptoProfileArgs | undefined;
            if (args?.lifetime === undefined && !opts.urn) {
                throw new Error("Missing required property 'lifetime'");
            }
            resourceInputs["ah"] = args?.ah;
            resourceInputs["device"] = args?.device;
            resourceInputs["dhGroup"] = args?.dhGroup;
            resourceInputs["esp"] = args?.esp;
            resourceInputs["folder"] = args?.folder;
            resourceInputs["lifesize"] = args?.lifesize;
            resourceInputs["lifetime"] = args?.lifetime;
            resourceInputs["name"] = args?.name;
            resourceInputs["snippet"] = args?.snippet;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpsecCryptoProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpsecCryptoProfile resources.
 */
export interface IpsecCryptoProfileState {
    /**
     * The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
     */
    ah?: pulumi.Input<inputs.IpsecCryptoProfileAh>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
     */
    dhGroup?: pulumi.Input<string>;
    /**
     * The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
     */
    esp?: pulumi.Input<inputs.IpsecCryptoProfileEsp>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The Lifesize param.
     */
    lifesize?: pulumi.Input<inputs.IpsecCryptoProfileLifesize>;
    /**
     * The Lifetime param.
     */
    lifetime?: pulumi.Input<inputs.IpsecCryptoProfileLifetime>;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    tfid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpsecCryptoProfile resource.
 */
export interface IpsecCryptoProfileArgs {
    /**
     * The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
     */
    ah?: pulumi.Input<inputs.IpsecCryptoProfileAh>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
     */
    dhGroup?: pulumi.Input<string>;
    /**
     * The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
     */
    esp?: pulumi.Input<inputs.IpsecCryptoProfileEsp>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The Lifesize param.
     */
    lifesize?: pulumi.Input<inputs.IpsecCryptoProfileLifesize>;
    /**
     * The Lifetime param.
     */
    lifetime: pulumi.Input<inputs.IpsecCryptoProfileLifetime>;
    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
}
