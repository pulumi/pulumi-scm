// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = scm.getNatRule({
 *     id: "1234-56-789",
 * });
 * ```
 */
export function getNatRule(args: GetNatRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNatRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getNatRule:getNatRule", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNatRule.
 */
export interface GetNatRuleArgs {
    /**
     * The Id param.
     */
    id: string;
}

/**
 * A collection of values returned by getNatRule.
 */
export interface GetNatRuleResult {
    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
     */
    readonly activeActiveDeviceBinding: string;
    /**
     * The Description param.
     */
    readonly description: string;
    /**
     * Static destination translation parameter.
     */
    readonly destinationTranslation: outputs.GetNatRuleDestinationTranslation;
    /**
     * The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    readonly destinations: string[];
    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    readonly device: string;
    /**
     * The Disabled param.
     */
    readonly disabled: boolean;
    /**
     * Dynamic destination translation parameter.
     */
    readonly dynamicDestinationTranslation: outputs.GetNatRuleDynamicDestinationTranslation;
    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    readonly folder: string;
    /**
     * The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    readonly froms: string[];
    /**
     * The GroupTag param.
     */
    readonly groupTag: string;
    /**
     * The Id param.
     */
    readonly id: string;
    /**
     * The Name param.
     */
    readonly name: string;
    /**
     * The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
     */
    readonly natType: string;
    /**
     * The Service param.
     */
    readonly service: string;
    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     */
    readonly snippet: string;
    /**
     * The SourceTranslation param.
     */
    readonly sourceTranslation: outputs.GetNatRuleSourceTranslation;
    /**
     * The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `"any"`.
     */
    readonly sources: string[];
    /**
     * The Tags param.
     */
    readonly tags: string[];
    /**
     * The Target param.
     */
    readonly target: outputs.GetNatRuleTarget;
    readonly tfid: string;
    /**
     * The ToInterface param. String must be one of these: `"any"`.
     */
    readonly toInterface: string;
    /**
     * The destination security zone(s).
     */
    readonly tos: string[];
}
/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = scm.getNatRule({
 *     id: "1234-56-789",
 * });
 * ```
 */
export function getNatRuleOutput(args: GetNatRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatRuleResult> {
    return pulumi.output(args).apply((a: any) => getNatRule(a, opts))
}

/**
 * A collection of arguments for invoking getNatRule.
 */
export interface GetNatRuleOutputArgs {
    /**
     * The Id param.
     */
    id: pulumi.Input<string>;
}
