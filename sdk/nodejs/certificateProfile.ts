// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.CertificateProfile("example", {});
 * ```
 */
export class CertificateProfile extends pulumi.CustomResource {
    /**
     * Get an existing CertificateProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateProfileState, opts?: pulumi.CustomResourceOptions): CertificateProfile {
        return new CertificateProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/certificateProfile:CertificateProfile';

    /**
     * Returns true if the given object is an instance of CertificateProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CertificateProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateProfile.__pulumiType;
    }

    /**
     * The BlockExpiredCert param.
     */
    declare public readonly blockExpiredCert: pulumi.Output<boolean | undefined>;
    /**
     * The BlockTimeoutCert param.
     */
    declare public readonly blockTimeoutCert: pulumi.Output<boolean | undefined>;
    /**
     * The BlockUnauthenticatedCert param.
     */
    declare public readonly blockUnauthenticatedCert: pulumi.Output<boolean | undefined>;
    /**
     * The BlockUnknownCert param.
     */
    declare public readonly blockUnknownCert: pulumi.Output<boolean | undefined>;
    /**
     * The CaCertificates param.
     */
    declare public readonly caCertificates: pulumi.Output<outputs.CertificateProfileCaCertificate[]>;
    /**
     * The CertStatusTimeout param.
     */
    declare public readonly certStatusTimeout: pulumi.Output<string | undefined>;
    /**
     * The CrlReceiveTimeout param.
     */
    declare public readonly crlReceiveTimeout: pulumi.Output<string | undefined>;
    /**
     * The Device param.
     */
    declare public readonly device: pulumi.Output<string | undefined>;
    /**
     * The Domain param.
     */
    declare public readonly domain: pulumi.Output<string | undefined>;
    /**
     * The Folder param.
     */
    declare public readonly folder: pulumi.Output<string | undefined>;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The OcspReceiveTimeout param.
     */
    declare public readonly ocspReceiveTimeout: pulumi.Output<string | undefined>;
    /**
     * The Snippet param.
     */
    declare public readonly snippet: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly tfid: pulumi.Output<string>;
    /**
     * The UseCrl param.
     */
    declare public readonly useCrl: pulumi.Output<boolean | undefined>;
    /**
     * The UseOcsp param.
     */
    declare public readonly useOcsp: pulumi.Output<boolean | undefined>;
    /**
     * The UsernameField param.
     */
    declare public readonly usernameField: pulumi.Output<outputs.CertificateProfileUsernameField | undefined>;

    /**
     * Create a CertificateProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateProfileArgs | CertificateProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateProfileState | undefined;
            resourceInputs["blockExpiredCert"] = state?.blockExpiredCert;
            resourceInputs["blockTimeoutCert"] = state?.blockTimeoutCert;
            resourceInputs["blockUnauthenticatedCert"] = state?.blockUnauthenticatedCert;
            resourceInputs["blockUnknownCert"] = state?.blockUnknownCert;
            resourceInputs["caCertificates"] = state?.caCertificates;
            resourceInputs["certStatusTimeout"] = state?.certStatusTimeout;
            resourceInputs["crlReceiveTimeout"] = state?.crlReceiveTimeout;
            resourceInputs["device"] = state?.device;
            resourceInputs["domain"] = state?.domain;
            resourceInputs["folder"] = state?.folder;
            resourceInputs["name"] = state?.name;
            resourceInputs["ocspReceiveTimeout"] = state?.ocspReceiveTimeout;
            resourceInputs["snippet"] = state?.snippet;
            resourceInputs["tfid"] = state?.tfid;
            resourceInputs["useCrl"] = state?.useCrl;
            resourceInputs["useOcsp"] = state?.useOcsp;
            resourceInputs["usernameField"] = state?.usernameField;
        } else {
            const args = argsOrState as CertificateProfileArgs | undefined;
            if (args?.caCertificates === undefined && !opts.urn) {
                throw new Error("Missing required property 'caCertificates'");
            }
            resourceInputs["blockExpiredCert"] = args?.blockExpiredCert;
            resourceInputs["blockTimeoutCert"] = args?.blockTimeoutCert;
            resourceInputs["blockUnauthenticatedCert"] = args?.blockUnauthenticatedCert;
            resourceInputs["blockUnknownCert"] = args?.blockUnknownCert;
            resourceInputs["caCertificates"] = args?.caCertificates;
            resourceInputs["certStatusTimeout"] = args?.certStatusTimeout;
            resourceInputs["crlReceiveTimeout"] = args?.crlReceiveTimeout;
            resourceInputs["device"] = args?.device;
            resourceInputs["domain"] = args?.domain;
            resourceInputs["folder"] = args?.folder;
            resourceInputs["name"] = args?.name;
            resourceInputs["ocspReceiveTimeout"] = args?.ocspReceiveTimeout;
            resourceInputs["snippet"] = args?.snippet;
            resourceInputs["useCrl"] = args?.useCrl;
            resourceInputs["useOcsp"] = args?.useOcsp;
            resourceInputs["usernameField"] = args?.usernameField;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CertificateProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CertificateProfile resources.
 */
export interface CertificateProfileState {
    /**
     * The BlockExpiredCert param.
     */
    blockExpiredCert?: pulumi.Input<boolean>;
    /**
     * The BlockTimeoutCert param.
     */
    blockTimeoutCert?: pulumi.Input<boolean>;
    /**
     * The BlockUnauthenticatedCert param.
     */
    blockUnauthenticatedCert?: pulumi.Input<boolean>;
    /**
     * The BlockUnknownCert param.
     */
    blockUnknownCert?: pulumi.Input<boolean>;
    /**
     * The CaCertificates param.
     */
    caCertificates?: pulumi.Input<pulumi.Input<inputs.CertificateProfileCaCertificate>[]>;
    /**
     * The CertStatusTimeout param.
     */
    certStatusTimeout?: pulumi.Input<string>;
    /**
     * The CrlReceiveTimeout param.
     */
    crlReceiveTimeout?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Domain param.
     */
    domain?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The OcspReceiveTimeout param.
     */
    ocspReceiveTimeout?: pulumi.Input<string>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    tfid?: pulumi.Input<string>;
    /**
     * The UseCrl param.
     */
    useCrl?: pulumi.Input<boolean>;
    /**
     * The UseOcsp param.
     */
    useOcsp?: pulumi.Input<boolean>;
    /**
     * The UsernameField param.
     */
    usernameField?: pulumi.Input<inputs.CertificateProfileUsernameField>;
}

/**
 * The set of arguments for constructing a CertificateProfile resource.
 */
export interface CertificateProfileArgs {
    /**
     * The BlockExpiredCert param.
     */
    blockExpiredCert?: pulumi.Input<boolean>;
    /**
     * The BlockTimeoutCert param.
     */
    blockTimeoutCert?: pulumi.Input<boolean>;
    /**
     * The BlockUnauthenticatedCert param.
     */
    blockUnauthenticatedCert?: pulumi.Input<boolean>;
    /**
     * The BlockUnknownCert param.
     */
    blockUnknownCert?: pulumi.Input<boolean>;
    /**
     * The CaCertificates param.
     */
    caCertificates: pulumi.Input<pulumi.Input<inputs.CertificateProfileCaCertificate>[]>;
    /**
     * The CertStatusTimeout param.
     */
    certStatusTimeout?: pulumi.Input<string>;
    /**
     * The CrlReceiveTimeout param.
     */
    crlReceiveTimeout?: pulumi.Input<string>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Domain param.
     */
    domain?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The OcspReceiveTimeout param.
     */
    ocspReceiveTimeout?: pulumi.Input<string>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    /**
     * The UseCrl param.
     */
    useCrl?: pulumi.Input<boolean>;
    /**
     * The UseOcsp param.
     */
    useOcsp?: pulumi.Input<boolean>;
    /**
     * The UsernameField param.
     */
    usernameField?: pulumi.Input<inputs.CertificateProfileUsernameField>;
}
