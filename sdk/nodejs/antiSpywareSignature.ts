// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves a config item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scm from "@pulumi/scm";
 *
 * const example = new scm.AntiSpywareSignature("example", {});
 * ```
 */
export class AntiSpywareSignature extends pulumi.CustomResource {
    /**
     * Get an existing AntiSpywareSignature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntiSpywareSignatureState, opts?: pulumi.CustomResourceOptions): AntiSpywareSignature {
        return new AntiSpywareSignature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scm:index/antiSpywareSignature:AntiSpywareSignature';

    /**
     * Returns true if the given object is an instance of AntiSpywareSignature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntiSpywareSignature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntiSpywareSignature.__pulumiType;
    }

    /**
     * The Bugtraqs param.
     */
    declare public readonly bugtraqs: pulumi.Output<string[] | undefined>;
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * The Cves param.
     */
    declare public readonly cves: pulumi.Output<string[] | undefined>;
    /**
     * The DefaultAction param.
     */
    declare public readonly defaultAction: pulumi.Output<outputs.AntiSpywareSignatureDefaultAction | undefined>;
    /**
     * The Device param.
     */
    declare public readonly device: pulumi.Output<string | undefined>;
    /**
     * The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
     */
    declare public readonly direction: pulumi.Output<string | undefined>;
    /**
     * The Folder param.
     */
    declare public readonly folder: pulumi.Output<string | undefined>;
    /**
     * The References param.
     */
    declare public readonly references: pulumi.Output<string[] | undefined>;
    /**
     * The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
     */
    declare public readonly severity: pulumi.Output<string | undefined>;
    /**
     * The Signature param.
     */
    declare public readonly signature: pulumi.Output<outputs.AntiSpywareSignatureSignature | undefined>;
    /**
     * The Snippet param.
     */
    declare public readonly snippet: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly tfid: pulumi.Output<string>;
    /**
     * threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
     */
    declare public readonly threatId: pulumi.Output<number>;
    /**
     * The Threatname param. String length must not exceed 1024 characters.
     */
    declare public readonly threatname: pulumi.Output<string>;
    /**
     * The Vendors param.
     */
    declare public readonly vendors: pulumi.Output<string[] | undefined>;

    /**
     * Create a AntiSpywareSignature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AntiSpywareSignatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntiSpywareSignatureArgs | AntiSpywareSignatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntiSpywareSignatureState | undefined;
            resourceInputs["bugtraqs"] = state?.bugtraqs;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["cves"] = state?.cves;
            resourceInputs["defaultAction"] = state?.defaultAction;
            resourceInputs["device"] = state?.device;
            resourceInputs["direction"] = state?.direction;
            resourceInputs["folder"] = state?.folder;
            resourceInputs["references"] = state?.references;
            resourceInputs["severity"] = state?.severity;
            resourceInputs["signature"] = state?.signature;
            resourceInputs["snippet"] = state?.snippet;
            resourceInputs["tfid"] = state?.tfid;
            resourceInputs["threatId"] = state?.threatId;
            resourceInputs["threatname"] = state?.threatname;
            resourceInputs["vendors"] = state?.vendors;
        } else {
            const args = argsOrState as AntiSpywareSignatureArgs | undefined;
            if (args?.threatId === undefined && !opts.urn) {
                throw new Error("Missing required property 'threatId'");
            }
            if (args?.threatname === undefined && !opts.urn) {
                throw new Error("Missing required property 'threatname'");
            }
            resourceInputs["bugtraqs"] = args?.bugtraqs;
            resourceInputs["comment"] = args?.comment;
            resourceInputs["cves"] = args?.cves;
            resourceInputs["defaultAction"] = args?.defaultAction;
            resourceInputs["device"] = args?.device;
            resourceInputs["direction"] = args?.direction;
            resourceInputs["folder"] = args?.folder;
            resourceInputs["references"] = args?.references;
            resourceInputs["severity"] = args?.severity;
            resourceInputs["signature"] = args?.signature;
            resourceInputs["snippet"] = args?.snippet;
            resourceInputs["threatId"] = args?.threatId;
            resourceInputs["threatname"] = args?.threatname;
            resourceInputs["vendors"] = args?.vendors;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntiSpywareSignature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AntiSpywareSignature resources.
 */
export interface AntiSpywareSignatureState {
    /**
     * The Bugtraqs param.
     */
    bugtraqs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * The Cves param.
     */
    cves?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DefaultAction param.
     */
    defaultAction?: pulumi.Input<inputs.AntiSpywareSignatureDefaultAction>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
     */
    direction?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The References param.
     */
    references?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
     */
    severity?: pulumi.Input<string>;
    /**
     * The Signature param.
     */
    signature?: pulumi.Input<inputs.AntiSpywareSignatureSignature>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    tfid?: pulumi.Input<string>;
    /**
     * threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
     */
    threatId?: pulumi.Input<number>;
    /**
     * The Threatname param. String length must not exceed 1024 characters.
     */
    threatname?: pulumi.Input<string>;
    /**
     * The Vendors param.
     */
    vendors?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AntiSpywareSignature resource.
 */
export interface AntiSpywareSignatureArgs {
    /**
     * The Bugtraqs param.
     */
    bugtraqs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Comment param. String length must not exceed 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * The Cves param.
     */
    cves?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DefaultAction param.
     */
    defaultAction?: pulumi.Input<inputs.AntiSpywareSignatureDefaultAction>;
    /**
     * The Device param.
     */
    device?: pulumi.Input<string>;
    /**
     * The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
     */
    direction?: pulumi.Input<string>;
    /**
     * The Folder param.
     */
    folder?: pulumi.Input<string>;
    /**
     * The References param.
     */
    references?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
     */
    severity?: pulumi.Input<string>;
    /**
     * The Signature param.
     */
    signature?: pulumi.Input<inputs.AntiSpywareSignatureSignature>;
    /**
     * The Snippet param.
     */
    snippet?: pulumi.Input<string>;
    /**
     * threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
     */
    threatId: pulumi.Input<number>;
    /**
     * The Threatname param. String length must not exceed 1024 characters.
     */
    threatname: pulumi.Input<string>;
    /**
     * The Vendors param.
     */
    vendors?: pulumi.Input<pulumi.Input<string>[]>;
}
