// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm.Outputs
{

    [OutputType]
    public sealed class GetUrlAccessProfileListDataResult
    {
        /// <summary>
        /// The Alerts param.
        /// </summary>
        public readonly ImmutableArray<string> Alerts;
        /// <summary>
        /// The Allows param.
        /// </summary>
        public readonly ImmutableArray<string> Allows;
        /// <summary>
        /// The Blocks param.
        /// </summary>
        public readonly ImmutableArray<string> Blocks;
        /// <summary>
        /// The CloudInlineCat param.
        /// </summary>
        public readonly bool CloudInlineCat;
        /// <summary>
        /// The Continues param.
        /// </summary>
        public readonly ImmutableArray<string> Continues;
        /// <summary>
        /// The CredentialEnforcement param.
        /// </summary>
        public readonly Outputs.GetUrlAccessProfileListDataCredentialEnforcementResult CredentialEnforcement;
        /// <summary>
        /// The Description param. String length must not exceed 255 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// UUID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The LocalInlineCat param.
        /// </summary>
        public readonly bool LocalInlineCat;
        /// <summary>
        /// The LogContainerPageOnly param. Default: `true`.
        /// </summary>
        public readonly bool LogContainerPageOnly;
        /// <summary>
        /// The LogHttpHdrReferer param. Default: `false`.
        /// </summary>
        public readonly bool LogHttpHdrReferer;
        /// <summary>
        /// The LogHttpHdrUserAgent param. Default: `false`.
        /// </summary>
        public readonly bool LogHttpHdrUserAgent;
        /// <summary>
        /// The LogHttpHdrXff param. Default: `false`.
        /// </summary>
        public readonly bool LogHttpHdrXff;
        /// <summary>
        /// The MlavCategoryExceptions param.
        /// </summary>
        public readonly ImmutableArray<string> MlavCategoryExceptions;
        /// <summary>
        /// The Name param.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The SafeSearchEnforcement param. Default: `false`.
        /// </summary>
        public readonly bool SafeSearchEnforcement;

        [OutputConstructor]
        private GetUrlAccessProfileListDataResult(
            ImmutableArray<string> alerts,

            ImmutableArray<string> allows,

            ImmutableArray<string> blocks,

            bool cloudInlineCat,

            ImmutableArray<string> continues,

            Outputs.GetUrlAccessProfileListDataCredentialEnforcementResult credentialEnforcement,

            string description,

            string id,

            bool localInlineCat,

            bool logContainerPageOnly,

            bool logHttpHdrReferer,

            bool logHttpHdrUserAgent,

            bool logHttpHdrXff,

            ImmutableArray<string> mlavCategoryExceptions,

            string name,

            bool safeSearchEnforcement)
        {
            Alerts = alerts;
            Allows = allows;
            Blocks = blocks;
            CloudInlineCat = cloudInlineCat;
            Continues = continues;
            CredentialEnforcement = credentialEnforcement;
            Description = description;
            Id = id;
            LocalInlineCat = localInlineCat;
            LogContainerPageOnly = logContainerPageOnly;
            LogHttpHdrReferer = logHttpHdrReferer;
            LogHttpHdrUserAgent = logHttpHdrUserAgent;
            LogHttpHdrXff = logHttpHdrXff;
            MlavCategoryExceptions = mlavCategoryExceptions;
            Name = name;
            SafeSearchEnforcement = safeSearchEnforcement;
        }
    }
}
