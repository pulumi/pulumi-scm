// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm.Outputs
{

    [OutputType]
    public sealed class GetScepProfileListDataResult
    {
        /// <summary>
        /// The Algorithm param.
        /// </summary>
        public readonly Outputs.GetScepProfileListDataAlgorithmResult Algorithm;
        /// <summary>
        /// The CaIdentityName param.
        /// </summary>
        public readonly string CaIdentityName;
        /// <summary>
        /// The CertificateAttributes param.
        /// </summary>
        public readonly Outputs.GetScepProfileListDataCertificateAttributesResult CertificateAttributes;
        /// <summary>
        /// The Digest param.
        /// </summary>
        public readonly string Digest;
        /// <summary>
        /// The Fingerprint param.
        /// </summary>
        public readonly string Fingerprint;
        /// <summary>
        /// UUID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ScepCaCert param.
        /// </summary>
        public readonly string ScepCaCert;
        /// <summary>
        /// The ScepChallenge param.
        /// </summary>
        public readonly Outputs.GetScepProfileListDataScepChallengeResult ScepChallenge;
        /// <summary>
        /// The ScepClientCert param.
        /// </summary>
        public readonly string ScepClientCert;
        /// <summary>
        /// The ScepUrl param.
        /// </summary>
        public readonly string ScepUrl;
        /// <summary>
        /// The Subject param.
        /// </summary>
        public readonly string Subject;
        /// <summary>
        /// The UseAsDigitalSignature param.
        /// </summary>
        public readonly bool UseAsDigitalSignature;
        /// <summary>
        /// The UseForKeyEncipherment param.
        /// </summary>
        public readonly bool UseForKeyEncipherment;

        [OutputConstructor]
        private GetScepProfileListDataResult(
            Outputs.GetScepProfileListDataAlgorithmResult algorithm,

            string caIdentityName,

            Outputs.GetScepProfileListDataCertificateAttributesResult certificateAttributes,

            string digest,

            string fingerprint,

            string id,

            string name,

            string scepCaCert,

            Outputs.GetScepProfileListDataScepChallengeResult scepChallenge,

            string scepClientCert,

            string scepUrl,

            string subject,

            bool useAsDigitalSignature,

            bool useForKeyEncipherment)
        {
            Algorithm = algorithm;
            CaIdentityName = caIdentityName;
            CertificateAttributes = certificateAttributes;
            Digest = digest;
            Fingerprint = fingerprint;
            Id = id;
            Name = name;
            ScepCaCert = scepCaCert;
            ScepChallenge = scepChallenge;
            ScepClientCert = scepClientCert;
            ScepUrl = scepUrl;
            Subject = subject;
            UseAsDigitalSignature = useAsDigitalSignature;
            UseForKeyEncipherment = useForKeyEncipherment;
        }
    }
}
