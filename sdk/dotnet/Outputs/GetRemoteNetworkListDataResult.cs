// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm.Outputs
{

    [OutputType]
    public sealed class GetRemoteNetworkListDataResult
    {
        /// <summary>
        /// The EcmpLoadBalancing param. String must be one of these: `"enable"`, `"disable"`. Default: `"disable"`.
        /// </summary>
        public readonly string EcmpLoadBalancing;
        /// <summary>
        /// ecmp*tunnels is required when ecmp*load*balancing is enable.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRemoteNetworkListDataEcmpTunnelResult> EcmpTunnels;
        /// <summary>
        /// UUID of the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ipsec*tunnel is required when ecmp*load_balancing is disable.
        /// </summary>
        public readonly string IpsecTunnel;
        /// <summary>
        /// New customer will only be on aggregate bandwidth licensing. String length must exceed 1 characters. Default: `"FWAAS-AGGREGATE"`.
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// setup the protocol when ecmp*load*balancing is disable.
        /// </summary>
        public readonly Outputs.GetRemoteNetworkListDataProtocolResult Protocol;
        /// <summary>
        /// The Region param. String length must exceed 1 characters.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// specify secondary ipsec_tunnel if needed.
        /// </summary>
        public readonly string SecondaryIpsecTunnel;
        /// <summary>
        /// spn-name is needed when license_type is FWAAS-AGGREGATE.
        /// </summary>
        public readonly string SpnName;
        /// <summary>
        /// The Subnets param.
        /// </summary>
        public readonly ImmutableArray<string> Subnets;

        [OutputConstructor]
        private GetRemoteNetworkListDataResult(
            string ecmpLoadBalancing,

            ImmutableArray<Outputs.GetRemoteNetworkListDataEcmpTunnelResult> ecmpTunnels,

            string id,

            string ipsecTunnel,

            string licenseType,

            string name,

            Outputs.GetRemoteNetworkListDataProtocolResult protocol,

            string region,

            string secondaryIpsecTunnel,

            string spnName,

            ImmutableArray<string> subnets)
        {
            EcmpLoadBalancing = ecmpLoadBalancing;
            EcmpTunnels = ecmpTunnels;
            Id = id;
            IpsecTunnel = ipsecTunnel;
            LicenseType = licenseType;
            Name = name;
            Protocol = protocol;
            Region = region;
            SecondaryIpsecTunnel = secondaryIpsecTunnel;
            SpnName = spnName;
            Subnets = subnets;
        }
    }
}
