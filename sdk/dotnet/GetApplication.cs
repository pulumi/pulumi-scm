// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    public static class GetApplication
    {
        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetApplication.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("scm:index/getApplication:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetApplication.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("scm:index/getApplication:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
        public static new GetApplicationArgs Empty => new GetApplicationArgs();
    }

    public sealed class GetApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
        public static new GetApplicationInvokeArgs Empty => new GetApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// The AbleToTransferFile param.
        /// </summary>
        public readonly bool AbleToTransferFile;
        /// <summary>
        /// The AlgDisableCapability param. String length must not exceed 127 characters.
        /// </summary>
        public readonly string AlgDisableCapability;
        /// <summary>
        /// The Category param.
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// The ConsumeBigBandwidth param.
        /// </summary>
        public readonly bool ConsumeBigBandwidth;
        /// <summary>
        /// The DataIdent param.
        /// </summary>
        public readonly bool DataIdent;
        /// <summary>
        /// The Default param.
        /// </summary>
        public readonly Outputs.GetApplicationDefaultResult Default;
        /// <summary>
        /// The Description param. String length must not exceed 1023 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The EvasiveBehavior param.
        /// </summary>
        public readonly bool EvasiveBehavior;
        /// <summary>
        /// The FileTypeIdent param.
        /// </summary>
        public readonly bool FileTypeIdent;
        /// <summary>
        /// The HasKnownVulnerability param.
        /// </summary>
        public readonly bool HasKnownVulnerability;
        /// <summary>
        /// The Id param.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The NoAppidCaching param.
        /// </summary>
        public readonly bool NoAppidCaching;
        /// <summary>
        /// The ParentApp param. String length must not exceed 127 characters.
        /// </summary>
        public readonly string ParentApp;
        /// <summary>
        /// The PervasiveUse param.
        /// </summary>
        public readonly bool PervasiveUse;
        /// <summary>
        /// The ProneToMisuse param.
        /// </summary>
        public readonly bool ProneToMisuse;
        /// <summary>
        /// The Risk param. Value must be between 1 and 5.
        /// </summary>
        public readonly int Risk;
        /// <summary>
        /// The Signatures param.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplicationSignatureResult> Signatures;
        /// <summary>
        /// The Subcategory param. String length must not exceed 63 characters.
        /// </summary>
        public readonly string Subcategory;
        /// <summary>
        /// timeout for half-close session in seconds. Value must be between 1 and 604800.
        /// </summary>
        public readonly int TcpHalfClosedTimeout;
        /// <summary>
        /// timeout for session in time_wait state in seconds. Value must be between 1 and 600.
        /// </summary>
        public readonly int TcpTimeWaitTimeout;
        /// <summary>
        /// timeout in seconds. Value must be between 0 and 604800.
        /// </summary>
        public readonly int TcpTimeout;
        /// <summary>
        /// The Technology param. String length must not exceed 63 characters.
        /// </summary>
        public readonly string Technology;
        public readonly string Tfid;
        /// <summary>
        /// timeout in seconds. Value must be between 0 and 604800.
        /// </summary>
        public readonly int Timeout;
        /// <summary>
        /// The TunnelApplications param.
        /// </summary>
        public readonly bool TunnelApplications;
        /// <summary>
        /// The TunnelOtherApplication param.
        /// </summary>
        public readonly bool TunnelOtherApplication;
        /// <summary>
        /// timeout in seconds. Value must be between 0 and 604800.
        /// </summary>
        public readonly int UdpTimeout;
        /// <summary>
        /// The UsedByMalware param.
        /// </summary>
        public readonly bool UsedByMalware;
        /// <summary>
        /// The VirusIdent param.
        /// </summary>
        public readonly bool VirusIdent;

        [OutputConstructor]
        private GetApplicationResult(
            bool ableToTransferFile,

            string algDisableCapability,

            string category,

            bool consumeBigBandwidth,

            bool dataIdent,

            Outputs.GetApplicationDefaultResult @default,

            string description,

            bool evasiveBehavior,

            bool fileTypeIdent,

            bool hasKnownVulnerability,

            string id,

            string name,

            bool noAppidCaching,

            string parentApp,

            bool pervasiveUse,

            bool proneToMisuse,

            int risk,

            ImmutableArray<Outputs.GetApplicationSignatureResult> signatures,

            string subcategory,

            int tcpHalfClosedTimeout,

            int tcpTimeWaitTimeout,

            int tcpTimeout,

            string technology,

            string tfid,

            int timeout,

            bool tunnelApplications,

            bool tunnelOtherApplication,

            int udpTimeout,

            bool usedByMalware,

            bool virusIdent)
        {
            AbleToTransferFile = ableToTransferFile;
            AlgDisableCapability = algDisableCapability;
            Category = category;
            ConsumeBigBandwidth = consumeBigBandwidth;
            DataIdent = dataIdent;
            Default = @default;
            Description = description;
            EvasiveBehavior = evasiveBehavior;
            FileTypeIdent = fileTypeIdent;
            HasKnownVulnerability = hasKnownVulnerability;
            Id = id;
            Name = name;
            NoAppidCaching = noAppidCaching;
            ParentApp = parentApp;
            PervasiveUse = pervasiveUse;
            ProneToMisuse = proneToMisuse;
            Risk = risk;
            Signatures = signatures;
            Subcategory = subcategory;
            TcpHalfClosedTimeout = tcpHalfClosedTimeout;
            TcpTimeWaitTimeout = tcpTimeWaitTimeout;
            TcpTimeout = tcpTimeout;
            Technology = technology;
            Tfid = tfid;
            Timeout = timeout;
            TunnelApplications = tunnelApplications;
            TunnelOtherApplication = tunnelOtherApplication;
            UdpTimeout = udpTimeout;
            UsedByMalware = usedByMalware;
            VirusIdent = virusIdent;
        }
    }
}
