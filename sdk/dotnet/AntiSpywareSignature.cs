// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    /// <summary>
    /// Retrieves a config item.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scm = Pulumi.Scm;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Scm.AntiSpywareSignature("example");
    /// 
    /// });
    /// ```
    /// </summary>
    [ScmResourceType("scm:index/antiSpywareSignature:AntiSpywareSignature")]
    public partial class AntiSpywareSignature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Bugtraqs param.
        /// </summary>
        [Output("bugtraqs")]
        public Output<ImmutableArray<string>> Bugtraqs { get; private set; } = null!;

        /// <summary>
        /// The Comment param. String length must not exceed 256 characters.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The Cves param.
        /// </summary>
        [Output("cves")]
        public Output<ImmutableArray<string>> Cves { get; private set; } = null!;

        /// <summary>
        /// The DefaultAction param.
        /// </summary>
        [Output("defaultAction")]
        public Output<Outputs.AntiSpywareSignatureDefaultAction?> DefaultAction { get; private set; } = null!;

        /// <summary>
        /// The Device param.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        /// </summary>
        [Output("direction")]
        public Output<string?> Direction { get; private set; } = null!;

        /// <summary>
        /// The Folder param.
        /// </summary>
        [Output("folder")]
        public Output<string?> Folder { get; private set; } = null!;

        /// <summary>
        /// The References param.
        /// </summary>
        [Output("references")]
        public Output<ImmutableArray<string>> References { get; private set; } = null!;

        /// <summary>
        /// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        /// </summary>
        [Output("severity")]
        public Output<string?> Severity { get; private set; } = null!;

        /// <summary>
        /// The Signature param.
        /// </summary>
        [Output("signature")]
        public Output<Outputs.AntiSpywareSignatureSignature?> Signature { get; private set; } = null!;

        /// <summary>
        /// The Snippet param.
        /// </summary>
        [Output("snippet")]
        public Output<string?> Snippet { get; private set; } = null!;

        [Output("tfid")]
        public Output<string> Tfid { get; private set; } = null!;

        /// <summary>
        /// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
        /// </summary>
        [Output("threatId")]
        public Output<int> ThreatId { get; private set; } = null!;

        /// <summary>
        /// The Threatname param. String length must not exceed 1024 characters.
        /// </summary>
        [Output("threatname")]
        public Output<string> Threatname { get; private set; } = null!;

        /// <summary>
        /// The Vendors param.
        /// </summary>
        [Output("vendors")]
        public Output<ImmutableArray<string>> Vendors { get; private set; } = null!;


        /// <summary>
        /// Create a AntiSpywareSignature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AntiSpywareSignature(string name, AntiSpywareSignatureArgs args, CustomResourceOptions? options = null)
            : base("scm:index/antiSpywareSignature:AntiSpywareSignature", name, args ?? new AntiSpywareSignatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AntiSpywareSignature(string name, Input<string> id, AntiSpywareSignatureState? state = null, CustomResourceOptions? options = null)
            : base("scm:index/antiSpywareSignature:AntiSpywareSignature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AntiSpywareSignature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AntiSpywareSignature Get(string name, Input<string> id, AntiSpywareSignatureState? state = null, CustomResourceOptions? options = null)
        {
            return new AntiSpywareSignature(name, id, state, options);
        }
    }

    public sealed class AntiSpywareSignatureArgs : global::Pulumi.ResourceArgs
    {
        [Input("bugtraqs")]
        private InputList<string>? _bugtraqs;

        /// <summary>
        /// The Bugtraqs param.
        /// </summary>
        public InputList<string> Bugtraqs
        {
            get => _bugtraqs ?? (_bugtraqs = new InputList<string>());
            set => _bugtraqs = value;
        }

        /// <summary>
        /// The Comment param. String length must not exceed 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("cves")]
        private InputList<string>? _cves;

        /// <summary>
        /// The Cves param.
        /// </summary>
        public InputList<string> Cves
        {
            get => _cves ?? (_cves = new InputList<string>());
            set => _cves = value;
        }

        /// <summary>
        /// The DefaultAction param.
        /// </summary>
        [Input("defaultAction")]
        public Input<Inputs.AntiSpywareSignatureDefaultActionArgs>? DefaultAction { get; set; }

        /// <summary>
        /// The Device param.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// The Folder param.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        [Input("references")]
        private InputList<string>? _references;

        /// <summary>
        /// The References param.
        /// </summary>
        public InputList<string> References
        {
            get => _references ?? (_references = new InputList<string>());
            set => _references = value;
        }

        /// <summary>
        /// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// The Signature param.
        /// </summary>
        [Input("signature")]
        public Input<Inputs.AntiSpywareSignatureSignatureArgs>? Signature { get; set; }

        /// <summary>
        /// The Snippet param.
        /// </summary>
        [Input("snippet")]
        public Input<string>? Snippet { get; set; }

        /// <summary>
        /// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
        /// </summary>
        [Input("threatId", required: true)]
        public Input<int> ThreatId { get; set; } = null!;

        /// <summary>
        /// The Threatname param. String length must not exceed 1024 characters.
        /// </summary>
        [Input("threatname", required: true)]
        public Input<string> Threatname { get; set; } = null!;

        [Input("vendors")]
        private InputList<string>? _vendors;

        /// <summary>
        /// The Vendors param.
        /// </summary>
        public InputList<string> Vendors
        {
            get => _vendors ?? (_vendors = new InputList<string>());
            set => _vendors = value;
        }

        public AntiSpywareSignatureArgs()
        {
        }
        public static new AntiSpywareSignatureArgs Empty => new AntiSpywareSignatureArgs();
    }

    public sealed class AntiSpywareSignatureState : global::Pulumi.ResourceArgs
    {
        [Input("bugtraqs")]
        private InputList<string>? _bugtraqs;

        /// <summary>
        /// The Bugtraqs param.
        /// </summary>
        public InputList<string> Bugtraqs
        {
            get => _bugtraqs ?? (_bugtraqs = new InputList<string>());
            set => _bugtraqs = value;
        }

        /// <summary>
        /// The Comment param. String length must not exceed 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("cves")]
        private InputList<string>? _cves;

        /// <summary>
        /// The Cves param.
        /// </summary>
        public InputList<string> Cves
        {
            get => _cves ?? (_cves = new InputList<string>());
            set => _cves = value;
        }

        /// <summary>
        /// The DefaultAction param.
        /// </summary>
        [Input("defaultAction")]
        public Input<Inputs.AntiSpywareSignatureDefaultActionGetArgs>? DefaultAction { get; set; }

        /// <summary>
        /// The Device param.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// The Folder param.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        [Input("references")]
        private InputList<string>? _references;

        /// <summary>
        /// The References param.
        /// </summary>
        public InputList<string> References
        {
            get => _references ?? (_references = new InputList<string>());
            set => _references = value;
        }

        /// <summary>
        /// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// The Signature param.
        /// </summary>
        [Input("signature")]
        public Input<Inputs.AntiSpywareSignatureSignatureGetArgs>? Signature { get; set; }

        /// <summary>
        /// The Snippet param.
        /// </summary>
        [Input("snippet")]
        public Input<string>? Snippet { get; set; }

        [Input("tfid")]
        public Input<string>? Tfid { get; set; }

        /// <summary>
        /// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
        /// </summary>
        [Input("threatId")]
        public Input<int>? ThreatId { get; set; }

        /// <summary>
        /// The Threatname param. String length must not exceed 1024 characters.
        /// </summary>
        [Input("threatname")]
        public Input<string>? Threatname { get; set; }

        [Input("vendors")]
        private InputList<string>? _vendors;

        /// <summary>
        /// The Vendors param.
        /// </summary>
        public InputList<string> Vendors
        {
            get => _vendors ?? (_vendors = new InputList<string>());
            set => _vendors = value;
        }

        public AntiSpywareSignatureState()
        {
        }
        public static new AntiSpywareSignatureState Empty => new AntiSpywareSignatureState();
    }
}
