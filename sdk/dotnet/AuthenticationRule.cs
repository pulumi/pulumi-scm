// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    /// <summary>
    /// Retrieves a config item.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scm = Pulumi.Scm;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Scm.AuthenticationRule("example");
    /// 
    /// });
    /// ```
    /// </summary>
    [ScmResourceType("scm:index/authenticationRule:AuthenticationRule")]
    public partial class AuthenticationRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// the authentication profile name to apply to authentication rule.
        /// </summary>
        [Output("authenticationEnforcement")]
        public Output<string?> AuthenticationEnforcement { get; private set; } = null!;

        /// <summary>
        /// The Categories param.
        /// </summary>
        [Output("categories")]
        public Output<ImmutableArray<string>> Categories { get; private set; } = null!;

        /// <summary>
        /// The Description param.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The DestinationHips param.
        /// </summary>
        [Output("destinationHips")]
        public Output<ImmutableArray<string>> DestinationHips { get; private set; } = null!;

        /// <summary>
        /// The Destinations param.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<string>> Destinations { get; private set; } = null!;

        /// <summary>
        /// The Device param.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// The Disabled param. Default: `false`.
        /// </summary>
        [Output("disabled")]
        public Output<bool> Disabled { get; private set; } = null!;

        /// <summary>
        /// The Folder param.
        /// </summary>
        [Output("folder")]
        public Output<string?> Folder { get; private set; } = null!;

        /// <summary>
        /// The Froms param.
        /// </summary>
        [Output("froms")]
        public Output<ImmutableArray<string>> Froms { get; private set; } = null!;

        /// <summary>
        /// The GroupTag param.
        /// </summary>
        [Output("groupTag")]
        public Output<string?> GroupTag { get; private set; } = null!;

        /// <summary>
        /// The HipProfiles param.
        /// </summary>
        [Output("hipProfiles")]
        public Output<ImmutableArray<string>> HipProfiles { get; private set; } = null!;

        /// <summary>
        /// The LogAuthenticationTimeout param. Default: `false`.
        /// </summary>
        [Output("logAuthenticationTimeout")]
        public Output<bool> LogAuthenticationTimeout { get; private set; } = null!;

        /// <summary>
        /// The LogSetting param.
        /// </summary>
        [Output("logSetting")]
        public Output<string?> LogSetting { get; private set; } = null!;

        /// <summary>
        /// The Name param.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The NegateDestination param. Default: `false`.
        /// </summary>
        [Output("negateDestination")]
        public Output<bool> NegateDestination { get; private set; } = null!;

        /// <summary>
        /// The NegateSource param. Default: `false`.
        /// </summary>
        [Output("negateSource")]
        public Output<bool> NegateSource { get; private set; } = null!;

        /// <summary>
        /// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
        /// </summary>
        [Output("position")]
        public Output<string> Position { get; private set; } = null!;

        /// <summary>
        /// The Services param.
        /// </summary>
        [Output("services")]
        public Output<ImmutableArray<string>> Services { get; private set; } = null!;

        /// <summary>
        /// The Snippet param.
        /// </summary>
        [Output("snippet")]
        public Output<string?> Snippet { get; private set; } = null!;

        /// <summary>
        /// The SourceHips param.
        /// </summary>
        [Output("sourceHips")]
        public Output<ImmutableArray<string>> SourceHips { get; private set; } = null!;

        /// <summary>
        /// The SourceUsers param.
        /// </summary>
        [Output("sourceUsers")]
        public Output<ImmutableArray<string>> SourceUsers { get; private set; } = null!;

        /// <summary>
        /// The Sources param.
        /// </summary>
        [Output("sources")]
        public Output<ImmutableArray<string>> Sources { get; private set; } = null!;

        /// <summary>
        /// The Tags param.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("tfid")]
        public Output<string> Tfid { get; private set; } = null!;

        /// <summary>
        /// The Timeout param. Value must be between 1 and 1440.
        /// </summary>
        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;

        /// <summary>
        /// The Tos param.
        /// </summary>
        [Output("tos")]
        public Output<ImmutableArray<string>> Tos { get; private set; } = null!;


        /// <summary>
        /// Create a AuthenticationRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthenticationRule(string name, AuthenticationRuleArgs? args = null, CustomResourceOptions? options = null)
            : base("scm:index/authenticationRule:AuthenticationRule", name, args ?? new AuthenticationRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthenticationRule(string name, Input<string> id, AuthenticationRuleState? state = null, CustomResourceOptions? options = null)
            : base("scm:index/authenticationRule:AuthenticationRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthenticationRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthenticationRule Get(string name, Input<string> id, AuthenticationRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthenticationRule(name, id, state, options);
        }
    }

    public sealed class AuthenticationRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the authentication profile name to apply to authentication rule.
        /// </summary>
        [Input("authenticationEnforcement")]
        public Input<string>? AuthenticationEnforcement { get; set; }

        [Input("categories")]
        private InputList<string>? _categories;

        /// <summary>
        /// The Categories param.
        /// </summary>
        public InputList<string> Categories
        {
            get => _categories ?? (_categories = new InputList<string>());
            set => _categories = value;
        }

        /// <summary>
        /// The Description param.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationHips")]
        private InputList<string>? _destinationHips;

        /// <summary>
        /// The DestinationHips param.
        /// </summary>
        public InputList<string> DestinationHips
        {
            get => _destinationHips ?? (_destinationHips = new InputList<string>());
            set => _destinationHips = value;
        }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// The Destinations param.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// The Device param.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// The Disabled param. Default: `false`.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// The Folder param.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        [Input("froms")]
        private InputList<string>? _froms;

        /// <summary>
        /// The Froms param.
        /// </summary>
        public InputList<string> Froms
        {
            get => _froms ?? (_froms = new InputList<string>());
            set => _froms = value;
        }

        /// <summary>
        /// The GroupTag param.
        /// </summary>
        [Input("groupTag")]
        public Input<string>? GroupTag { get; set; }

        [Input("hipProfiles")]
        private InputList<string>? _hipProfiles;

        /// <summary>
        /// The HipProfiles param.
        /// </summary>
        public InputList<string> HipProfiles
        {
            get => _hipProfiles ?? (_hipProfiles = new InputList<string>());
            set => _hipProfiles = value;
        }

        /// <summary>
        /// The LogAuthenticationTimeout param. Default: `false`.
        /// </summary>
        [Input("logAuthenticationTimeout")]
        public Input<bool>? LogAuthenticationTimeout { get; set; }

        /// <summary>
        /// The LogSetting param.
        /// </summary>
        [Input("logSetting")]
        public Input<string>? LogSetting { get; set; }

        /// <summary>
        /// The Name param.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NegateDestination param. Default: `false`.
        /// </summary>
        [Input("negateDestination")]
        public Input<bool>? NegateDestination { get; set; }

        /// <summary>
        /// The NegateSource param. Default: `false`.
        /// </summary>
        [Input("negateSource")]
        public Input<bool>? NegateSource { get; set; }

        /// <summary>
        /// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
        /// </summary>
        [Input("position")]
        public Input<string>? Position { get; set; }

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// The Services param.
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        /// <summary>
        /// The Snippet param.
        /// </summary>
        [Input("snippet")]
        public Input<string>? Snippet { get; set; }

        [Input("sourceHips")]
        private InputList<string>? _sourceHips;

        /// <summary>
        /// The SourceHips param.
        /// </summary>
        public InputList<string> SourceHips
        {
            get => _sourceHips ?? (_sourceHips = new InputList<string>());
            set => _sourceHips = value;
        }

        [Input("sourceUsers")]
        private InputList<string>? _sourceUsers;

        /// <summary>
        /// The SourceUsers param.
        /// </summary>
        public InputList<string> SourceUsers
        {
            get => _sourceUsers ?? (_sourceUsers = new InputList<string>());
            set => _sourceUsers = value;
        }

        [Input("sources")]
        private InputList<string>? _sources;

        /// <summary>
        /// The Sources param.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The Tags param.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Timeout param. Value must be between 1 and 1440.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("tos")]
        private InputList<string>? _tos;

        /// <summary>
        /// The Tos param.
        /// </summary>
        public InputList<string> Tos
        {
            get => _tos ?? (_tos = new InputList<string>());
            set => _tos = value;
        }

        public AuthenticationRuleArgs()
        {
        }
        public static new AuthenticationRuleArgs Empty => new AuthenticationRuleArgs();
    }

    public sealed class AuthenticationRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the authentication profile name to apply to authentication rule.
        /// </summary>
        [Input("authenticationEnforcement")]
        public Input<string>? AuthenticationEnforcement { get; set; }

        [Input("categories")]
        private InputList<string>? _categories;

        /// <summary>
        /// The Categories param.
        /// </summary>
        public InputList<string> Categories
        {
            get => _categories ?? (_categories = new InputList<string>());
            set => _categories = value;
        }

        /// <summary>
        /// The Description param.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationHips")]
        private InputList<string>? _destinationHips;

        /// <summary>
        /// The DestinationHips param.
        /// </summary>
        public InputList<string> DestinationHips
        {
            get => _destinationHips ?? (_destinationHips = new InputList<string>());
            set => _destinationHips = value;
        }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// The Destinations param.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// The Device param.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// The Disabled param. Default: `false`.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// The Folder param.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        [Input("froms")]
        private InputList<string>? _froms;

        /// <summary>
        /// The Froms param.
        /// </summary>
        public InputList<string> Froms
        {
            get => _froms ?? (_froms = new InputList<string>());
            set => _froms = value;
        }

        /// <summary>
        /// The GroupTag param.
        /// </summary>
        [Input("groupTag")]
        public Input<string>? GroupTag { get; set; }

        [Input("hipProfiles")]
        private InputList<string>? _hipProfiles;

        /// <summary>
        /// The HipProfiles param.
        /// </summary>
        public InputList<string> HipProfiles
        {
            get => _hipProfiles ?? (_hipProfiles = new InputList<string>());
            set => _hipProfiles = value;
        }

        /// <summary>
        /// The LogAuthenticationTimeout param. Default: `false`.
        /// </summary>
        [Input("logAuthenticationTimeout")]
        public Input<bool>? LogAuthenticationTimeout { get; set; }

        /// <summary>
        /// The LogSetting param.
        /// </summary>
        [Input("logSetting")]
        public Input<string>? LogSetting { get; set; }

        /// <summary>
        /// The Name param.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NegateDestination param. Default: `false`.
        /// </summary>
        [Input("negateDestination")]
        public Input<bool>? NegateDestination { get; set; }

        /// <summary>
        /// The NegateSource param. Default: `false`.
        /// </summary>
        [Input("negateSource")]
        public Input<bool>? NegateSource { get; set; }

        /// <summary>
        /// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
        /// </summary>
        [Input("position")]
        public Input<string>? Position { get; set; }

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// The Services param.
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        /// <summary>
        /// The Snippet param.
        /// </summary>
        [Input("snippet")]
        public Input<string>? Snippet { get; set; }

        [Input("sourceHips")]
        private InputList<string>? _sourceHips;

        /// <summary>
        /// The SourceHips param.
        /// </summary>
        public InputList<string> SourceHips
        {
            get => _sourceHips ?? (_sourceHips = new InputList<string>());
            set => _sourceHips = value;
        }

        [Input("sourceUsers")]
        private InputList<string>? _sourceUsers;

        /// <summary>
        /// The SourceUsers param.
        /// </summary>
        public InputList<string> SourceUsers
        {
            get => _sourceUsers ?? (_sourceUsers = new InputList<string>());
            set => _sourceUsers = value;
        }

        [Input("sources")]
        private InputList<string>? _sources;

        /// <summary>
        /// The Sources param.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The Tags param.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("tfid")]
        public Input<string>? Tfid { get; set; }

        /// <summary>
        /// The Timeout param. Value must be between 1 and 1440.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("tos")]
        private InputList<string>? _tos;

        /// <summary>
        /// The Tos param.
        /// </summary>
        public InputList<string> Tos
        {
            get => _tos ?? (_tos = new InputList<string>());
            set => _tos = value;
        }

        public AuthenticationRuleState()
        {
        }
        public static new AuthenticationRuleState Empty => new AuthenticationRuleState();
    }
}
