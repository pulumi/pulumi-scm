// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    public static class GetDynamicUserGroup
    {
        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetDynamicUserGroup.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDynamicUserGroupResult> InvokeAsync(GetDynamicUserGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDynamicUserGroupResult>("scm:index/getDynamicUserGroup:getDynamicUserGroup", args ?? new GetDynamicUserGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetDynamicUserGroup.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDynamicUserGroupResult> Invoke(GetDynamicUserGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDynamicUserGroupResult>("scm:index/getDynamicUserGroup:getDynamicUserGroup", args ?? new GetDynamicUserGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDynamicUserGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDynamicUserGroupArgs()
        {
        }
        public static new GetDynamicUserGroupArgs Empty => new GetDynamicUserGroupArgs();
    }

    public sealed class GetDynamicUserGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDynamicUserGroupInvokeArgs()
        {
        }
        public static new GetDynamicUserGroupInvokeArgs Empty => new GetDynamicUserGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetDynamicUserGroupResult
    {
        /// <summary>
        /// The Description param. String length must not exceed 1023 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// tag-based filter. String length must not exceed 2047 characters.
        /// </summary>
        public readonly string Filter;
        /// <summary>
        /// The Id param.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        public readonly string Tfid;

        [OutputConstructor]
        private GetDynamicUserGroupResult(
            string description,

            string filter,

            string id,

            string name,

            ImmutableArray<string> tags,

            string tfid)
        {
            Description = description;
            Filter = filter;
            Id = id;
            Name = name;
            Tags = tags;
            Tfid = tfid;
        }
    }
}
