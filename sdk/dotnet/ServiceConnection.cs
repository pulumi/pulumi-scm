// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    /// <summary>
    /// Retrieves a config item.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scm = Pulumi.Scm;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Scm.ServiceConnection("example");
    /// 
    /// });
    /// ```
    /// </summary>
    [ScmResourceType("scm:index/serviceConnection:ServiceConnection")]
    public partial class ServiceConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The BackupSC param.
        /// </summary>
        [Output("backupSC")]
        public Output<string?> BackupSC { get; private set; } = null!;

        /// <summary>
        /// The BgpPeer param.
        /// </summary>
        [Output("bgpPeer")]
        public Output<Outputs.ServiceConnectionBgpPeer?> BgpPeer { get; private set; } = null!;

        /// <summary>
        /// (Internal use) Encrypted values returned from the API.
        /// </summary>
        [Output("encryptedValues")]
        public Output<ImmutableDictionary<string, string>> EncryptedValues { get; private set; } = null!;

        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Output("folder")]
        public Output<string> Folder { get; private set; } = null!;

        /// <summary>
        /// The IpsecTunnel param.
        /// </summary>
        [Output("ipsecTunnel")]
        public Output<string> IpsecTunnel { get; private set; } = null!;

        /// <summary>
        /// The Name param.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The NatPool param.
        /// </summary>
        [Output("natPool")]
        public Output<string?> NatPool { get; private set; } = null!;

        /// <summary>
        /// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
        /// </summary>
        [Output("noExportCommunity")]
        public Output<string?> NoExportCommunity { get; private set; } = null!;

        /// <summary>
        /// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
        /// </summary>
        [Output("onboardingType")]
        public Output<string> OnboardingType { get; private set; } = null!;

        /// <summary>
        /// The Protocol param.
        /// </summary>
        [Output("protocol")]
        public Output<Outputs.ServiceConnectionProtocol?> Protocol { get; private set; } = null!;

        /// <summary>
        /// The Qos param.
        /// </summary>
        [Output("qos")]
        public Output<Outputs.ServiceConnectionQos?> Qos { get; private set; } = null!;

        /// <summary>
        /// The Region param.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The SecondaryIpsecTunnel param.
        /// </summary>
        [Output("secondaryIpsecTunnel")]
        public Output<string?> SecondaryIpsecTunnel { get; private set; } = null!;

        /// <summary>
        /// The SourceNat param.
        /// </summary>
        [Output("sourceNat")]
        public Output<bool?> SourceNat { get; private set; } = null!;

        /// <summary>
        /// The Subnets param.
        /// </summary>
        [Output("subnets")]
        public Output<ImmutableArray<string>> Subnets { get; private set; } = null!;

        [Output("tfid")]
        public Output<string> Tfid { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceConnection(string name, ServiceConnectionArgs args, CustomResourceOptions? options = null)
            : base("scm:index/serviceConnection:ServiceConnection", name, args ?? new ServiceConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceConnection(string name, Input<string> id, ServiceConnectionState? state = null, CustomResourceOptions? options = null)
            : base("scm:index/serviceConnection:ServiceConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "encryptedValues",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceConnection Get(string name, Input<string> id, ServiceConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceConnection(name, id, state, options);
        }
    }

    public sealed class ServiceConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BackupSC param.
        /// </summary>
        [Input("backupSC")]
        public Input<string>? BackupSC { get; set; }

        /// <summary>
        /// The BgpPeer param.
        /// </summary>
        [Input("bgpPeer")]
        public Input<Inputs.ServiceConnectionBgpPeerArgs>? BgpPeer { get; set; }

        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// The IpsecTunnel param.
        /// </summary>
        [Input("ipsecTunnel", required: true)]
        public Input<string> IpsecTunnel { get; set; } = null!;

        /// <summary>
        /// The Name param.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NatPool param.
        /// </summary>
        [Input("natPool")]
        public Input<string>? NatPool { get; set; }

        /// <summary>
        /// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
        /// </summary>
        [Input("noExportCommunity")]
        public Input<string>? NoExportCommunity { get; set; }

        /// <summary>
        /// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
        /// </summary>
        [Input("onboardingType")]
        public Input<string>? OnboardingType { get; set; }

        /// <summary>
        /// The Protocol param.
        /// </summary>
        [Input("protocol")]
        public Input<Inputs.ServiceConnectionProtocolArgs>? Protocol { get; set; }

        /// <summary>
        /// The Qos param.
        /// </summary>
        [Input("qos")]
        public Input<Inputs.ServiceConnectionQosArgs>? Qos { get; set; }

        /// <summary>
        /// The Region param.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The SecondaryIpsecTunnel param.
        /// </summary>
        [Input("secondaryIpsecTunnel")]
        public Input<string>? SecondaryIpsecTunnel { get; set; }

        /// <summary>
        /// The SourceNat param.
        /// </summary>
        [Input("sourceNat")]
        public Input<bool>? SourceNat { get; set; }

        [Input("subnets")]
        private InputList<string>? _subnets;

        /// <summary>
        /// The Subnets param.
        /// </summary>
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        public ServiceConnectionArgs()
        {
        }
        public static new ServiceConnectionArgs Empty => new ServiceConnectionArgs();
    }

    public sealed class ServiceConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BackupSC param.
        /// </summary>
        [Input("backupSC")]
        public Input<string>? BackupSC { get; set; }

        /// <summary>
        /// The BgpPeer param.
        /// </summary>
        [Input("bgpPeer")]
        public Input<Inputs.ServiceConnectionBgpPeerGetArgs>? BgpPeer { get; set; }

        [Input("encryptedValues")]
        private InputMap<string>? _encryptedValues;

        /// <summary>
        /// (Internal use) Encrypted values returned from the API.
        /// </summary>
        public InputMap<string> EncryptedValues
        {
            get => _encryptedValues ?? (_encryptedValues = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _encryptedValues = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// The IpsecTunnel param.
        /// </summary>
        [Input("ipsecTunnel")]
        public Input<string>? IpsecTunnel { get; set; }

        /// <summary>
        /// The Name param.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NatPool param.
        /// </summary>
        [Input("natPool")]
        public Input<string>? NatPool { get; set; }

        /// <summary>
        /// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
        /// </summary>
        [Input("noExportCommunity")]
        public Input<string>? NoExportCommunity { get; set; }

        /// <summary>
        /// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
        /// </summary>
        [Input("onboardingType")]
        public Input<string>? OnboardingType { get; set; }

        /// <summary>
        /// The Protocol param.
        /// </summary>
        [Input("protocol")]
        public Input<Inputs.ServiceConnectionProtocolGetArgs>? Protocol { get; set; }

        /// <summary>
        /// The Qos param.
        /// </summary>
        [Input("qos")]
        public Input<Inputs.ServiceConnectionQosGetArgs>? Qos { get; set; }

        /// <summary>
        /// The Region param.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The SecondaryIpsecTunnel param.
        /// </summary>
        [Input("secondaryIpsecTunnel")]
        public Input<string>? SecondaryIpsecTunnel { get; set; }

        /// <summary>
        /// The SourceNat param.
        /// </summary>
        [Input("sourceNat")]
        public Input<bool>? SourceNat { get; set; }

        [Input("subnets")]
        private InputList<string>? _subnets;

        /// <summary>
        /// The Subnets param.
        /// </summary>
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tfid")]
        public Input<string>? Tfid { get; set; }

        public ServiceConnectionState()
        {
        }
        public static new ServiceConnectionState Empty => new ServiceConnectionState();
    }
}
