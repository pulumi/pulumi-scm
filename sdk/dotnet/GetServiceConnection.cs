// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    public static class GetServiceConnection
    {
        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetServiceConnection.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///         Folder = "Service Connections",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceConnectionResult> InvokeAsync(GetServiceConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceConnectionResult>("scm:index/getServiceConnection:getServiceConnection", args ?? new GetServiceConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetServiceConnection.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///         Folder = "Service Connections",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceConnectionResult> Invoke(GetServiceConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceConnectionResult>("scm:index/getServiceConnection:getServiceConnection", args ?? new GetServiceConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Input("folder")]
        public string? Folder { get; set; }

        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetServiceConnectionArgs()
        {
        }
        public static new GetServiceConnectionArgs Empty => new GetServiceConnectionArgs();
    }

    public sealed class GetServiceConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetServiceConnectionInvokeArgs()
        {
        }
        public static new GetServiceConnectionInvokeArgs Empty => new GetServiceConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceConnectionResult
    {
        /// <summary>
        /// The BackupSC param.
        /// </summary>
        public readonly string BackupSC;
        /// <summary>
        /// The BgpPeer param.
        /// </summary>
        public readonly Outputs.GetServiceConnectionBgpPeerResult BgpPeer;
        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        public readonly string Folder;
        /// <summary>
        /// The Id param.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IpsecTunnel param.
        /// </summary>
        public readonly string IpsecTunnel;
        /// <summary>
        /// The Name param.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The NatPool param.
        /// </summary>
        public readonly string NatPool;
        /// <summary>
        /// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
        /// </summary>
        public readonly string NoExportCommunity;
        /// <summary>
        /// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
        /// </summary>
        public readonly string OnboardingType;
        /// <summary>
        /// The Protocol param.
        /// </summary>
        public readonly Outputs.GetServiceConnectionProtocolResult Protocol;
        /// <summary>
        /// The Qos param.
        /// </summary>
        public readonly Outputs.GetServiceConnectionQosResult Qos;
        /// <summary>
        /// The Region param.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The SecondaryIpsecTunnel param.
        /// </summary>
        public readonly string SecondaryIpsecTunnel;
        /// <summary>
        /// The SourceNat param.
        /// </summary>
        public readonly bool SourceNat;
        /// <summary>
        /// The Subnets param.
        /// </summary>
        public readonly ImmutableArray<string> Subnets;
        public readonly string Tfid;

        [OutputConstructor]
        private GetServiceConnectionResult(
            string backupSC,

            Outputs.GetServiceConnectionBgpPeerResult bgpPeer,

            string folder,

            string id,

            string ipsecTunnel,

            string name,

            string natPool,

            string noExportCommunity,

            string onboardingType,

            Outputs.GetServiceConnectionProtocolResult protocol,

            Outputs.GetServiceConnectionQosResult qos,

            string region,

            string secondaryIpsecTunnel,

            bool sourceNat,

            ImmutableArray<string> subnets,

            string tfid)
        {
            BackupSC = backupSC;
            BgpPeer = bgpPeer;
            Folder = folder;
            Id = id;
            IpsecTunnel = ipsecTunnel;
            Name = name;
            NatPool = natPool;
            NoExportCommunity = noExportCommunity;
            OnboardingType = onboardingType;
            Protocol = protocol;
            Qos = qos;
            Region = region;
            SecondaryIpsecTunnel = secondaryIpsecTunnel;
            SourceNat = sourceNat;
            Subnets = subnets;
            Tfid = tfid;
        }
    }
}
