// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    /// <summary>
    /// Retrieves a config item.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scm = Pulumi.Scm;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Scm.TrafficSteeringRule("example", new()
    ///     {
    ///         Folder = "Shared",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ScmResourceType("scm:index/trafficSteeringRule:TrafficSteeringRule")]
    public partial class TrafficSteeringRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Action param.
        /// </summary>
        [Output("action")]
        public Output<Outputs.TrafficSteeringRuleAction?> Action { get; private set; } = null!;

        /// <summary>
        /// The Category param.
        /// </summary>
        [Output("categories")]
        public Output<ImmutableArray<string>> Categories { get; private set; } = null!;

        /// <summary>
        /// The Destination param.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<string>> Destinations { get; private set; } = null!;

        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Output("folder")]
        public Output<string> Folder { get; private set; } = null!;

        /// <summary>
        /// The Name param.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Service param.
        /// </summary>
        [Output("services")]
        public Output<ImmutableArray<string>> Services { get; private set; } = null!;

        /// <summary>
        /// The SourceUser param.
        /// </summary>
        [Output("sourceUsers")]
        public Output<ImmutableArray<string>> SourceUsers { get; private set; } = null!;

        /// <summary>
        /// The Source param.
        /// </summary>
        [Output("sources")]
        public Output<ImmutableArray<string>> Sources { get; private set; } = null!;

        [Output("tfid")]
        public Output<string> Tfid { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficSteeringRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficSteeringRule(string name, TrafficSteeringRuleArgs args, CustomResourceOptions? options = null)
            : base("scm:index/trafficSteeringRule:TrafficSteeringRule", name, args ?? new TrafficSteeringRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficSteeringRule(string name, Input<string> id, TrafficSteeringRuleState? state = null, CustomResourceOptions? options = null)
            : base("scm:index/trafficSteeringRule:TrafficSteeringRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficSteeringRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficSteeringRule Get(string name, Input<string> id, TrafficSteeringRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficSteeringRule(name, id, state, options);
        }
    }

    public sealed class TrafficSteeringRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Action param.
        /// </summary>
        [Input("action")]
        public Input<Inputs.TrafficSteeringRuleActionArgs>? Action { get; set; }

        [Input("categories")]
        private InputList<string>? _categories;

        /// <summary>
        /// The Category param.
        /// </summary>
        public InputList<string> Categories
        {
            get => _categories ?? (_categories = new InputList<string>());
            set => _categories = value;
        }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// The Destination param.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// The Name param.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("services", required: true)]
        private InputList<string>? _services;

        /// <summary>
        /// The Service param.
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        [Input("sourceUsers")]
        private InputList<string>? _sourceUsers;

        /// <summary>
        /// The SourceUser param.
        /// </summary>
        public InputList<string> SourceUsers
        {
            get => _sourceUsers ?? (_sourceUsers = new InputList<string>());
            set => _sourceUsers = value;
        }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// The Source param.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public TrafficSteeringRuleArgs()
        {
        }
        public static new TrafficSteeringRuleArgs Empty => new TrafficSteeringRuleArgs();
    }

    public sealed class TrafficSteeringRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Action param.
        /// </summary>
        [Input("action")]
        public Input<Inputs.TrafficSteeringRuleActionGetArgs>? Action { get; set; }

        [Input("categories")]
        private InputList<string>? _categories;

        /// <summary>
        /// The Category param.
        /// </summary>
        public InputList<string> Categories
        {
            get => _categories ?? (_categories = new InputList<string>());
            set => _categories = value;
        }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// The Destination param.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// The Name param.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// The Service param.
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        [Input("sourceUsers")]
        private InputList<string>? _sourceUsers;

        /// <summary>
        /// The SourceUser param.
        /// </summary>
        public InputList<string> SourceUsers
        {
            get => _sourceUsers ?? (_sourceUsers = new InputList<string>());
            set => _sourceUsers = value;
        }

        [Input("sources")]
        private InputList<string>? _sources;

        /// <summary>
        /// The Source param.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        [Input("tfid")]
        public Input<string>? Tfid { get; set; }

        public TrafficSteeringRuleState()
        {
        }
        public static new TrafficSteeringRuleState Empty => new TrafficSteeringRuleState();
    }
}
