// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scm
{
    public static class GetAuthenticationProfile
    {
        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetAuthenticationProfile.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAuthenticationProfileResult> InvokeAsync(GetAuthenticationProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthenticationProfileResult>("scm:index/getAuthenticationProfile:getAuthenticationProfile", args ?? new GetAuthenticationProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a config item.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scm = Pulumi.Scm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Scm.GetAuthenticationProfile.Invoke(new()
        ///     {
        ///         Id = "1234-56-789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAuthenticationProfileResult> Invoke(GetAuthenticationProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthenticationProfileResult>("scm:index/getAuthenticationProfile:getAuthenticationProfile", args ?? new GetAuthenticationProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthenticationProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAuthenticationProfileArgs()
        {
        }
        public static new GetAuthenticationProfileArgs Empty => new GetAuthenticationProfileArgs();
    }

    public sealed class GetAuthenticationProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id param.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAuthenticationProfileInvokeArgs()
        {
        }
        public static new GetAuthenticationProfileInvokeArgs Empty => new GetAuthenticationProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthenticationProfileResult
    {
        /// <summary>
        /// The AllowList param.
        /// </summary>
        public readonly ImmutableArray<string> AllowLists;
        /// <summary>
        /// The Id param.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Lockout param.
        /// </summary>
        public readonly Outputs.GetAuthenticationProfileLockoutResult Lockout;
        /// <summary>
        /// The Method param.
        /// </summary>
        public readonly Outputs.GetAuthenticationProfileMethodResult Method;
        /// <summary>
        /// The MultiFactorAuth param.
        /// </summary>
        public readonly Outputs.GetAuthenticationProfileMultiFactorAuthResult MultiFactorAuth;
        /// <summary>
        /// The Name param.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The SingleSignOn param.
        /// </summary>
        public readonly Outputs.GetAuthenticationProfileSingleSignOnResult SingleSignOn;
        public readonly string Tfid;
        /// <summary>
        /// The UserDomain param. String length must not exceed 63 characters.
        /// </summary>
        public readonly string UserDomain;
        /// <summary>
        /// The UsernameModifier param. String must be one of these: `"%USERINPUT%"`, `"%USERINPUT%@%USERDOMAIN%"`, `"%USERDOMAIN%\\%USERINPUT%"`.
        /// </summary>
        public readonly string UsernameModifier;

        [OutputConstructor]
        private GetAuthenticationProfileResult(
            ImmutableArray<string> allowLists,

            string id,

            Outputs.GetAuthenticationProfileLockoutResult lockout,

            Outputs.GetAuthenticationProfileMethodResult method,

            Outputs.GetAuthenticationProfileMultiFactorAuthResult multiFactorAuth,

            string name,

            Outputs.GetAuthenticationProfileSingleSignOnResult singleSignOn,

            string tfid,

            string userDomain,

            string usernameModifier)
        {
            AllowLists = allowLists;
            Id = id;
            Lockout = lockout;
            Method = method;
            MultiFactorAuth = multiFactorAuth;
            Name = name;
            SingleSignOn = singleSignOn;
            Tfid = tfid;
            UserDomain = userDomain;
            UsernameModifier = usernameModifier;
        }
    }
}
