// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupCertificateProfile(ctx, &scm.LookupCertificateProfileArgs{
//				Id: "1234-56-789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCertificateProfile(ctx *pulumi.Context, args *LookupCertificateProfileArgs, opts ...pulumi.InvokeOption) (*LookupCertificateProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCertificateProfileResult
	err := ctx.Invoke("scm:index/getCertificateProfile:getCertificateProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificateProfile.
type LookupCertificateProfileArgs struct {
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getCertificateProfile.
type LookupCertificateProfileResult struct {
	// The BlockExpiredCert param.
	BlockExpiredCert bool `pulumi:"blockExpiredCert"`
	// The BlockTimeoutCert param.
	BlockTimeoutCert bool `pulumi:"blockTimeoutCert"`
	// The BlockUnauthenticatedCert param.
	BlockUnauthenticatedCert bool `pulumi:"blockUnauthenticatedCert"`
	// The BlockUnknownCert param.
	BlockUnknownCert bool `pulumi:"blockUnknownCert"`
	// The CaCertificates param.
	CaCertificates []GetCertificateProfileCaCertificate `pulumi:"caCertificates"`
	// The CertStatusTimeout param.
	CertStatusTimeout string `pulumi:"certStatusTimeout"`
	// The CrlReceiveTimeout param.
	CrlReceiveTimeout string `pulumi:"crlReceiveTimeout"`
	// The Domain param.
	Domain string `pulumi:"domain"`
	// The Id param.
	Id string `pulumi:"id"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name string `pulumi:"name"`
	// The OcspReceiveTimeout param.
	OcspReceiveTimeout string `pulumi:"ocspReceiveTimeout"`
	Tfid               string `pulumi:"tfid"`
	// The UseCrl param.
	UseCrl bool `pulumi:"useCrl"`
	// The UseOcsp param.
	UseOcsp bool `pulumi:"useOcsp"`
	// The UsernameField param.
	UsernameField GetCertificateProfileUsernameField `pulumi:"usernameField"`
}

func LookupCertificateProfileOutput(ctx *pulumi.Context, args LookupCertificateProfileOutputArgs, opts ...pulumi.InvokeOption) LookupCertificateProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCertificateProfileResultOutput, error) {
			args := v.(LookupCertificateProfileArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCertificateProfileResult
			secret, err := ctx.InvokePackageRaw("scm:index/getCertificateProfile:getCertificateProfile", args, &rv, "", opts...)
			if err != nil {
				return LookupCertificateProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCertificateProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCertificateProfileResultOutput), nil
			}
			return output, nil
		}).(LookupCertificateProfileResultOutput)
}

// A collection of arguments for invoking getCertificateProfile.
type LookupCertificateProfileOutputArgs struct {
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupCertificateProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateProfileArgs)(nil)).Elem()
}

// A collection of values returned by getCertificateProfile.
type LookupCertificateProfileResultOutput struct{ *pulumi.OutputState }

func (LookupCertificateProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateProfileResult)(nil)).Elem()
}

func (o LookupCertificateProfileResultOutput) ToLookupCertificateProfileResultOutput() LookupCertificateProfileResultOutput {
	return o
}

func (o LookupCertificateProfileResultOutput) ToLookupCertificateProfileResultOutputWithContext(ctx context.Context) LookupCertificateProfileResultOutput {
	return o
}

// The BlockExpiredCert param.
func (o LookupCertificateProfileResultOutput) BlockExpiredCert() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) bool { return v.BlockExpiredCert }).(pulumi.BoolOutput)
}

// The BlockTimeoutCert param.
func (o LookupCertificateProfileResultOutput) BlockTimeoutCert() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) bool { return v.BlockTimeoutCert }).(pulumi.BoolOutput)
}

// The BlockUnauthenticatedCert param.
func (o LookupCertificateProfileResultOutput) BlockUnauthenticatedCert() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) bool { return v.BlockUnauthenticatedCert }).(pulumi.BoolOutput)
}

// The BlockUnknownCert param.
func (o LookupCertificateProfileResultOutput) BlockUnknownCert() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) bool { return v.BlockUnknownCert }).(pulumi.BoolOutput)
}

// The CaCertificates param.
func (o LookupCertificateProfileResultOutput) CaCertificates() GetCertificateProfileCaCertificateArrayOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) []GetCertificateProfileCaCertificate { return v.CaCertificates }).(GetCertificateProfileCaCertificateArrayOutput)
}

// The CertStatusTimeout param.
func (o LookupCertificateProfileResultOutput) CertStatusTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.CertStatusTimeout }).(pulumi.StringOutput)
}

// The CrlReceiveTimeout param.
func (o LookupCertificateProfileResultOutput) CrlReceiveTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.CrlReceiveTimeout }).(pulumi.StringOutput)
}

// The Domain param.
func (o LookupCertificateProfileResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The Id param.
func (o LookupCertificateProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o LookupCertificateProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// The OcspReceiveTimeout param.
func (o LookupCertificateProfileResultOutput) OcspReceiveTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.OcspReceiveTimeout }).(pulumi.StringOutput)
}

func (o LookupCertificateProfileResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) string { return v.Tfid }).(pulumi.StringOutput)
}

// The UseCrl param.
func (o LookupCertificateProfileResultOutput) UseCrl() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) bool { return v.UseCrl }).(pulumi.BoolOutput)
}

// The UseOcsp param.
func (o LookupCertificateProfileResultOutput) UseOcsp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) bool { return v.UseOcsp }).(pulumi.BoolOutput)
}

// The UsernameField param.
func (o LookupCertificateProfileResultOutput) UsernameField() GetCertificateProfileUsernameFieldOutput {
	return o.ApplyT(func(v LookupCertificateProfileResult) GetCertificateProfileUsernameField { return v.UsernameField }).(GetCertificateProfileUsernameFieldOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCertificateProfileResultOutput{})
}
