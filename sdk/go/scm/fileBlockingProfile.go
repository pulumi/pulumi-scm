// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewFileBlockingProfile(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FileBlockingProfile struct {
	pulumi.CustomResourceState

	// The Description param.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Rules param.
	Rules FileBlockingProfileRuleArrayOutput `pulumi:"rules"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewFileBlockingProfile registers a new resource with the given unique name, arguments, and options.
func NewFileBlockingProfile(ctx *pulumi.Context,
	name string, args *FileBlockingProfileArgs, opts ...pulumi.ResourceOption) (*FileBlockingProfile, error) {
	if args == nil {
		args = &FileBlockingProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FileBlockingProfile
	err := ctx.RegisterResource("scm:index/fileBlockingProfile:FileBlockingProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileBlockingProfile gets an existing FileBlockingProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileBlockingProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileBlockingProfileState, opts ...pulumi.ResourceOption) (*FileBlockingProfile, error) {
	var resource FileBlockingProfile
	err := ctx.ReadResource("scm:index/fileBlockingProfile:FileBlockingProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileBlockingProfile resources.
type fileBlockingProfileState struct {
	// The Description param.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Rules param.
	Rules []FileBlockingProfileRule `pulumi:"rules"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type FileBlockingProfileState struct {
	// The Description param.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Rules param.
	Rules FileBlockingProfileRuleArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (FileBlockingProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileBlockingProfileState)(nil)).Elem()
}

type fileBlockingProfileArgs struct {
	// The Description param.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Rules param.
	Rules []FileBlockingProfileRule `pulumi:"rules"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a FileBlockingProfile resource.
type FileBlockingProfileArgs struct {
	// The Description param.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Rules param.
	Rules FileBlockingProfileRuleArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (FileBlockingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileBlockingProfileArgs)(nil)).Elem()
}

type FileBlockingProfileInput interface {
	pulumi.Input

	ToFileBlockingProfileOutput() FileBlockingProfileOutput
	ToFileBlockingProfileOutputWithContext(ctx context.Context) FileBlockingProfileOutput
}

func (*FileBlockingProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**FileBlockingProfile)(nil)).Elem()
}

func (i *FileBlockingProfile) ToFileBlockingProfileOutput() FileBlockingProfileOutput {
	return i.ToFileBlockingProfileOutputWithContext(context.Background())
}

func (i *FileBlockingProfile) ToFileBlockingProfileOutputWithContext(ctx context.Context) FileBlockingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileBlockingProfileOutput)
}

// FileBlockingProfileArrayInput is an input type that accepts FileBlockingProfileArray and FileBlockingProfileArrayOutput values.
// You can construct a concrete instance of `FileBlockingProfileArrayInput` via:
//
//	FileBlockingProfileArray{ FileBlockingProfileArgs{...} }
type FileBlockingProfileArrayInput interface {
	pulumi.Input

	ToFileBlockingProfileArrayOutput() FileBlockingProfileArrayOutput
	ToFileBlockingProfileArrayOutputWithContext(context.Context) FileBlockingProfileArrayOutput
}

type FileBlockingProfileArray []FileBlockingProfileInput

func (FileBlockingProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileBlockingProfile)(nil)).Elem()
}

func (i FileBlockingProfileArray) ToFileBlockingProfileArrayOutput() FileBlockingProfileArrayOutput {
	return i.ToFileBlockingProfileArrayOutputWithContext(context.Background())
}

func (i FileBlockingProfileArray) ToFileBlockingProfileArrayOutputWithContext(ctx context.Context) FileBlockingProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileBlockingProfileArrayOutput)
}

// FileBlockingProfileMapInput is an input type that accepts FileBlockingProfileMap and FileBlockingProfileMapOutput values.
// You can construct a concrete instance of `FileBlockingProfileMapInput` via:
//
//	FileBlockingProfileMap{ "key": FileBlockingProfileArgs{...} }
type FileBlockingProfileMapInput interface {
	pulumi.Input

	ToFileBlockingProfileMapOutput() FileBlockingProfileMapOutput
	ToFileBlockingProfileMapOutputWithContext(context.Context) FileBlockingProfileMapOutput
}

type FileBlockingProfileMap map[string]FileBlockingProfileInput

func (FileBlockingProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileBlockingProfile)(nil)).Elem()
}

func (i FileBlockingProfileMap) ToFileBlockingProfileMapOutput() FileBlockingProfileMapOutput {
	return i.ToFileBlockingProfileMapOutputWithContext(context.Background())
}

func (i FileBlockingProfileMap) ToFileBlockingProfileMapOutputWithContext(ctx context.Context) FileBlockingProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileBlockingProfileMapOutput)
}

type FileBlockingProfileOutput struct{ *pulumi.OutputState }

func (FileBlockingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileBlockingProfile)(nil)).Elem()
}

func (o FileBlockingProfileOutput) ToFileBlockingProfileOutput() FileBlockingProfileOutput {
	return o
}

func (o FileBlockingProfileOutput) ToFileBlockingProfileOutputWithContext(ctx context.Context) FileBlockingProfileOutput {
	return o
}

// The Description param.
func (o FileBlockingProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileBlockingProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Device param.
func (o FileBlockingProfileOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileBlockingProfile) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o FileBlockingProfileOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileBlockingProfile) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Name param.
func (o FileBlockingProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FileBlockingProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Rules param.
func (o FileBlockingProfileOutput) Rules() FileBlockingProfileRuleArrayOutput {
	return o.ApplyT(func(v *FileBlockingProfile) FileBlockingProfileRuleArrayOutput { return v.Rules }).(FileBlockingProfileRuleArrayOutput)
}

// The Snippet param.
func (o FileBlockingProfileOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileBlockingProfile) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o FileBlockingProfileOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *FileBlockingProfile) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type FileBlockingProfileArrayOutput struct{ *pulumi.OutputState }

func (FileBlockingProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileBlockingProfile)(nil)).Elem()
}

func (o FileBlockingProfileArrayOutput) ToFileBlockingProfileArrayOutput() FileBlockingProfileArrayOutput {
	return o
}

func (o FileBlockingProfileArrayOutput) ToFileBlockingProfileArrayOutputWithContext(ctx context.Context) FileBlockingProfileArrayOutput {
	return o
}

func (o FileBlockingProfileArrayOutput) Index(i pulumi.IntInput) FileBlockingProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FileBlockingProfile {
		return vs[0].([]*FileBlockingProfile)[vs[1].(int)]
	}).(FileBlockingProfileOutput)
}

type FileBlockingProfileMapOutput struct{ *pulumi.OutputState }

func (FileBlockingProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileBlockingProfile)(nil)).Elem()
}

func (o FileBlockingProfileMapOutput) ToFileBlockingProfileMapOutput() FileBlockingProfileMapOutput {
	return o
}

func (o FileBlockingProfileMapOutput) ToFileBlockingProfileMapOutputWithContext(ctx context.Context) FileBlockingProfileMapOutput {
	return o
}

func (o FileBlockingProfileMapOutput) MapIndex(k pulumi.StringInput) FileBlockingProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FileBlockingProfile {
		return vs[0].(map[string]*FileBlockingProfile)[vs[1].(string)]
	}).(FileBlockingProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileBlockingProfileInput)(nil)).Elem(), &FileBlockingProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileBlockingProfileArrayInput)(nil)).Elem(), FileBlockingProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileBlockingProfileMapInput)(nil)).Elem(), FileBlockingProfileMap{})
	pulumi.RegisterOutputType(FileBlockingProfileOutput{})
	pulumi.RegisterOutputType(FileBlockingProfileArrayOutput{})
	pulumi.RegisterOutputType(FileBlockingProfileMapOutput{})
}
