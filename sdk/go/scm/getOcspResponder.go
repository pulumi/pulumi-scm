// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupOcspResponder(ctx, &scm.LookupOcspResponderArgs{
//				Id: "1234-56-789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOcspResponder(ctx *pulumi.Context, args *LookupOcspResponderArgs, opts ...pulumi.InvokeOption) (*LookupOcspResponderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOcspResponderResult
	err := ctx.Invoke("scm:index/getOcspResponder:getOcspResponder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOcspResponder.
type LookupOcspResponderArgs struct {
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getOcspResponder.
type LookupOcspResponderResult struct {
	// The HostName param. String length must be between 1 and 255 characters.
	HostName string `pulumi:"hostName"`
	// The Id param.
	Id string `pulumi:"id"`
	// alphanumeric string [:0-9a-zA-Z._-]. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
	Name string `pulumi:"name"`
	Tfid string `pulumi:"tfid"`
}

func LookupOcspResponderOutput(ctx *pulumi.Context, args LookupOcspResponderOutputArgs, opts ...pulumi.InvokeOption) LookupOcspResponderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOcspResponderResultOutput, error) {
			args := v.(LookupOcspResponderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scm:index/getOcspResponder:getOcspResponder", args, LookupOcspResponderResultOutput{}, options).(LookupOcspResponderResultOutput), nil
		}).(LookupOcspResponderResultOutput)
}

// A collection of arguments for invoking getOcspResponder.
type LookupOcspResponderOutputArgs struct {
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupOcspResponderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOcspResponderArgs)(nil)).Elem()
}

// A collection of values returned by getOcspResponder.
type LookupOcspResponderResultOutput struct{ *pulumi.OutputState }

func (LookupOcspResponderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOcspResponderResult)(nil)).Elem()
}

func (o LookupOcspResponderResultOutput) ToLookupOcspResponderResultOutput() LookupOcspResponderResultOutput {
	return o
}

func (o LookupOcspResponderResultOutput) ToLookupOcspResponderResultOutputWithContext(ctx context.Context) LookupOcspResponderResultOutput {
	return o
}

// The HostName param. String length must be between 1 and 255 characters.
func (o LookupOcspResponderResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOcspResponderResult) string { return v.HostName }).(pulumi.StringOutput)
}

// The Id param.
func (o LookupOcspResponderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOcspResponderResult) string { return v.Id }).(pulumi.StringOutput)
}

// alphanumeric string [:0-9a-zA-Z._-]. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
func (o LookupOcspResponderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOcspResponderResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOcspResponderResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOcspResponderResult) string { return v.Tfid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOcspResponderResultOutput{})
}
