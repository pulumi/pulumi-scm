// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewAntiSpywareSignature(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AntiSpywareSignature struct {
	pulumi.CustomResourceState

	// The Bugtraqs param.
	Bugtraqs pulumi.StringArrayOutput `pulumi:"bugtraqs"`
	// The Comment param. String length must not exceed 256 characters.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// The Cves param.
	Cves pulumi.StringArrayOutput `pulumi:"cves"`
	// The DefaultAction param.
	DefaultAction AntiSpywareSignatureDefaultActionPtrOutput `pulumi:"defaultAction"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
	Direction pulumi.StringPtrOutput `pulumi:"direction"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The References param.
	References pulumi.StringArrayOutput `pulumi:"references"`
	// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
	// The Signature param.
	Signature AntiSpywareSignatureSignaturePtrOutput `pulumi:"signature"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
	// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
	ThreatId pulumi.IntOutput `pulumi:"threatId"`
	// The Threatname param. String length must not exceed 1024 characters.
	Threatname pulumi.StringOutput `pulumi:"threatname"`
	// The Vendors param.
	Vendors pulumi.StringArrayOutput `pulumi:"vendors"`
}

// NewAntiSpywareSignature registers a new resource with the given unique name, arguments, and options.
func NewAntiSpywareSignature(ctx *pulumi.Context,
	name string, args *AntiSpywareSignatureArgs, opts ...pulumi.ResourceOption) (*AntiSpywareSignature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ThreatId == nil {
		return nil, errors.New("invalid value for required argument 'ThreatId'")
	}
	if args.Threatname == nil {
		return nil, errors.New("invalid value for required argument 'Threatname'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AntiSpywareSignature
	err := ctx.RegisterResource("scm:index/antiSpywareSignature:AntiSpywareSignature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntiSpywareSignature gets an existing AntiSpywareSignature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntiSpywareSignature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntiSpywareSignatureState, opts ...pulumi.ResourceOption) (*AntiSpywareSignature, error) {
	var resource AntiSpywareSignature
	err := ctx.ReadResource("scm:index/antiSpywareSignature:AntiSpywareSignature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntiSpywareSignature resources.
type antiSpywareSignatureState struct {
	// The Bugtraqs param.
	Bugtraqs []string `pulumi:"bugtraqs"`
	// The Comment param. String length must not exceed 256 characters.
	Comment *string `pulumi:"comment"`
	// The Cves param.
	Cves []string `pulumi:"cves"`
	// The DefaultAction param.
	DefaultAction *AntiSpywareSignatureDefaultAction `pulumi:"defaultAction"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
	Direction *string `pulumi:"direction"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The References param.
	References []string `pulumi:"references"`
	// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
	Severity *string `pulumi:"severity"`
	// The Signature param.
	Signature *AntiSpywareSignatureSignature `pulumi:"signature"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
	// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
	ThreatId *int `pulumi:"threatId"`
	// The Threatname param. String length must not exceed 1024 characters.
	Threatname *string `pulumi:"threatname"`
	// The Vendors param.
	Vendors []string `pulumi:"vendors"`
}

type AntiSpywareSignatureState struct {
	// The Bugtraqs param.
	Bugtraqs pulumi.StringArrayInput
	// The Comment param. String length must not exceed 256 characters.
	Comment pulumi.StringPtrInput
	// The Cves param.
	Cves pulumi.StringArrayInput
	// The DefaultAction param.
	DefaultAction AntiSpywareSignatureDefaultActionPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
	Direction pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The References param.
	References pulumi.StringArrayInput
	// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
	Severity pulumi.StringPtrInput
	// The Signature param.
	Signature AntiSpywareSignatureSignaturePtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
	// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
	ThreatId pulumi.IntPtrInput
	// The Threatname param. String length must not exceed 1024 characters.
	Threatname pulumi.StringPtrInput
	// The Vendors param.
	Vendors pulumi.StringArrayInput
}

func (AntiSpywareSignatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*antiSpywareSignatureState)(nil)).Elem()
}

type antiSpywareSignatureArgs struct {
	// The Bugtraqs param.
	Bugtraqs []string `pulumi:"bugtraqs"`
	// The Comment param. String length must not exceed 256 characters.
	Comment *string `pulumi:"comment"`
	// The Cves param.
	Cves []string `pulumi:"cves"`
	// The DefaultAction param.
	DefaultAction *AntiSpywareSignatureDefaultAction `pulumi:"defaultAction"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
	Direction *string `pulumi:"direction"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The References param.
	References []string `pulumi:"references"`
	// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
	Severity *string `pulumi:"severity"`
	// The Signature param.
	Signature *AntiSpywareSignatureSignature `pulumi:"signature"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
	ThreatId int `pulumi:"threatId"`
	// The Threatname param. String length must not exceed 1024 characters.
	Threatname string `pulumi:"threatname"`
	// The Vendors param.
	Vendors []string `pulumi:"vendors"`
}

// The set of arguments for constructing a AntiSpywareSignature resource.
type AntiSpywareSignatureArgs struct {
	// The Bugtraqs param.
	Bugtraqs pulumi.StringArrayInput
	// The Comment param. String length must not exceed 256 characters.
	Comment pulumi.StringPtrInput
	// The Cves param.
	Cves pulumi.StringArrayInput
	// The DefaultAction param.
	DefaultAction AntiSpywareSignatureDefaultActionPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
	Direction pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The References param.
	References pulumi.StringArrayInput
	// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
	Severity pulumi.StringPtrInput
	// The Signature param.
	Signature AntiSpywareSignatureSignaturePtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
	ThreatId pulumi.IntInput
	// The Threatname param. String length must not exceed 1024 characters.
	Threatname pulumi.StringInput
	// The Vendors param.
	Vendors pulumi.StringArrayInput
}

func (AntiSpywareSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antiSpywareSignatureArgs)(nil)).Elem()
}

type AntiSpywareSignatureInput interface {
	pulumi.Input

	ToAntiSpywareSignatureOutput() AntiSpywareSignatureOutput
	ToAntiSpywareSignatureOutputWithContext(ctx context.Context) AntiSpywareSignatureOutput
}

func (*AntiSpywareSignature) ElementType() reflect.Type {
	return reflect.TypeOf((**AntiSpywareSignature)(nil)).Elem()
}

func (i *AntiSpywareSignature) ToAntiSpywareSignatureOutput() AntiSpywareSignatureOutput {
	return i.ToAntiSpywareSignatureOutputWithContext(context.Background())
}

func (i *AntiSpywareSignature) ToAntiSpywareSignatureOutputWithContext(ctx context.Context) AntiSpywareSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiSpywareSignatureOutput)
}

// AntiSpywareSignatureArrayInput is an input type that accepts AntiSpywareSignatureArray and AntiSpywareSignatureArrayOutput values.
// You can construct a concrete instance of `AntiSpywareSignatureArrayInput` via:
//
//	AntiSpywareSignatureArray{ AntiSpywareSignatureArgs{...} }
type AntiSpywareSignatureArrayInput interface {
	pulumi.Input

	ToAntiSpywareSignatureArrayOutput() AntiSpywareSignatureArrayOutput
	ToAntiSpywareSignatureArrayOutputWithContext(context.Context) AntiSpywareSignatureArrayOutput
}

type AntiSpywareSignatureArray []AntiSpywareSignatureInput

func (AntiSpywareSignatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntiSpywareSignature)(nil)).Elem()
}

func (i AntiSpywareSignatureArray) ToAntiSpywareSignatureArrayOutput() AntiSpywareSignatureArrayOutput {
	return i.ToAntiSpywareSignatureArrayOutputWithContext(context.Background())
}

func (i AntiSpywareSignatureArray) ToAntiSpywareSignatureArrayOutputWithContext(ctx context.Context) AntiSpywareSignatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiSpywareSignatureArrayOutput)
}

// AntiSpywareSignatureMapInput is an input type that accepts AntiSpywareSignatureMap and AntiSpywareSignatureMapOutput values.
// You can construct a concrete instance of `AntiSpywareSignatureMapInput` via:
//
//	AntiSpywareSignatureMap{ "key": AntiSpywareSignatureArgs{...} }
type AntiSpywareSignatureMapInput interface {
	pulumi.Input

	ToAntiSpywareSignatureMapOutput() AntiSpywareSignatureMapOutput
	ToAntiSpywareSignatureMapOutputWithContext(context.Context) AntiSpywareSignatureMapOutput
}

type AntiSpywareSignatureMap map[string]AntiSpywareSignatureInput

func (AntiSpywareSignatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntiSpywareSignature)(nil)).Elem()
}

func (i AntiSpywareSignatureMap) ToAntiSpywareSignatureMapOutput() AntiSpywareSignatureMapOutput {
	return i.ToAntiSpywareSignatureMapOutputWithContext(context.Background())
}

func (i AntiSpywareSignatureMap) ToAntiSpywareSignatureMapOutputWithContext(ctx context.Context) AntiSpywareSignatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiSpywareSignatureMapOutput)
}

type AntiSpywareSignatureOutput struct{ *pulumi.OutputState }

func (AntiSpywareSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntiSpywareSignature)(nil)).Elem()
}

func (o AntiSpywareSignatureOutput) ToAntiSpywareSignatureOutput() AntiSpywareSignatureOutput {
	return o
}

func (o AntiSpywareSignatureOutput) ToAntiSpywareSignatureOutputWithContext(ctx context.Context) AntiSpywareSignatureOutput {
	return o
}

// The Bugtraqs param.
func (o AntiSpywareSignatureOutput) Bugtraqs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringArrayOutput { return v.Bugtraqs }).(pulumi.StringArrayOutput)
}

// The Comment param. String length must not exceed 256 characters.
func (o AntiSpywareSignatureOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// The Cves param.
func (o AntiSpywareSignatureOutput) Cves() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringArrayOutput { return v.Cves }).(pulumi.StringArrayOutput)
}

// The DefaultAction param.
func (o AntiSpywareSignatureOutput) DefaultAction() AntiSpywareSignatureDefaultActionPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) AntiSpywareSignatureDefaultActionPtrOutput { return v.DefaultAction }).(AntiSpywareSignatureDefaultActionPtrOutput)
}

// The Device param.
func (o AntiSpywareSignatureOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
func (o AntiSpywareSignatureOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringPtrOutput { return v.Direction }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o AntiSpywareSignatureOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The References param.
func (o AntiSpywareSignatureOutput) References() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringArrayOutput { return v.References }).(pulumi.StringArrayOutput)
}

// The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
func (o AntiSpywareSignatureOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringPtrOutput { return v.Severity }).(pulumi.StringPtrOutput)
}

// The Signature param.
func (o AntiSpywareSignatureOutput) Signature() AntiSpywareSignatureSignaturePtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) AntiSpywareSignatureSignaturePtrOutput { return v.Signature }).(AntiSpywareSignatureSignaturePtrOutput)
}

// The Snippet param.
func (o AntiSpywareSignatureOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o AntiSpywareSignatureOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
func (o AntiSpywareSignatureOutput) ThreatId() pulumi.IntOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.IntOutput { return v.ThreatId }).(pulumi.IntOutput)
}

// The Threatname param. String length must not exceed 1024 characters.
func (o AntiSpywareSignatureOutput) Threatname() pulumi.StringOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringOutput { return v.Threatname }).(pulumi.StringOutput)
}

// The Vendors param.
func (o AntiSpywareSignatureOutput) Vendors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AntiSpywareSignature) pulumi.StringArrayOutput { return v.Vendors }).(pulumi.StringArrayOutput)
}

type AntiSpywareSignatureArrayOutput struct{ *pulumi.OutputState }

func (AntiSpywareSignatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntiSpywareSignature)(nil)).Elem()
}

func (o AntiSpywareSignatureArrayOutput) ToAntiSpywareSignatureArrayOutput() AntiSpywareSignatureArrayOutput {
	return o
}

func (o AntiSpywareSignatureArrayOutput) ToAntiSpywareSignatureArrayOutputWithContext(ctx context.Context) AntiSpywareSignatureArrayOutput {
	return o
}

func (o AntiSpywareSignatureArrayOutput) Index(i pulumi.IntInput) AntiSpywareSignatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AntiSpywareSignature {
		return vs[0].([]*AntiSpywareSignature)[vs[1].(int)]
	}).(AntiSpywareSignatureOutput)
}

type AntiSpywareSignatureMapOutput struct{ *pulumi.OutputState }

func (AntiSpywareSignatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntiSpywareSignature)(nil)).Elem()
}

func (o AntiSpywareSignatureMapOutput) ToAntiSpywareSignatureMapOutput() AntiSpywareSignatureMapOutput {
	return o
}

func (o AntiSpywareSignatureMapOutput) ToAntiSpywareSignatureMapOutputWithContext(ctx context.Context) AntiSpywareSignatureMapOutput {
	return o
}

func (o AntiSpywareSignatureMapOutput) MapIndex(k pulumi.StringInput) AntiSpywareSignatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AntiSpywareSignature {
		return vs[0].(map[string]*AntiSpywareSignature)[vs[1].(string)]
	}).(AntiSpywareSignatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntiSpywareSignatureInput)(nil)).Elem(), &AntiSpywareSignature{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiSpywareSignatureArrayInput)(nil)).Elem(), AntiSpywareSignatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiSpywareSignatureMapInput)(nil)).Elem(), AntiSpywareSignatureMap{})
	pulumi.RegisterOutputType(AntiSpywareSignatureOutput{})
	pulumi.RegisterOutputType(AntiSpywareSignatureArrayOutput{})
	pulumi.RegisterOutputType(AntiSpywareSignatureMapOutput{})
}
