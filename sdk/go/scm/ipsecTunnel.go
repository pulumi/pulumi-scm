// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewIpsecTunnel(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type IpsecTunnel struct {
	pulumi.CustomResourceState

	// Enable Anti-Replay check on this tunnel.
	AntiReplay pulumi.BoolPtrOutput `pulumi:"antiReplay"`
	// The AutoKey param.
	AutoKey IpsecTunnelAutoKeyOutput `pulumi:"autoKey"`
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
	CopyTos pulumi.BoolOutput `pulumi:"copyTos"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// allow GRE over IPSec. Default: `false`.
	EnableGreEncapsulation pulumi.BoolOutput `pulumi:"enableGreEncapsulation"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
	// The TunnelMonitor param.
	TunnelMonitor IpsecTunnelTunnelMonitorPtrOutput `pulumi:"tunnelMonitor"`
}

// NewIpsecTunnel registers a new resource with the given unique name, arguments, and options.
func NewIpsecTunnel(ctx *pulumi.Context,
	name string, args *IpsecTunnelArgs, opts ...pulumi.ResourceOption) (*IpsecTunnel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoKey == nil {
		return nil, errors.New("invalid value for required argument 'AutoKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpsecTunnel
	err := ctx.RegisterResource("scm:index/ipsecTunnel:IpsecTunnel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpsecTunnel gets an existing IpsecTunnel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpsecTunnel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpsecTunnelState, opts ...pulumi.ResourceOption) (*IpsecTunnel, error) {
	var resource IpsecTunnel
	err := ctx.ReadResource("scm:index/ipsecTunnel:IpsecTunnel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpsecTunnel resources.
type ipsecTunnelState struct {
	// Enable Anti-Replay check on this tunnel.
	AntiReplay *bool `pulumi:"antiReplay"`
	// The AutoKey param.
	AutoKey *IpsecTunnelAutoKey `pulumi:"autoKey"`
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
	CopyTos *bool `pulumi:"copyTos"`
	// The Device param.
	Device *string `pulumi:"device"`
	// allow GRE over IPSec. Default: `false`.
	EnableGreEncapsulation *bool `pulumi:"enableGreEncapsulation"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
	// The TunnelMonitor param.
	TunnelMonitor *IpsecTunnelTunnelMonitor `pulumi:"tunnelMonitor"`
}

type IpsecTunnelState struct {
	// Enable Anti-Replay check on this tunnel.
	AntiReplay pulumi.BoolPtrInput
	// The AutoKey param.
	AutoKey IpsecTunnelAutoKeyPtrInput
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
	CopyTos pulumi.BoolPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// allow GRE over IPSec. Default: `false`.
	EnableGreEncapsulation pulumi.BoolPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
	// The TunnelMonitor param.
	TunnelMonitor IpsecTunnelTunnelMonitorPtrInput
}

func (IpsecTunnelState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsecTunnelState)(nil)).Elem()
}

type ipsecTunnelArgs struct {
	// Enable Anti-Replay check on this tunnel.
	AntiReplay *bool `pulumi:"antiReplay"`
	// The AutoKey param.
	AutoKey IpsecTunnelAutoKey `pulumi:"autoKey"`
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
	CopyTos *bool `pulumi:"copyTos"`
	// The Device param.
	Device *string `pulumi:"device"`
	// allow GRE over IPSec. Default: `false`.
	EnableGreEncapsulation *bool `pulumi:"enableGreEncapsulation"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// The TunnelMonitor param.
	TunnelMonitor *IpsecTunnelTunnelMonitor `pulumi:"tunnelMonitor"`
}

// The set of arguments for constructing a IpsecTunnel resource.
type IpsecTunnelArgs struct {
	// Enable Anti-Replay check on this tunnel.
	AntiReplay pulumi.BoolPtrInput
	// The AutoKey param.
	AutoKey IpsecTunnelAutoKeyInput
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
	CopyTos pulumi.BoolPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// allow GRE over IPSec. Default: `false`.
	EnableGreEncapsulation pulumi.BoolPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// The TunnelMonitor param.
	TunnelMonitor IpsecTunnelTunnelMonitorPtrInput
}

func (IpsecTunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsecTunnelArgs)(nil)).Elem()
}

type IpsecTunnelInput interface {
	pulumi.Input

	ToIpsecTunnelOutput() IpsecTunnelOutput
	ToIpsecTunnelOutputWithContext(ctx context.Context) IpsecTunnelOutput
}

func (*IpsecTunnel) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsecTunnel)(nil)).Elem()
}

func (i *IpsecTunnel) ToIpsecTunnelOutput() IpsecTunnelOutput {
	return i.ToIpsecTunnelOutputWithContext(context.Background())
}

func (i *IpsecTunnel) ToIpsecTunnelOutputWithContext(ctx context.Context) IpsecTunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecTunnelOutput)
}

// IpsecTunnelArrayInput is an input type that accepts IpsecTunnelArray and IpsecTunnelArrayOutput values.
// You can construct a concrete instance of `IpsecTunnelArrayInput` via:
//
//	IpsecTunnelArray{ IpsecTunnelArgs{...} }
type IpsecTunnelArrayInput interface {
	pulumi.Input

	ToIpsecTunnelArrayOutput() IpsecTunnelArrayOutput
	ToIpsecTunnelArrayOutputWithContext(context.Context) IpsecTunnelArrayOutput
}

type IpsecTunnelArray []IpsecTunnelInput

func (IpsecTunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsecTunnel)(nil)).Elem()
}

func (i IpsecTunnelArray) ToIpsecTunnelArrayOutput() IpsecTunnelArrayOutput {
	return i.ToIpsecTunnelArrayOutputWithContext(context.Background())
}

func (i IpsecTunnelArray) ToIpsecTunnelArrayOutputWithContext(ctx context.Context) IpsecTunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecTunnelArrayOutput)
}

// IpsecTunnelMapInput is an input type that accepts IpsecTunnelMap and IpsecTunnelMapOutput values.
// You can construct a concrete instance of `IpsecTunnelMapInput` via:
//
//	IpsecTunnelMap{ "key": IpsecTunnelArgs{...} }
type IpsecTunnelMapInput interface {
	pulumi.Input

	ToIpsecTunnelMapOutput() IpsecTunnelMapOutput
	ToIpsecTunnelMapOutputWithContext(context.Context) IpsecTunnelMapOutput
}

type IpsecTunnelMap map[string]IpsecTunnelInput

func (IpsecTunnelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsecTunnel)(nil)).Elem()
}

func (i IpsecTunnelMap) ToIpsecTunnelMapOutput() IpsecTunnelMapOutput {
	return i.ToIpsecTunnelMapOutputWithContext(context.Background())
}

func (i IpsecTunnelMap) ToIpsecTunnelMapOutputWithContext(ctx context.Context) IpsecTunnelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecTunnelMapOutput)
}

type IpsecTunnelOutput struct{ *pulumi.OutputState }

func (IpsecTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsecTunnel)(nil)).Elem()
}

func (o IpsecTunnelOutput) ToIpsecTunnelOutput() IpsecTunnelOutput {
	return o
}

func (o IpsecTunnelOutput) ToIpsecTunnelOutputWithContext(ctx context.Context) IpsecTunnelOutput {
	return o
}

// Enable Anti-Replay check on this tunnel.
func (o IpsecTunnelOutput) AntiReplay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.BoolPtrOutput { return v.AntiReplay }).(pulumi.BoolPtrOutput)
}

// The AutoKey param.
func (o IpsecTunnelOutput) AutoKey() IpsecTunnelAutoKeyOutput {
	return o.ApplyT(func(v *IpsecTunnel) IpsecTunnelAutoKeyOutput { return v.AutoKey }).(IpsecTunnelAutoKeyOutput)
}

// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
func (o IpsecTunnelOutput) CopyTos() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.BoolOutput { return v.CopyTos }).(pulumi.BoolOutput)
}

// The Device param.
func (o IpsecTunnelOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// allow GRE over IPSec. Default: `false`.
func (o IpsecTunnelOutput) EnableGreEncapsulation() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.BoolOutput { return v.EnableGreEncapsulation }).(pulumi.BoolOutput)
}

// The Folder param.
func (o IpsecTunnelOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o IpsecTunnelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o IpsecTunnelOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o IpsecTunnelOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsecTunnel) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// The TunnelMonitor param.
func (o IpsecTunnelOutput) TunnelMonitor() IpsecTunnelTunnelMonitorPtrOutput {
	return o.ApplyT(func(v *IpsecTunnel) IpsecTunnelTunnelMonitorPtrOutput { return v.TunnelMonitor }).(IpsecTunnelTunnelMonitorPtrOutput)
}

type IpsecTunnelArrayOutput struct{ *pulumi.OutputState }

func (IpsecTunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsecTunnel)(nil)).Elem()
}

func (o IpsecTunnelArrayOutput) ToIpsecTunnelArrayOutput() IpsecTunnelArrayOutput {
	return o
}

func (o IpsecTunnelArrayOutput) ToIpsecTunnelArrayOutputWithContext(ctx context.Context) IpsecTunnelArrayOutput {
	return o
}

func (o IpsecTunnelArrayOutput) Index(i pulumi.IntInput) IpsecTunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpsecTunnel {
		return vs[0].([]*IpsecTunnel)[vs[1].(int)]
	}).(IpsecTunnelOutput)
}

type IpsecTunnelMapOutput struct{ *pulumi.OutputState }

func (IpsecTunnelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsecTunnel)(nil)).Elem()
}

func (o IpsecTunnelMapOutput) ToIpsecTunnelMapOutput() IpsecTunnelMapOutput {
	return o
}

func (o IpsecTunnelMapOutput) ToIpsecTunnelMapOutputWithContext(ctx context.Context) IpsecTunnelMapOutput {
	return o
}

func (o IpsecTunnelMapOutput) MapIndex(k pulumi.StringInput) IpsecTunnelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpsecTunnel {
		return vs[0].(map[string]*IpsecTunnel)[vs[1].(string)]
	}).(IpsecTunnelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecTunnelInput)(nil)).Elem(), &IpsecTunnel{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecTunnelArrayInput)(nil)).Elem(), IpsecTunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecTunnelMapInput)(nil)).Elem(), IpsecTunnelMap{})
	pulumi.RegisterOutputType(IpsecTunnelOutput{})
	pulumi.RegisterOutputType(IpsecTunnelArrayOutput{})
	pulumi.RegisterOutputType(IpsecTunnelMapOutput{})
}
