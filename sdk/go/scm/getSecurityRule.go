// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupSecurityRule(ctx, &scm.LookupSecurityRuleArgs{
//				Id: "1234-56-789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSecurityRule(ctx *pulumi.Context, args *LookupSecurityRuleArgs, opts ...pulumi.InvokeOption) (*LookupSecurityRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityRuleResult
	err := ctx.Invoke("scm:index/getSecurityRule:getSecurityRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityRule.
type LookupSecurityRuleArgs struct {
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getSecurityRule.
type LookupSecurityRuleResult struct {
	// The action to be taken when the rule is matched. String must be one of these: `"allow"`, `"deny"`, `"drop"`, `"reset-client"`, `"reset-server"`, `"reset-both"`.
	Action string `pulumi:"action"`
	// The application(s) being accessed.
	Applications []string `pulumi:"applications"`
	// The URL categories being accessed.
	Categories []string `pulumi:"categories"`
	// The description of the security rule.
	Description string `pulumi:"description"`
	// The destination Host Integrity Profile(s).
	DestinationHips []string `pulumi:"destinationHips"`
	// The destination address(es).
	Destinations []string `pulumi:"destinations"`
	// The state of the security rule. Default: `false`.
	Disabled bool `pulumi:"disabled"`
	// The source security zone(s).
	Froms []string `pulumi:"froms"`
	// The Id param.
	Id string `pulumi:"id"`
	// The external log forwarding profile.
	LogSetting string `pulumi:"logSetting"`
	// The name of the security rule.
	Name string `pulumi:"name"`
	// Negate the destination addresses(es). Default: `false`.
	NegateDestination bool `pulumi:"negateDestination"`
	// Negate the source address(es). Default: `false`.
	NegateSource bool `pulumi:"negateSource"`
	// The security profile object.
	ProfileSetting GetSecurityRuleProfileSetting `pulumi:"profileSetting"`
	// The service(s) being accessed.
	Services []string `pulumi:"services"`
	// The source Host Integrity Profile(s).
	SourceHips []string `pulumi:"sourceHips"`
	// The source user(s) or group(s).
	SourceUsers []string `pulumi:"sourceUsers"`
	// The source address(es).
	Sources []string `pulumi:"sources"`
	// The tags associated with the security rule.
	Tags []string `pulumi:"tags"`
	Tfid string   `pulumi:"tfid"`
	// The destination security zone(s).
	Tos []string `pulumi:"tos"`
}

func LookupSecurityRuleOutput(ctx *pulumi.Context, args LookupSecurityRuleOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityRuleResultOutput, error) {
			args := v.(LookupSecurityRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scm:index/getSecurityRule:getSecurityRule", args, LookupSecurityRuleResultOutput{}, options).(LookupSecurityRuleResultOutput), nil
		}).(LookupSecurityRuleResultOutput)
}

// A collection of arguments for invoking getSecurityRule.
type LookupSecurityRuleOutputArgs struct {
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSecurityRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityRuleArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityRule.
type LookupSecurityRuleResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityRuleResult)(nil)).Elem()
}

func (o LookupSecurityRuleResultOutput) ToLookupSecurityRuleResultOutput() LookupSecurityRuleResultOutput {
	return o
}

func (o LookupSecurityRuleResultOutput) ToLookupSecurityRuleResultOutputWithContext(ctx context.Context) LookupSecurityRuleResultOutput {
	return o
}

// The action to be taken when the rule is matched. String must be one of these: `"allow"`, `"deny"`, `"drop"`, `"reset-client"`, `"reset-server"`, `"reset-both"`.
func (o LookupSecurityRuleResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) string { return v.Action }).(pulumi.StringOutput)
}

// The application(s) being accessed.
func (o LookupSecurityRuleResultOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Applications }).(pulumi.StringArrayOutput)
}

// The URL categories being accessed.
func (o LookupSecurityRuleResultOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// The description of the security rule.
func (o LookupSecurityRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The destination Host Integrity Profile(s).
func (o LookupSecurityRuleResultOutput) DestinationHips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.DestinationHips }).(pulumi.StringArrayOutput)
}

// The destination address(es).
func (o LookupSecurityRuleResultOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The state of the security rule. Default: `false`.
func (o LookupSecurityRuleResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// The source security zone(s).
func (o LookupSecurityRuleResultOutput) Froms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Froms }).(pulumi.StringArrayOutput)
}

// The Id param.
func (o LookupSecurityRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The external log forwarding profile.
func (o LookupSecurityRuleResultOutput) LogSetting() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) string { return v.LogSetting }).(pulumi.StringOutput)
}

// The name of the security rule.
func (o LookupSecurityRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Negate the destination addresses(es). Default: `false`.
func (o LookupSecurityRuleResultOutput) NegateDestination() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) bool { return v.NegateDestination }).(pulumi.BoolOutput)
}

// Negate the source address(es). Default: `false`.
func (o LookupSecurityRuleResultOutput) NegateSource() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) bool { return v.NegateSource }).(pulumi.BoolOutput)
}

// The security profile object.
func (o LookupSecurityRuleResultOutput) ProfileSetting() GetSecurityRuleProfileSettingOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) GetSecurityRuleProfileSetting { return v.ProfileSetting }).(GetSecurityRuleProfileSettingOutput)
}

// The service(s) being accessed.
func (o LookupSecurityRuleResultOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// The source Host Integrity Profile(s).
func (o LookupSecurityRuleResultOutput) SourceHips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.SourceHips }).(pulumi.StringArrayOutput)
}

// The source user(s) or group(s).
func (o LookupSecurityRuleResultOutput) SourceUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.SourceUsers }).(pulumi.StringArrayOutput)
}

// The source address(es).
func (o LookupSecurityRuleResultOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// The tags associated with the security rule.
func (o LookupSecurityRuleResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupSecurityRuleResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) string { return v.Tfid }).(pulumi.StringOutput)
}

// The destination security zone(s).
func (o LookupSecurityRuleResultOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRuleResult) []string { return v.Tos }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityRuleResultOutput{})
}
