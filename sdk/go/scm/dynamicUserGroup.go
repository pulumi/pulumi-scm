// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewDynamicUserGroup(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DynamicUserGroup struct {
	pulumi.CustomResourceState

	// The Description param. String length must not exceed 1023 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// tag-based filter. String length must not exceed 2047 characters.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	Tfid pulumi.StringOutput      `pulumi:"tfid"`
}

// NewDynamicUserGroup registers a new resource with the given unique name, arguments, and options.
func NewDynamicUserGroup(ctx *pulumi.Context,
	name string, args *DynamicUserGroupArgs, opts ...pulumi.ResourceOption) (*DynamicUserGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DynamicUserGroup
	err := ctx.RegisterResource("scm:index/dynamicUserGroup:DynamicUserGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDynamicUserGroup gets an existing DynamicUserGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDynamicUserGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DynamicUserGroupState, opts ...pulumi.ResourceOption) (*DynamicUserGroup, error) {
	var resource DynamicUserGroup
	err := ctx.ReadResource("scm:index/dynamicUserGroup:DynamicUserGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DynamicUserGroup resources.
type dynamicUserGroupState struct {
	// The Description param. String length must not exceed 1023 characters.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// tag-based filter. String length must not exceed 2047 characters.
	Filter *string `pulumi:"filter"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags []string `pulumi:"tags"`
	Tfid *string  `pulumi:"tfid"`
}

type DynamicUserGroupState struct {
	// The Description param. String length must not exceed 1023 characters.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// tag-based filter. String length must not exceed 2047 characters.
	Filter pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags pulumi.StringArrayInput
	Tfid pulumi.StringPtrInput
}

func (DynamicUserGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*dynamicUserGroupState)(nil)).Elem()
}

type dynamicUserGroupArgs struct {
	// The Description param. String length must not exceed 1023 characters.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// tag-based filter. String length must not exceed 2047 characters.
	Filter string `pulumi:"filter"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a DynamicUserGroup resource.
type DynamicUserGroupArgs struct {
	// The Description param. String length must not exceed 1023 characters.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// tag-based filter. String length must not exceed 2047 characters.
	Filter pulumi.StringInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags pulumi.StringArrayInput
}

func (DynamicUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dynamicUserGroupArgs)(nil)).Elem()
}

type DynamicUserGroupInput interface {
	pulumi.Input

	ToDynamicUserGroupOutput() DynamicUserGroupOutput
	ToDynamicUserGroupOutputWithContext(ctx context.Context) DynamicUserGroupOutput
}

func (*DynamicUserGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicUserGroup)(nil)).Elem()
}

func (i *DynamicUserGroup) ToDynamicUserGroupOutput() DynamicUserGroupOutput {
	return i.ToDynamicUserGroupOutputWithContext(context.Background())
}

func (i *DynamicUserGroup) ToDynamicUserGroupOutputWithContext(ctx context.Context) DynamicUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicUserGroupOutput)
}

// DynamicUserGroupArrayInput is an input type that accepts DynamicUserGroupArray and DynamicUserGroupArrayOutput values.
// You can construct a concrete instance of `DynamicUserGroupArrayInput` via:
//
//	DynamicUserGroupArray{ DynamicUserGroupArgs{...} }
type DynamicUserGroupArrayInput interface {
	pulumi.Input

	ToDynamicUserGroupArrayOutput() DynamicUserGroupArrayOutput
	ToDynamicUserGroupArrayOutputWithContext(context.Context) DynamicUserGroupArrayOutput
}

type DynamicUserGroupArray []DynamicUserGroupInput

func (DynamicUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DynamicUserGroup)(nil)).Elem()
}

func (i DynamicUserGroupArray) ToDynamicUserGroupArrayOutput() DynamicUserGroupArrayOutput {
	return i.ToDynamicUserGroupArrayOutputWithContext(context.Background())
}

func (i DynamicUserGroupArray) ToDynamicUserGroupArrayOutputWithContext(ctx context.Context) DynamicUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicUserGroupArrayOutput)
}

// DynamicUserGroupMapInput is an input type that accepts DynamicUserGroupMap and DynamicUserGroupMapOutput values.
// You can construct a concrete instance of `DynamicUserGroupMapInput` via:
//
//	DynamicUserGroupMap{ "key": DynamicUserGroupArgs{...} }
type DynamicUserGroupMapInput interface {
	pulumi.Input

	ToDynamicUserGroupMapOutput() DynamicUserGroupMapOutput
	ToDynamicUserGroupMapOutputWithContext(context.Context) DynamicUserGroupMapOutput
}

type DynamicUserGroupMap map[string]DynamicUserGroupInput

func (DynamicUserGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DynamicUserGroup)(nil)).Elem()
}

func (i DynamicUserGroupMap) ToDynamicUserGroupMapOutput() DynamicUserGroupMapOutput {
	return i.ToDynamicUserGroupMapOutputWithContext(context.Background())
}

func (i DynamicUserGroupMap) ToDynamicUserGroupMapOutputWithContext(ctx context.Context) DynamicUserGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicUserGroupMapOutput)
}

type DynamicUserGroupOutput struct{ *pulumi.OutputState }

func (DynamicUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicUserGroup)(nil)).Elem()
}

func (o DynamicUserGroupOutput) ToDynamicUserGroupOutput() DynamicUserGroupOutput {
	return o
}

func (o DynamicUserGroupOutput) ToDynamicUserGroupOutputWithContext(ctx context.Context) DynamicUserGroupOutput {
	return o
}

// The Description param. String length must not exceed 1023 characters.
func (o DynamicUserGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Device param.
func (o DynamicUserGroupOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// tag-based filter. String length must not exceed 2047 characters.
func (o DynamicUserGroupOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// The Folder param.
func (o DynamicUserGroupOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o DynamicUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o DynamicUserGroupOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
func (o DynamicUserGroupOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o DynamicUserGroupOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *DynamicUserGroup) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type DynamicUserGroupArrayOutput struct{ *pulumi.OutputState }

func (DynamicUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DynamicUserGroup)(nil)).Elem()
}

func (o DynamicUserGroupArrayOutput) ToDynamicUserGroupArrayOutput() DynamicUserGroupArrayOutput {
	return o
}

func (o DynamicUserGroupArrayOutput) ToDynamicUserGroupArrayOutputWithContext(ctx context.Context) DynamicUserGroupArrayOutput {
	return o
}

func (o DynamicUserGroupArrayOutput) Index(i pulumi.IntInput) DynamicUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DynamicUserGroup {
		return vs[0].([]*DynamicUserGroup)[vs[1].(int)]
	}).(DynamicUserGroupOutput)
}

type DynamicUserGroupMapOutput struct{ *pulumi.OutputState }

func (DynamicUserGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DynamicUserGroup)(nil)).Elem()
}

func (o DynamicUserGroupMapOutput) ToDynamicUserGroupMapOutput() DynamicUserGroupMapOutput {
	return o
}

func (o DynamicUserGroupMapOutput) ToDynamicUserGroupMapOutputWithContext(ctx context.Context) DynamicUserGroupMapOutput {
	return o
}

func (o DynamicUserGroupMapOutput) MapIndex(k pulumi.StringInput) DynamicUserGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DynamicUserGroup {
		return vs[0].(map[string]*DynamicUserGroup)[vs[1].(string)]
	}).(DynamicUserGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicUserGroupInput)(nil)).Elem(), &DynamicUserGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicUserGroupArrayInput)(nil)).Elem(), DynamicUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicUserGroupMapInput)(nil)).Elem(), DynamicUserGroupMap{})
	pulumi.RegisterOutputType(DynamicUserGroupOutput{})
	pulumi.RegisterOutputType(DynamicUserGroupArrayOutput{})
	pulumi.RegisterOutputType(DynamicUserGroupMapOutput{})
}
