// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupInternalDnsServer(ctx, &scm.LookupInternalDnsServerArgs{
//				Id: "1234-56-789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInternalDnsServer(ctx *pulumi.Context, args *LookupInternalDnsServerArgs, opts ...pulumi.InvokeOption) (*LookupInternalDnsServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInternalDnsServerResult
	err := ctx.Invoke("scm:index/getInternalDnsServer:getInternalDnsServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInternalDnsServer.
type LookupInternalDnsServerArgs struct {
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getInternalDnsServer.
type LookupInternalDnsServerResult struct {
	// The DomainNames param.
	DomainNames []string `pulumi:"domainNames"`
	// The Id param.
	Id string `pulumi:"id"`
	// The Name param.
	Name string `pulumi:"name"`
	// The Primary param.
	Primary string `pulumi:"primary"`
	// The Secondary param.
	Secondary string `pulumi:"secondary"`
	Tfid      string `pulumi:"tfid"`
}

func LookupInternalDnsServerOutput(ctx *pulumi.Context, args LookupInternalDnsServerOutputArgs, opts ...pulumi.InvokeOption) LookupInternalDnsServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInternalDnsServerResult, error) {
			args := v.(LookupInternalDnsServerArgs)
			r, err := LookupInternalDnsServer(ctx, &args, opts...)
			var s LookupInternalDnsServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInternalDnsServerResultOutput)
}

// A collection of arguments for invoking getInternalDnsServer.
type LookupInternalDnsServerOutputArgs struct {
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupInternalDnsServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInternalDnsServerArgs)(nil)).Elem()
}

// A collection of values returned by getInternalDnsServer.
type LookupInternalDnsServerResultOutput struct{ *pulumi.OutputState }

func (LookupInternalDnsServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInternalDnsServerResult)(nil)).Elem()
}

func (o LookupInternalDnsServerResultOutput) ToLookupInternalDnsServerResultOutput() LookupInternalDnsServerResultOutput {
	return o
}

func (o LookupInternalDnsServerResultOutput) ToLookupInternalDnsServerResultOutputWithContext(ctx context.Context) LookupInternalDnsServerResultOutput {
	return o
}

// The DomainNames param.
func (o LookupInternalDnsServerResultOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInternalDnsServerResult) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

// The Id param.
func (o LookupInternalDnsServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalDnsServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Name param.
func (o LookupInternalDnsServerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalDnsServerResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Primary param.
func (o LookupInternalDnsServerResultOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalDnsServerResult) string { return v.Primary }).(pulumi.StringOutput)
}

// The Secondary param.
func (o LookupInternalDnsServerResultOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalDnsServerResult) string { return v.Secondary }).(pulumi.StringOutput)
}

func (o LookupInternalDnsServerResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInternalDnsServerResult) string { return v.Tfid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInternalDnsServerResultOutput{})
}
