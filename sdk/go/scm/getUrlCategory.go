// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
func LookupUrlCategory(ctx *pulumi.Context, args *LookupUrlCategoryArgs, opts ...pulumi.InvokeOption) (*LookupUrlCategoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUrlCategoryResult
	err := ctx.Invoke("scm:index/getUrlCategory:getUrlCategory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUrlCategory.
type LookupUrlCategoryArgs struct {
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getUrlCategory.
type LookupUrlCategoryResult struct {
	// The Description param.
	Description string `pulumi:"description"`
	// The Id param.
	Id string `pulumi:"id"`
	// The List param.
	Lists []string `pulumi:"lists"`
	// The Name param.
	Name string `pulumi:"name"`
	Tfid string `pulumi:"tfid"`
	// The Type param. String must be one of these: `"URL List"`, `"Category Match"`. Default: `"URL List"`.
	Type string `pulumi:"type"`
}

func LookupUrlCategoryOutput(ctx *pulumi.Context, args LookupUrlCategoryOutputArgs, opts ...pulumi.InvokeOption) LookupUrlCategoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUrlCategoryResultOutput, error) {
			args := v.(LookupUrlCategoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scm:index/getUrlCategory:getUrlCategory", args, LookupUrlCategoryResultOutput{}, options).(LookupUrlCategoryResultOutput), nil
		}).(LookupUrlCategoryResultOutput)
}

// A collection of arguments for invoking getUrlCategory.
type LookupUrlCategoryOutputArgs struct {
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupUrlCategoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUrlCategoryArgs)(nil)).Elem()
}

// A collection of values returned by getUrlCategory.
type LookupUrlCategoryResultOutput struct{ *pulumi.OutputState }

func (LookupUrlCategoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUrlCategoryResult)(nil)).Elem()
}

func (o LookupUrlCategoryResultOutput) ToLookupUrlCategoryResultOutput() LookupUrlCategoryResultOutput {
	return o
}

func (o LookupUrlCategoryResultOutput) ToLookupUrlCategoryResultOutputWithContext(ctx context.Context) LookupUrlCategoryResultOutput {
	return o
}

// The Description param.
func (o LookupUrlCategoryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlCategoryResult) string { return v.Description }).(pulumi.StringOutput)
}

// The Id param.
func (o LookupUrlCategoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlCategoryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The List param.
func (o LookupUrlCategoryResultOutput) Lists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUrlCategoryResult) []string { return v.Lists }).(pulumi.StringArrayOutput)
}

// The Name param.
func (o LookupUrlCategoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlCategoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupUrlCategoryResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlCategoryResult) string { return v.Tfid }).(pulumi.StringOutput)
}

// The Type param. String must be one of these: `"URL List"`, `"Category Match"`. Default: `"URL List"`.
func (o LookupUrlCategoryResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlCategoryResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUrlCategoryResultOutput{})
}
