// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewServiceConnection(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ServiceConnection struct {
	pulumi.CustomResourceState

	// The BackupSC param.
	BackupSC pulumi.StringPtrOutput `pulumi:"backupSC"`
	// The BgpPeer param.
	BgpPeer ServiceConnectionBgpPeerPtrOutput `pulumi:"bgpPeer"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapOutput `pulumi:"encryptedValues"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringOutput `pulumi:"folder"`
	// The IpsecTunnel param.
	IpsecTunnel pulumi.StringOutput `pulumi:"ipsecTunnel"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The NatPool param.
	NatPool pulumi.StringPtrOutput `pulumi:"natPool"`
	// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
	NoExportCommunity pulumi.StringPtrOutput `pulumi:"noExportCommunity"`
	// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
	OnboardingType pulumi.StringOutput `pulumi:"onboardingType"`
	// The Protocol param.
	Protocol ServiceConnectionProtocolPtrOutput `pulumi:"protocol"`
	// The Qos param.
	Qos ServiceConnectionQosPtrOutput `pulumi:"qos"`
	// The Region param.
	Region pulumi.StringOutput `pulumi:"region"`
	// The SecondaryIpsecTunnel param.
	SecondaryIpsecTunnel pulumi.StringPtrOutput `pulumi:"secondaryIpsecTunnel"`
	// The SourceNat param.
	SourceNat pulumi.BoolPtrOutput `pulumi:"sourceNat"`
	// The Subnets param.
	Subnets pulumi.StringArrayOutput `pulumi:"subnets"`
	Tfid    pulumi.StringOutput      `pulumi:"tfid"`
}

// NewServiceConnection registers a new resource with the given unique name, arguments, and options.
func NewServiceConnection(ctx *pulumi.Context,
	name string, args *ServiceConnectionArgs, opts ...pulumi.ResourceOption) (*ServiceConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpsecTunnel == nil {
		return nil, errors.New("invalid value for required argument 'IpsecTunnel'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"encryptedValues",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceConnection
	err := ctx.RegisterResource("scm:index/serviceConnection:ServiceConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnection gets an existing ServiceConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionState, opts ...pulumi.ResourceOption) (*ServiceConnection, error) {
	var resource ServiceConnection
	err := ctx.ReadResource("scm:index/serviceConnection:ServiceConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnection resources.
type serviceConnectionState struct {
	// The BackupSC param.
	BackupSC *string `pulumi:"backupSC"`
	// The BgpPeer param.
	BgpPeer *ServiceConnectionBgpPeer `pulumi:"bgpPeer"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues map[string]string `pulumi:"encryptedValues"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The IpsecTunnel param.
	IpsecTunnel *string `pulumi:"ipsecTunnel"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The NatPool param.
	NatPool *string `pulumi:"natPool"`
	// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
	NoExportCommunity *string `pulumi:"noExportCommunity"`
	// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
	OnboardingType *string `pulumi:"onboardingType"`
	// The Protocol param.
	Protocol *ServiceConnectionProtocol `pulumi:"protocol"`
	// The Qos param.
	Qos *ServiceConnectionQos `pulumi:"qos"`
	// The Region param.
	Region *string `pulumi:"region"`
	// The SecondaryIpsecTunnel param.
	SecondaryIpsecTunnel *string `pulumi:"secondaryIpsecTunnel"`
	// The SourceNat param.
	SourceNat *bool `pulumi:"sourceNat"`
	// The Subnets param.
	Subnets []string `pulumi:"subnets"`
	Tfid    *string  `pulumi:"tfid"`
}

type ServiceConnectionState struct {
	// The BackupSC param.
	BackupSC pulumi.StringPtrInput
	// The BgpPeer param.
	BgpPeer ServiceConnectionBgpPeerPtrInput
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapInput
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput
	// The IpsecTunnel param.
	IpsecTunnel pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The NatPool param.
	NatPool pulumi.StringPtrInput
	// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
	NoExportCommunity pulumi.StringPtrInput
	// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
	OnboardingType pulumi.StringPtrInput
	// The Protocol param.
	Protocol ServiceConnectionProtocolPtrInput
	// The Qos param.
	Qos ServiceConnectionQosPtrInput
	// The Region param.
	Region pulumi.StringPtrInput
	// The SecondaryIpsecTunnel param.
	SecondaryIpsecTunnel pulumi.StringPtrInput
	// The SourceNat param.
	SourceNat pulumi.BoolPtrInput
	// The Subnets param.
	Subnets pulumi.StringArrayInput
	Tfid    pulumi.StringPtrInput
}

func (ServiceConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionState)(nil)).Elem()
}

type serviceConnectionArgs struct {
	// The BackupSC param.
	BackupSC *string `pulumi:"backupSC"`
	// The BgpPeer param.
	BgpPeer *ServiceConnectionBgpPeer `pulumi:"bgpPeer"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The IpsecTunnel param.
	IpsecTunnel string `pulumi:"ipsecTunnel"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The NatPool param.
	NatPool *string `pulumi:"natPool"`
	// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
	NoExportCommunity *string `pulumi:"noExportCommunity"`
	// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
	OnboardingType *string `pulumi:"onboardingType"`
	// The Protocol param.
	Protocol *ServiceConnectionProtocol `pulumi:"protocol"`
	// The Qos param.
	Qos *ServiceConnectionQos `pulumi:"qos"`
	// The Region param.
	Region string `pulumi:"region"`
	// The SecondaryIpsecTunnel param.
	SecondaryIpsecTunnel *string `pulumi:"secondaryIpsecTunnel"`
	// The SourceNat param.
	SourceNat *bool `pulumi:"sourceNat"`
	// The Subnets param.
	Subnets []string `pulumi:"subnets"`
}

// The set of arguments for constructing a ServiceConnection resource.
type ServiceConnectionArgs struct {
	// The BackupSC param.
	BackupSC pulumi.StringPtrInput
	// The BgpPeer param.
	BgpPeer ServiceConnectionBgpPeerPtrInput
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput
	// The IpsecTunnel param.
	IpsecTunnel pulumi.StringInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The NatPool param.
	NatPool pulumi.StringPtrInput
	// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
	NoExportCommunity pulumi.StringPtrInput
	// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
	OnboardingType pulumi.StringPtrInput
	// The Protocol param.
	Protocol ServiceConnectionProtocolPtrInput
	// The Qos param.
	Qos ServiceConnectionQosPtrInput
	// The Region param.
	Region pulumi.StringInput
	// The SecondaryIpsecTunnel param.
	SecondaryIpsecTunnel pulumi.StringPtrInput
	// The SourceNat param.
	SourceNat pulumi.BoolPtrInput
	// The Subnets param.
	Subnets pulumi.StringArrayInput
}

func (ServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionArgs)(nil)).Elem()
}

type ServiceConnectionInput interface {
	pulumi.Input

	ToServiceConnectionOutput() ServiceConnectionOutput
	ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput
}

func (*ServiceConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnection)(nil)).Elem()
}

func (i *ServiceConnection) ToServiceConnectionOutput() ServiceConnectionOutput {
	return i.ToServiceConnectionOutputWithContext(context.Background())
}

func (i *ServiceConnection) ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionOutput)
}

// ServiceConnectionArrayInput is an input type that accepts ServiceConnectionArray and ServiceConnectionArrayOutput values.
// You can construct a concrete instance of `ServiceConnectionArrayInput` via:
//
//	ServiceConnectionArray{ ServiceConnectionArgs{...} }
type ServiceConnectionArrayInput interface {
	pulumi.Input

	ToServiceConnectionArrayOutput() ServiceConnectionArrayOutput
	ToServiceConnectionArrayOutputWithContext(context.Context) ServiceConnectionArrayOutput
}

type ServiceConnectionArray []ServiceConnectionInput

func (ServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceConnection)(nil)).Elem()
}

func (i ServiceConnectionArray) ToServiceConnectionArrayOutput() ServiceConnectionArrayOutput {
	return i.ToServiceConnectionArrayOutputWithContext(context.Background())
}

func (i ServiceConnectionArray) ToServiceConnectionArrayOutputWithContext(ctx context.Context) ServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionArrayOutput)
}

// ServiceConnectionMapInput is an input type that accepts ServiceConnectionMap and ServiceConnectionMapOutput values.
// You can construct a concrete instance of `ServiceConnectionMapInput` via:
//
//	ServiceConnectionMap{ "key": ServiceConnectionArgs{...} }
type ServiceConnectionMapInput interface {
	pulumi.Input

	ToServiceConnectionMapOutput() ServiceConnectionMapOutput
	ToServiceConnectionMapOutputWithContext(context.Context) ServiceConnectionMapOutput
}

type ServiceConnectionMap map[string]ServiceConnectionInput

func (ServiceConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceConnection)(nil)).Elem()
}

func (i ServiceConnectionMap) ToServiceConnectionMapOutput() ServiceConnectionMapOutput {
	return i.ToServiceConnectionMapOutputWithContext(context.Background())
}

func (i ServiceConnectionMap) ToServiceConnectionMapOutputWithContext(ctx context.Context) ServiceConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionMapOutput)
}

type ServiceConnectionOutput struct{ *pulumi.OutputState }

func (ServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnection)(nil)).Elem()
}

func (o ServiceConnectionOutput) ToServiceConnectionOutput() ServiceConnectionOutput {
	return o
}

func (o ServiceConnectionOutput) ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput {
	return o
}

// The BackupSC param.
func (o ServiceConnectionOutput) BackupSC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringPtrOutput { return v.BackupSC }).(pulumi.StringPtrOutput)
}

// The BgpPeer param.
func (o ServiceConnectionOutput) BgpPeer() ServiceConnectionBgpPeerPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) ServiceConnectionBgpPeerPtrOutput { return v.BgpPeer }).(ServiceConnectionBgpPeerPtrOutput)
}

// (Internal use) Encrypted values returned from the API.
func (o ServiceConnectionOutput) EncryptedValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringMapOutput { return v.EncryptedValues }).(pulumi.StringMapOutput)
}

// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
func (o ServiceConnectionOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

// The IpsecTunnel param.
func (o ServiceConnectionOutput) IpsecTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringOutput { return v.IpsecTunnel }).(pulumi.StringOutput)
}

// The Name param.
func (o ServiceConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The NatPool param.
func (o ServiceConnectionOutput) NatPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringPtrOutput { return v.NatPool }).(pulumi.StringPtrOutput)
}

// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
func (o ServiceConnectionOutput) NoExportCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringPtrOutput { return v.NoExportCommunity }).(pulumi.StringPtrOutput)
}

// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
func (o ServiceConnectionOutput) OnboardingType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringOutput { return v.OnboardingType }).(pulumi.StringOutput)
}

// The Protocol param.
func (o ServiceConnectionOutput) Protocol() ServiceConnectionProtocolPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) ServiceConnectionProtocolPtrOutput { return v.Protocol }).(ServiceConnectionProtocolPtrOutput)
}

// The Qos param.
func (o ServiceConnectionOutput) Qos() ServiceConnectionQosPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) ServiceConnectionQosPtrOutput { return v.Qos }).(ServiceConnectionQosPtrOutput)
}

// The Region param.
func (o ServiceConnectionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The SecondaryIpsecTunnel param.
func (o ServiceConnectionOutput) SecondaryIpsecTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringPtrOutput { return v.SecondaryIpsecTunnel }).(pulumi.StringPtrOutput)
}

// The SourceNat param.
func (o ServiceConnectionOutput) SourceNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.BoolPtrOutput { return v.SourceNat }).(pulumi.BoolPtrOutput)
}

// The Subnets param.
func (o ServiceConnectionOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringArrayOutput { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o ServiceConnectionOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnection) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type ServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceConnection)(nil)).Elem()
}

func (o ServiceConnectionArrayOutput) ToServiceConnectionArrayOutput() ServiceConnectionArrayOutput {
	return o
}

func (o ServiceConnectionArrayOutput) ToServiceConnectionArrayOutputWithContext(ctx context.Context) ServiceConnectionArrayOutput {
	return o
}

func (o ServiceConnectionArrayOutput) Index(i pulumi.IntInput) ServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceConnection {
		return vs[0].([]*ServiceConnection)[vs[1].(int)]
	}).(ServiceConnectionOutput)
}

type ServiceConnectionMapOutput struct{ *pulumi.OutputState }

func (ServiceConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceConnection)(nil)).Elem()
}

func (o ServiceConnectionMapOutput) ToServiceConnectionMapOutput() ServiceConnectionMapOutput {
	return o
}

func (o ServiceConnectionMapOutput) ToServiceConnectionMapOutputWithContext(ctx context.Context) ServiceConnectionMapOutput {
	return o
}

func (o ServiceConnectionMapOutput) MapIndex(k pulumi.StringInput) ServiceConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceConnection {
		return vs[0].(map[string]*ServiceConnection)[vs[1].(string)]
	}).(ServiceConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionInput)(nil)).Elem(), &ServiceConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionArrayInput)(nil)).Elem(), ServiceConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionMapInput)(nil)).Elem(), ServiceConnectionMap{})
	pulumi.RegisterOutputType(ServiceConnectionOutput{})
	pulumi.RegisterOutputType(ServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectionMapOutput{})
}
