// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
type RadiusServerProfile struct {
	pulumi.CustomResourceState

	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapOutput `pulumi:"encryptedValues"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Protocol param.
	Protocol RadiusServerProfileProtocolPtrOutput `pulumi:"protocol"`
	// The Retries param. Value must be between 1 and 5.
	Retries pulumi.IntPtrOutput `pulumi:"retries"`
	// The Servers param.
	Servers RadiusServerProfileServerArrayOutput `pulumi:"servers"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
	// The Timeout param. Value must be between 1 and 120.
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
}

// NewRadiusServerProfile registers a new resource with the given unique name, arguments, and options.
func NewRadiusServerProfile(ctx *pulumi.Context,
	name string, args *RadiusServerProfileArgs, opts ...pulumi.ResourceOption) (*RadiusServerProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Servers == nil {
		return nil, errors.New("invalid value for required argument 'Servers'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"encryptedValues",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RadiusServerProfile
	err := ctx.RegisterResource("scm:index/radiusServerProfile:RadiusServerProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRadiusServerProfile gets an existing RadiusServerProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRadiusServerProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RadiusServerProfileState, opts ...pulumi.ResourceOption) (*RadiusServerProfile, error) {
	var resource RadiusServerProfile
	err := ctx.ReadResource("scm:index/radiusServerProfile:RadiusServerProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RadiusServerProfile resources.
type radiusServerProfileState struct {
	// The Device param.
	Device *string `pulumi:"device"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues map[string]string `pulumi:"encryptedValues"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Protocol param.
	Protocol *RadiusServerProfileProtocol `pulumi:"protocol"`
	// The Retries param. Value must be between 1 and 5.
	Retries *int `pulumi:"retries"`
	// The Servers param.
	Servers []RadiusServerProfileServer `pulumi:"servers"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
	// The Timeout param. Value must be between 1 and 120.
	Timeout *int `pulumi:"timeout"`
}

type RadiusServerProfileState struct {
	// The Device param.
	Device pulumi.StringPtrInput
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Protocol param.
	Protocol RadiusServerProfileProtocolPtrInput
	// The Retries param. Value must be between 1 and 5.
	Retries pulumi.IntPtrInput
	// The Servers param.
	Servers RadiusServerProfileServerArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
	// The Timeout param. Value must be between 1 and 120.
	Timeout pulumi.IntPtrInput
}

func (RadiusServerProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*radiusServerProfileState)(nil)).Elem()
}

type radiusServerProfileArgs struct {
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Protocol param.
	Protocol *RadiusServerProfileProtocol `pulumi:"protocol"`
	// The Retries param. Value must be between 1 and 5.
	Retries *int `pulumi:"retries"`
	// The Servers param.
	Servers []RadiusServerProfileServer `pulumi:"servers"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// The Timeout param. Value must be between 1 and 120.
	Timeout *int `pulumi:"timeout"`
}

// The set of arguments for constructing a RadiusServerProfile resource.
type RadiusServerProfileArgs struct {
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Protocol param.
	Protocol RadiusServerProfileProtocolPtrInput
	// The Retries param. Value must be between 1 and 5.
	Retries pulumi.IntPtrInput
	// The Servers param.
	Servers RadiusServerProfileServerArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// The Timeout param. Value must be between 1 and 120.
	Timeout pulumi.IntPtrInput
}

func (RadiusServerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*radiusServerProfileArgs)(nil)).Elem()
}

type RadiusServerProfileInput interface {
	pulumi.Input

	ToRadiusServerProfileOutput() RadiusServerProfileOutput
	ToRadiusServerProfileOutputWithContext(ctx context.Context) RadiusServerProfileOutput
}

func (*RadiusServerProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**RadiusServerProfile)(nil)).Elem()
}

func (i *RadiusServerProfile) ToRadiusServerProfileOutput() RadiusServerProfileOutput {
	return i.ToRadiusServerProfileOutputWithContext(context.Background())
}

func (i *RadiusServerProfile) ToRadiusServerProfileOutputWithContext(ctx context.Context) RadiusServerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerProfileOutput)
}

// RadiusServerProfileArrayInput is an input type that accepts RadiusServerProfileArray and RadiusServerProfileArrayOutput values.
// You can construct a concrete instance of `RadiusServerProfileArrayInput` via:
//
//	RadiusServerProfileArray{ RadiusServerProfileArgs{...} }
type RadiusServerProfileArrayInput interface {
	pulumi.Input

	ToRadiusServerProfileArrayOutput() RadiusServerProfileArrayOutput
	ToRadiusServerProfileArrayOutputWithContext(context.Context) RadiusServerProfileArrayOutput
}

type RadiusServerProfileArray []RadiusServerProfileInput

func (RadiusServerProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RadiusServerProfile)(nil)).Elem()
}

func (i RadiusServerProfileArray) ToRadiusServerProfileArrayOutput() RadiusServerProfileArrayOutput {
	return i.ToRadiusServerProfileArrayOutputWithContext(context.Background())
}

func (i RadiusServerProfileArray) ToRadiusServerProfileArrayOutputWithContext(ctx context.Context) RadiusServerProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerProfileArrayOutput)
}

// RadiusServerProfileMapInput is an input type that accepts RadiusServerProfileMap and RadiusServerProfileMapOutput values.
// You can construct a concrete instance of `RadiusServerProfileMapInput` via:
//
//	RadiusServerProfileMap{ "key": RadiusServerProfileArgs{...} }
type RadiusServerProfileMapInput interface {
	pulumi.Input

	ToRadiusServerProfileMapOutput() RadiusServerProfileMapOutput
	ToRadiusServerProfileMapOutputWithContext(context.Context) RadiusServerProfileMapOutput
}

type RadiusServerProfileMap map[string]RadiusServerProfileInput

func (RadiusServerProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RadiusServerProfile)(nil)).Elem()
}

func (i RadiusServerProfileMap) ToRadiusServerProfileMapOutput() RadiusServerProfileMapOutput {
	return i.ToRadiusServerProfileMapOutputWithContext(context.Background())
}

func (i RadiusServerProfileMap) ToRadiusServerProfileMapOutputWithContext(ctx context.Context) RadiusServerProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerProfileMapOutput)
}

type RadiusServerProfileOutput struct{ *pulumi.OutputState }

func (RadiusServerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RadiusServerProfile)(nil)).Elem()
}

func (o RadiusServerProfileOutput) ToRadiusServerProfileOutput() RadiusServerProfileOutput {
	return o
}

func (o RadiusServerProfileOutput) ToRadiusServerProfileOutputWithContext(ctx context.Context) RadiusServerProfileOutput {
	return o
}

// The Device param.
func (o RadiusServerProfileOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// (Internal use) Encrypted values returned from the API.
func (o RadiusServerProfileOutput) EncryptedValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.StringMapOutput { return v.EncryptedValues }).(pulumi.StringMapOutput)
}

// The Folder param.
func (o RadiusServerProfileOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Protocol param.
func (o RadiusServerProfileOutput) Protocol() RadiusServerProfileProtocolPtrOutput {
	return o.ApplyT(func(v *RadiusServerProfile) RadiusServerProfileProtocolPtrOutput { return v.Protocol }).(RadiusServerProfileProtocolPtrOutput)
}

// The Retries param. Value must be between 1 and 5.
func (o RadiusServerProfileOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.IntPtrOutput { return v.Retries }).(pulumi.IntPtrOutput)
}

// The Servers param.
func (o RadiusServerProfileOutput) Servers() RadiusServerProfileServerArrayOutput {
	return o.ApplyT(func(v *RadiusServerProfile) RadiusServerProfileServerArrayOutput { return v.Servers }).(RadiusServerProfileServerArrayOutput)
}

// The Snippet param.
func (o RadiusServerProfileOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o RadiusServerProfileOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// The Timeout param. Value must be between 1 and 120.
func (o RadiusServerProfileOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RadiusServerProfile) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

type RadiusServerProfileArrayOutput struct{ *pulumi.OutputState }

func (RadiusServerProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RadiusServerProfile)(nil)).Elem()
}

func (o RadiusServerProfileArrayOutput) ToRadiusServerProfileArrayOutput() RadiusServerProfileArrayOutput {
	return o
}

func (o RadiusServerProfileArrayOutput) ToRadiusServerProfileArrayOutputWithContext(ctx context.Context) RadiusServerProfileArrayOutput {
	return o
}

func (o RadiusServerProfileArrayOutput) Index(i pulumi.IntInput) RadiusServerProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RadiusServerProfile {
		return vs[0].([]*RadiusServerProfile)[vs[1].(int)]
	}).(RadiusServerProfileOutput)
}

type RadiusServerProfileMapOutput struct{ *pulumi.OutputState }

func (RadiusServerProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RadiusServerProfile)(nil)).Elem()
}

func (o RadiusServerProfileMapOutput) ToRadiusServerProfileMapOutput() RadiusServerProfileMapOutput {
	return o
}

func (o RadiusServerProfileMapOutput) ToRadiusServerProfileMapOutputWithContext(ctx context.Context) RadiusServerProfileMapOutput {
	return o
}

func (o RadiusServerProfileMapOutput) MapIndex(k pulumi.StringInput) RadiusServerProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RadiusServerProfile {
		return vs[0].(map[string]*RadiusServerProfile)[vs[1].(string)]
	}).(RadiusServerProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RadiusServerProfileInput)(nil)).Elem(), &RadiusServerProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*RadiusServerProfileArrayInput)(nil)).Elem(), RadiusServerProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RadiusServerProfileMapInput)(nil)).Elem(), RadiusServerProfileMap{})
	pulumi.RegisterOutputType(RadiusServerProfileOutput{})
	pulumi.RegisterOutputType(RadiusServerProfileArrayOutput{})
	pulumi.RegisterOutputType(RadiusServerProfileMapOutput{})
}
