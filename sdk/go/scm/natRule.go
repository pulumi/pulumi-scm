// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
type NatRule struct {
	pulumi.CustomResourceState

	// The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
	ActiveActiveDeviceBinding pulumi.StringPtrOutput `pulumi:"activeActiveDeviceBinding"`
	// The Description param.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Static destination translation parameter.
	DestinationTranslation NatRuleDestinationTranslationPtrOutput `pulumi:"destinationTranslation"`
	// The destination address(es).
	Destinations pulumi.StringArrayOutput `pulumi:"destinations"`
	// The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Disabled param.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// Dynamic destination translation parameter.
	DynamicDestinationTranslation NatRuleDynamicDestinationTranslationPtrOutput `pulumi:"dynamicDestinationTranslation"`
	// The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The source security zone(s).
	Froms pulumi.StringArrayOutput `pulumi:"froms"`
	// The GroupTag param.
	GroupTag pulumi.StringPtrOutput `pulumi:"groupTag"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
	NatType pulumi.StringPtrOutput `pulumi:"natType"`
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position pulumi.StringOutput `pulumi:"position"`
	// The Service param.
	Service pulumi.StringOutput `pulumi:"service"`
	// The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	// The SourceTranslation param.
	SourceTranslation NatRuleSourceTranslationPtrOutput `pulumi:"sourceTranslation"`
	// The source address(es).
	Sources pulumi.StringArrayOutput `pulumi:"sources"`
	// The Tags param.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The Target param.
	Target NatRuleTargetPtrOutput `pulumi:"target"`
	Tfid   pulumi.StringOutput    `pulumi:"tfid"`
	// The ToInterface param.
	ToInterface pulumi.StringPtrOutput `pulumi:"toInterface"`
	// The destination security zone(s).
	Tos pulumi.StringArrayOutput `pulumi:"tos"`
}

// NewNatRule registers a new resource with the given unique name, arguments, and options.
func NewNatRule(ctx *pulumi.Context,
	name string, args *NatRuleArgs, opts ...pulumi.ResourceOption) (*NatRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destinations == nil {
		return nil, errors.New("invalid value for required argument 'Destinations'")
	}
	if args.Froms == nil {
		return nil, errors.New("invalid value for required argument 'Froms'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.Sources == nil {
		return nil, errors.New("invalid value for required argument 'Sources'")
	}
	if args.Tos == nil {
		return nil, errors.New("invalid value for required argument 'Tos'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NatRule
	err := ctx.RegisterResource("scm:index/natRule:NatRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNatRule gets an existing NatRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NatRuleState, opts ...pulumi.ResourceOption) (*NatRule, error) {
	var resource NatRule
	err := ctx.ReadResource("scm:index/natRule:NatRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NatRule resources.
type natRuleState struct {
	// The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
	ActiveActiveDeviceBinding *string `pulumi:"activeActiveDeviceBinding"`
	// The Description param.
	Description *string `pulumi:"description"`
	// Static destination translation parameter.
	DestinationTranslation *NatRuleDestinationTranslation `pulumi:"destinationTranslation"`
	// The destination address(es).
	Destinations []string `pulumi:"destinations"`
	// The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Device *string `pulumi:"device"`
	// The Disabled param.
	Disabled *bool `pulumi:"disabled"`
	// Dynamic destination translation parameter.
	DynamicDestinationTranslation *NatRuleDynamicDestinationTranslation `pulumi:"dynamicDestinationTranslation"`
	// The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Folder *string `pulumi:"folder"`
	// The source security zone(s).
	Froms []string `pulumi:"froms"`
	// The GroupTag param.
	GroupTag *string `pulumi:"groupTag"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
	NatType *string `pulumi:"natType"`
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position *string `pulumi:"position"`
	// The Service param.
	Service *string `pulumi:"service"`
	// The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Snippet *string `pulumi:"snippet"`
	// The SourceTranslation param.
	SourceTranslation *NatRuleSourceTranslation `pulumi:"sourceTranslation"`
	// The source address(es).
	Sources []string `pulumi:"sources"`
	// The Tags param.
	Tags []string `pulumi:"tags"`
	// The Target param.
	Target *NatRuleTarget `pulumi:"target"`
	Tfid   *string        `pulumi:"tfid"`
	// The ToInterface param.
	ToInterface *string `pulumi:"toInterface"`
	// The destination security zone(s).
	Tos []string `pulumi:"tos"`
}

type NatRuleState struct {
	// The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
	ActiveActiveDeviceBinding pulumi.StringPtrInput
	// The Description param.
	Description pulumi.StringPtrInput
	// Static destination translation parameter.
	DestinationTranslation NatRuleDestinationTranslationPtrInput
	// The destination address(es).
	Destinations pulumi.StringArrayInput
	// The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Device pulumi.StringPtrInput
	// The Disabled param.
	Disabled pulumi.BoolPtrInput
	// Dynamic destination translation parameter.
	DynamicDestinationTranslation NatRuleDynamicDestinationTranslationPtrInput
	// The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Folder pulumi.StringPtrInput
	// The source security zone(s).
	Froms pulumi.StringArrayInput
	// The GroupTag param.
	GroupTag pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
	NatType pulumi.StringPtrInput
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position pulumi.StringPtrInput
	// The Service param.
	Service pulumi.StringPtrInput
	// The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Snippet pulumi.StringPtrInput
	// The SourceTranslation param.
	SourceTranslation NatRuleSourceTranslationPtrInput
	// The source address(es).
	Sources pulumi.StringArrayInput
	// The Tags param.
	Tags pulumi.StringArrayInput
	// The Target param.
	Target NatRuleTargetPtrInput
	Tfid   pulumi.StringPtrInput
	// The ToInterface param.
	ToInterface pulumi.StringPtrInput
	// The destination security zone(s).
	Tos pulumi.StringArrayInput
}

func (NatRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*natRuleState)(nil)).Elem()
}

type natRuleArgs struct {
	// The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
	ActiveActiveDeviceBinding *string `pulumi:"activeActiveDeviceBinding"`
	// The Description param.
	Description *string `pulumi:"description"`
	// Static destination translation parameter.
	DestinationTranslation *NatRuleDestinationTranslation `pulumi:"destinationTranslation"`
	// The destination address(es).
	Destinations []string `pulumi:"destinations"`
	// The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Device *string `pulumi:"device"`
	// The Disabled param.
	Disabled *bool `pulumi:"disabled"`
	// Dynamic destination translation parameter.
	DynamicDestinationTranslation *NatRuleDynamicDestinationTranslation `pulumi:"dynamicDestinationTranslation"`
	// The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Folder *string `pulumi:"folder"`
	// The source security zone(s).
	Froms []string `pulumi:"froms"`
	// The GroupTag param.
	GroupTag *string `pulumi:"groupTag"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
	NatType *string `pulumi:"natType"`
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position *string `pulumi:"position"`
	// The Service param.
	Service string `pulumi:"service"`
	// The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Snippet *string `pulumi:"snippet"`
	// The SourceTranslation param.
	SourceTranslation *NatRuleSourceTranslation `pulumi:"sourceTranslation"`
	// The source address(es).
	Sources []string `pulumi:"sources"`
	// The Tags param.
	Tags []string `pulumi:"tags"`
	// The Target param.
	Target *NatRuleTarget `pulumi:"target"`
	// The ToInterface param.
	ToInterface *string `pulumi:"toInterface"`
	// The destination security zone(s).
	Tos []string `pulumi:"tos"`
}

// The set of arguments for constructing a NatRule resource.
type NatRuleArgs struct {
	// The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
	ActiveActiveDeviceBinding pulumi.StringPtrInput
	// The Description param.
	Description pulumi.StringPtrInput
	// Static destination translation parameter.
	DestinationTranslation NatRuleDestinationTranslationPtrInput
	// The destination address(es).
	Destinations pulumi.StringArrayInput
	// The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Device pulumi.StringPtrInput
	// The Disabled param.
	Disabled pulumi.BoolPtrInput
	// Dynamic destination translation parameter.
	DynamicDestinationTranslation NatRuleDynamicDestinationTranslationPtrInput
	// The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Folder pulumi.StringPtrInput
	// The source security zone(s).
	Froms pulumi.StringArrayInput
	// The GroupTag param.
	GroupTag pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
	NatType pulumi.StringPtrInput
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position pulumi.StringPtrInput
	// The Service param.
	Service pulumi.StringInput
	// The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
	Snippet pulumi.StringPtrInput
	// The SourceTranslation param.
	SourceTranslation NatRuleSourceTranslationPtrInput
	// The source address(es).
	Sources pulumi.StringArrayInput
	// The Tags param.
	Tags pulumi.StringArrayInput
	// The Target param.
	Target NatRuleTargetPtrInput
	// The ToInterface param.
	ToInterface pulumi.StringPtrInput
	// The destination security zone(s).
	Tos pulumi.StringArrayInput
}

func (NatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*natRuleArgs)(nil)).Elem()
}

type NatRuleInput interface {
	pulumi.Input

	ToNatRuleOutput() NatRuleOutput
	ToNatRuleOutputWithContext(ctx context.Context) NatRuleOutput
}

func (*NatRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NatRule)(nil)).Elem()
}

func (i *NatRule) ToNatRuleOutput() NatRuleOutput {
	return i.ToNatRuleOutputWithContext(context.Background())
}

func (i *NatRule) ToNatRuleOutputWithContext(ctx context.Context) NatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleOutput)
}

// NatRuleArrayInput is an input type that accepts NatRuleArray and NatRuleArrayOutput values.
// You can construct a concrete instance of `NatRuleArrayInput` via:
//
//	NatRuleArray{ NatRuleArgs{...} }
type NatRuleArrayInput interface {
	pulumi.Input

	ToNatRuleArrayOutput() NatRuleArrayOutput
	ToNatRuleArrayOutputWithContext(context.Context) NatRuleArrayOutput
}

type NatRuleArray []NatRuleInput

func (NatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NatRule)(nil)).Elem()
}

func (i NatRuleArray) ToNatRuleArrayOutput() NatRuleArrayOutput {
	return i.ToNatRuleArrayOutputWithContext(context.Background())
}

func (i NatRuleArray) ToNatRuleArrayOutputWithContext(ctx context.Context) NatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleArrayOutput)
}

// NatRuleMapInput is an input type that accepts NatRuleMap and NatRuleMapOutput values.
// You can construct a concrete instance of `NatRuleMapInput` via:
//
//	NatRuleMap{ "key": NatRuleArgs{...} }
type NatRuleMapInput interface {
	pulumi.Input

	ToNatRuleMapOutput() NatRuleMapOutput
	ToNatRuleMapOutputWithContext(context.Context) NatRuleMapOutput
}

type NatRuleMap map[string]NatRuleInput

func (NatRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NatRule)(nil)).Elem()
}

func (i NatRuleMap) ToNatRuleMapOutput() NatRuleMapOutput {
	return i.ToNatRuleMapOutputWithContext(context.Background())
}

func (i NatRuleMap) ToNatRuleMapOutputWithContext(ctx context.Context) NatRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleMapOutput)
}

type NatRuleOutput struct{ *pulumi.OutputState }

func (NatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatRule)(nil)).Elem()
}

func (o NatRuleOutput) ToNatRuleOutput() NatRuleOutput {
	return o
}

func (o NatRuleOutput) ToNatRuleOutputWithContext(ctx context.Context) NatRuleOutput {
	return o
}

// The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
func (o NatRuleOutput) ActiveActiveDeviceBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.ActiveActiveDeviceBinding }).(pulumi.StringPtrOutput)
}

// The Description param.
func (o NatRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Static destination translation parameter.
func (o NatRuleOutput) DestinationTranslation() NatRuleDestinationTranslationPtrOutput {
	return o.ApplyT(func(v *NatRule) NatRuleDestinationTranslationPtrOutput { return v.DestinationTranslation }).(NatRuleDestinationTranslationPtrOutput)
}

// The destination address(es).
func (o NatRuleOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringArrayOutput { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
func (o NatRuleOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Disabled param.
func (o NatRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Dynamic destination translation parameter.
func (o NatRuleOutput) DynamicDestinationTranslation() NatRuleDynamicDestinationTranslationPtrOutput {
	return o.ApplyT(func(v *NatRule) NatRuleDynamicDestinationTranslationPtrOutput { return v.DynamicDestinationTranslation }).(NatRuleDynamicDestinationTranslationPtrOutput)
}

// The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
func (o NatRuleOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The source security zone(s).
func (o NatRuleOutput) Froms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringArrayOutput { return v.Froms }).(pulumi.StringArrayOutput)
}

// The GroupTag param.
func (o NatRuleOutput) GroupTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.GroupTag }).(pulumi.StringPtrOutput)
}

// The Name param.
func (o NatRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
func (o NatRuleOutput) NatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.NatType }).(pulumi.StringPtrOutput)
}

// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
func (o NatRuleOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringOutput { return v.Position }).(pulumi.StringOutput)
}

// The Service param.
func (o NatRuleOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
func (o NatRuleOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

// The SourceTranslation param.
func (o NatRuleOutput) SourceTranslation() NatRuleSourceTranslationPtrOutput {
	return o.ApplyT(func(v *NatRule) NatRuleSourceTranslationPtrOutput { return v.SourceTranslation }).(NatRuleSourceTranslationPtrOutput)
}

// The source address(es).
func (o NatRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringArrayOutput { return v.Sources }).(pulumi.StringArrayOutput)
}

// The Tags param.
func (o NatRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The Target param.
func (o NatRuleOutput) Target() NatRuleTargetPtrOutput {
	return o.ApplyT(func(v *NatRule) NatRuleTargetPtrOutput { return v.Target }).(NatRuleTargetPtrOutput)
}

func (o NatRuleOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// The ToInterface param.
func (o NatRuleOutput) ToInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringPtrOutput { return v.ToInterface }).(pulumi.StringPtrOutput)
}

// The destination security zone(s).
func (o NatRuleOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatRule) pulumi.StringArrayOutput { return v.Tos }).(pulumi.StringArrayOutput)
}

type NatRuleArrayOutput struct{ *pulumi.OutputState }

func (NatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NatRule)(nil)).Elem()
}

func (o NatRuleArrayOutput) ToNatRuleArrayOutput() NatRuleArrayOutput {
	return o
}

func (o NatRuleArrayOutput) ToNatRuleArrayOutputWithContext(ctx context.Context) NatRuleArrayOutput {
	return o
}

func (o NatRuleArrayOutput) Index(i pulumi.IntInput) NatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NatRule {
		return vs[0].([]*NatRule)[vs[1].(int)]
	}).(NatRuleOutput)
}

type NatRuleMapOutput struct{ *pulumi.OutputState }

func (NatRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NatRule)(nil)).Elem()
}

func (o NatRuleMapOutput) ToNatRuleMapOutput() NatRuleMapOutput {
	return o
}

func (o NatRuleMapOutput) ToNatRuleMapOutputWithContext(ctx context.Context) NatRuleMapOutput {
	return o
}

func (o NatRuleMapOutput) MapIndex(k pulumi.StringInput) NatRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NatRule {
		return vs[0].(map[string]*NatRule)[vs[1].(string)]
	}).(NatRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NatRuleInput)(nil)).Elem(), &NatRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatRuleArrayInput)(nil)).Elem(), NatRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatRuleMapInput)(nil)).Elem(), NatRuleMap{})
	pulumi.RegisterOutputType(NatRuleOutput{})
	pulumi.RegisterOutputType(NatRuleArrayOutput{})
	pulumi.RegisterOutputType(NatRuleMapOutput{})
}
