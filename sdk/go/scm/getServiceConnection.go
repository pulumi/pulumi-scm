// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupServiceConnection(ctx, &scm.LookupServiceConnectionArgs{
//				Id:     "1234-56-789",
//				Folder: pulumi.StringRef("Service Connections"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceConnection(ctx *pulumi.Context, args *LookupServiceConnectionArgs, opts ...pulumi.InvokeOption) (*LookupServiceConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceConnectionResult
	err := ctx.Invoke("scm:index/getServiceConnection:getServiceConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceConnection.
type LookupServiceConnectionArgs struct {
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getServiceConnection.
type LookupServiceConnectionResult struct {
	// The BackupSC param.
	BackupSC string `pulumi:"backupSC"`
	// The BgpPeer param.
	BgpPeer GetServiceConnectionBgpPeer `pulumi:"bgpPeer"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder string `pulumi:"folder"`
	// The Id param.
	Id string `pulumi:"id"`
	// The IpsecTunnel param.
	IpsecTunnel string `pulumi:"ipsecTunnel"`
	// The Name param.
	Name string `pulumi:"name"`
	// The NatPool param.
	NatPool string `pulumi:"natPool"`
	// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
	NoExportCommunity string `pulumi:"noExportCommunity"`
	// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
	OnboardingType string `pulumi:"onboardingType"`
	// The Protocol param.
	Protocol GetServiceConnectionProtocol `pulumi:"protocol"`
	// The Qos param.
	Qos GetServiceConnectionQos `pulumi:"qos"`
	// The Region param.
	Region string `pulumi:"region"`
	// The SecondaryIpsecTunnel param.
	SecondaryIpsecTunnel string `pulumi:"secondaryIpsecTunnel"`
	// The SourceNat param.
	SourceNat bool `pulumi:"sourceNat"`
	// The Subnets param.
	Subnets []string `pulumi:"subnets"`
	Tfid    string   `pulumi:"tfid"`
}

func LookupServiceConnectionOutput(ctx *pulumi.Context, args LookupServiceConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupServiceConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceConnectionResultOutput, error) {
			args := v.(LookupServiceConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scm:index/getServiceConnection:getServiceConnection", args, LookupServiceConnectionResultOutput{}, options).(LookupServiceConnectionResultOutput), nil
		}).(LookupServiceConnectionResultOutput)
}

// A collection of arguments for invoking getServiceConnection.
type LookupServiceConnectionOutputArgs struct {
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupServiceConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getServiceConnection.
type LookupServiceConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupServiceConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceConnectionResult)(nil)).Elem()
}

func (o LookupServiceConnectionResultOutput) ToLookupServiceConnectionResultOutput() LookupServiceConnectionResultOutput {
	return o
}

func (o LookupServiceConnectionResultOutput) ToLookupServiceConnectionResultOutputWithContext(ctx context.Context) LookupServiceConnectionResultOutput {
	return o
}

// The BackupSC param.
func (o LookupServiceConnectionResultOutput) BackupSC() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.BackupSC }).(pulumi.StringOutput)
}

// The BgpPeer param.
func (o LookupServiceConnectionResultOutput) BgpPeer() GetServiceConnectionBgpPeerOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) GetServiceConnectionBgpPeer { return v.BgpPeer }).(GetServiceConnectionBgpPeerOutput)
}

// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
func (o LookupServiceConnectionResultOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.Folder }).(pulumi.StringOutput)
}

// The Id param.
func (o LookupServiceConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IpsecTunnel param.
func (o LookupServiceConnectionResultOutput) IpsecTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.IpsecTunnel }).(pulumi.StringOutput)
}

// The Name param.
func (o LookupServiceConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The NatPool param.
func (o LookupServiceConnectionResultOutput) NatPool() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.NatPool }).(pulumi.StringOutput)
}

// The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
func (o LookupServiceConnectionResultOutput) NoExportCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.NoExportCommunity }).(pulumi.StringOutput)
}

// The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
func (o LookupServiceConnectionResultOutput) OnboardingType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.OnboardingType }).(pulumi.StringOutput)
}

// The Protocol param.
func (o LookupServiceConnectionResultOutput) Protocol() GetServiceConnectionProtocolOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) GetServiceConnectionProtocol { return v.Protocol }).(GetServiceConnectionProtocolOutput)
}

// The Qos param.
func (o LookupServiceConnectionResultOutput) Qos() GetServiceConnectionQosOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) GetServiceConnectionQos { return v.Qos }).(GetServiceConnectionQosOutput)
}

// The Region param.
func (o LookupServiceConnectionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.Region }).(pulumi.StringOutput)
}

// The SecondaryIpsecTunnel param.
func (o LookupServiceConnectionResultOutput) SecondaryIpsecTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.SecondaryIpsecTunnel }).(pulumi.StringOutput)
}

// The SourceNat param.
func (o LookupServiceConnectionResultOutput) SourceNat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) bool { return v.SourceNat }).(pulumi.BoolOutput)
}

// The Subnets param.
func (o LookupServiceConnectionResultOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LookupServiceConnectionResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionResult) string { return v.Tfid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceConnectionResultOutput{})
}
