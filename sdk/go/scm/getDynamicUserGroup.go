// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupDynamicUserGroup(ctx, &scm.LookupDynamicUserGroupArgs{
//				Id: "1234-56-789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDynamicUserGroup(ctx *pulumi.Context, args *LookupDynamicUserGroupArgs, opts ...pulumi.InvokeOption) (*LookupDynamicUserGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDynamicUserGroupResult
	err := ctx.Invoke("scm:index/getDynamicUserGroup:getDynamicUserGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDynamicUserGroup.
type LookupDynamicUserGroupArgs struct {
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getDynamicUserGroup.
type LookupDynamicUserGroupResult struct {
	// The Description param. String length must not exceed 1023 characters.
	Description string `pulumi:"description"`
	// tag-based filter. String length must not exceed 2047 characters.
	Filter string `pulumi:"filter"`
	// The Id param.
	Id string `pulumi:"id"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name string `pulumi:"name"`
	// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags []string `pulumi:"tags"`
	Tfid string   `pulumi:"tfid"`
}

func LookupDynamicUserGroupOutput(ctx *pulumi.Context, args LookupDynamicUserGroupOutputArgs, opts ...pulumi.InvokeOption) LookupDynamicUserGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDynamicUserGroupResultOutput, error) {
			args := v.(LookupDynamicUserGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scm:index/getDynamicUserGroup:getDynamicUserGroup", args, LookupDynamicUserGroupResultOutput{}, options).(LookupDynamicUserGroupResultOutput), nil
		}).(LookupDynamicUserGroupResultOutput)
}

// A collection of arguments for invoking getDynamicUserGroup.
type LookupDynamicUserGroupOutputArgs struct {
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDynamicUserGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDynamicUserGroupArgs)(nil)).Elem()
}

// A collection of values returned by getDynamicUserGroup.
type LookupDynamicUserGroupResultOutput struct{ *pulumi.OutputState }

func (LookupDynamicUserGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDynamicUserGroupResult)(nil)).Elem()
}

func (o LookupDynamicUserGroupResultOutput) ToLookupDynamicUserGroupResultOutput() LookupDynamicUserGroupResultOutput {
	return o
}

func (o LookupDynamicUserGroupResultOutput) ToLookupDynamicUserGroupResultOutputWithContext(ctx context.Context) LookupDynamicUserGroupResultOutput {
	return o
}

// The Description param. String length must not exceed 1023 characters.
func (o LookupDynamicUserGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicUserGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// tag-based filter. String length must not exceed 2047 characters.
func (o LookupDynamicUserGroupResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicUserGroupResult) string { return v.Filter }).(pulumi.StringOutput)
}

// The Id param.
func (o LookupDynamicUserGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicUserGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o LookupDynamicUserGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicUserGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
func (o LookupDynamicUserGroupResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDynamicUserGroupResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupDynamicUserGroupResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicUserGroupResult) string { return v.Tfid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDynamicUserGroupResultOutput{})
}
