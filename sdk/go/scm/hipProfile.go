// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewHipProfile(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type HipProfile struct {
	pulumi.CustomResourceState

	// The Description param. String length must not exceed 255 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Match param. String length must not exceed 2048 characters.
	Match pulumi.StringOutput `pulumi:"match"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewHipProfile registers a new resource with the given unique name, arguments, and options.
func NewHipProfile(ctx *pulumi.Context,
	name string, args *HipProfileArgs, opts ...pulumi.ResourceOption) (*HipProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HipProfile
	err := ctx.RegisterResource("scm:index/hipProfile:HipProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHipProfile gets an existing HipProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHipProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HipProfileState, opts ...pulumi.ResourceOption) (*HipProfile, error) {
	var resource HipProfile
	err := ctx.ReadResource("scm:index/hipProfile:HipProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HipProfile resources.
type hipProfileState struct {
	// The Description param. String length must not exceed 255 characters.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Match param. String length must not exceed 2048 characters.
	Match *string `pulumi:"match"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type HipProfileState struct {
	// The Description param. String length must not exceed 255 characters.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Match param. String length must not exceed 2048 characters.
	Match pulumi.StringPtrInput
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (HipProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*hipProfileState)(nil)).Elem()
}

type hipProfileArgs struct {
	// The Description param. String length must not exceed 255 characters.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Match param. String length must not exceed 2048 characters.
	Match string `pulumi:"match"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a HipProfile resource.
type HipProfileArgs struct {
	// The Description param. String length must not exceed 255 characters.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Match param. String length must not exceed 2048 characters.
	Match pulumi.StringInput
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (HipProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hipProfileArgs)(nil)).Elem()
}

type HipProfileInput interface {
	pulumi.Input

	ToHipProfileOutput() HipProfileOutput
	ToHipProfileOutputWithContext(ctx context.Context) HipProfileOutput
}

func (*HipProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**HipProfile)(nil)).Elem()
}

func (i *HipProfile) ToHipProfileOutput() HipProfileOutput {
	return i.ToHipProfileOutputWithContext(context.Background())
}

func (i *HipProfile) ToHipProfileOutputWithContext(ctx context.Context) HipProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HipProfileOutput)
}

// HipProfileArrayInput is an input type that accepts HipProfileArray and HipProfileArrayOutput values.
// You can construct a concrete instance of `HipProfileArrayInput` via:
//
//	HipProfileArray{ HipProfileArgs{...} }
type HipProfileArrayInput interface {
	pulumi.Input

	ToHipProfileArrayOutput() HipProfileArrayOutput
	ToHipProfileArrayOutputWithContext(context.Context) HipProfileArrayOutput
}

type HipProfileArray []HipProfileInput

func (HipProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HipProfile)(nil)).Elem()
}

func (i HipProfileArray) ToHipProfileArrayOutput() HipProfileArrayOutput {
	return i.ToHipProfileArrayOutputWithContext(context.Background())
}

func (i HipProfileArray) ToHipProfileArrayOutputWithContext(ctx context.Context) HipProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HipProfileArrayOutput)
}

// HipProfileMapInput is an input type that accepts HipProfileMap and HipProfileMapOutput values.
// You can construct a concrete instance of `HipProfileMapInput` via:
//
//	HipProfileMap{ "key": HipProfileArgs{...} }
type HipProfileMapInput interface {
	pulumi.Input

	ToHipProfileMapOutput() HipProfileMapOutput
	ToHipProfileMapOutputWithContext(context.Context) HipProfileMapOutput
}

type HipProfileMap map[string]HipProfileInput

func (HipProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HipProfile)(nil)).Elem()
}

func (i HipProfileMap) ToHipProfileMapOutput() HipProfileMapOutput {
	return i.ToHipProfileMapOutputWithContext(context.Background())
}

func (i HipProfileMap) ToHipProfileMapOutputWithContext(ctx context.Context) HipProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HipProfileMapOutput)
}

type HipProfileOutput struct{ *pulumi.OutputState }

func (HipProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HipProfile)(nil)).Elem()
}

func (o HipProfileOutput) ToHipProfileOutput() HipProfileOutput {
	return o
}

func (o HipProfileOutput) ToHipProfileOutputWithContext(ctx context.Context) HipProfileOutput {
	return o
}

// The Description param. String length must not exceed 255 characters.
func (o HipProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Device param.
func (o HipProfileOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o HipProfileOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Match param. String length must not exceed 2048 characters.
func (o HipProfileOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringOutput { return v.Match }).(pulumi.StringOutput)
}

// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
func (o HipProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o HipProfileOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o HipProfileOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *HipProfile) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type HipProfileArrayOutput struct{ *pulumi.OutputState }

func (HipProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HipProfile)(nil)).Elem()
}

func (o HipProfileArrayOutput) ToHipProfileArrayOutput() HipProfileArrayOutput {
	return o
}

func (o HipProfileArrayOutput) ToHipProfileArrayOutputWithContext(ctx context.Context) HipProfileArrayOutput {
	return o
}

func (o HipProfileArrayOutput) Index(i pulumi.IntInput) HipProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HipProfile {
		return vs[0].([]*HipProfile)[vs[1].(int)]
	}).(HipProfileOutput)
}

type HipProfileMapOutput struct{ *pulumi.OutputState }

func (HipProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HipProfile)(nil)).Elem()
}

func (o HipProfileMapOutput) ToHipProfileMapOutput() HipProfileMapOutput {
	return o
}

func (o HipProfileMapOutput) ToHipProfileMapOutputWithContext(ctx context.Context) HipProfileMapOutput {
	return o
}

func (o HipProfileMapOutput) MapIndex(k pulumi.StringInput) HipProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HipProfile {
		return vs[0].(map[string]*HipProfile)[vs[1].(string)]
	}).(HipProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HipProfileInput)(nil)).Elem(), &HipProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*HipProfileArrayInput)(nil)).Elem(), HipProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HipProfileMapInput)(nil)).Elem(), HipProfileMap{})
	pulumi.RegisterOutputType(HipProfileOutput{})
	pulumi.RegisterOutputType(HipProfileArrayOutput{})
	pulumi.RegisterOutputType(HipProfileMapOutput{})
}
