// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.LookupIpsecTunnel(ctx, &scm.LookupIpsecTunnelArgs{
//				Id: "1234-56-789",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIpsecTunnel(ctx *pulumi.Context, args *LookupIpsecTunnelArgs, opts ...pulumi.InvokeOption) (*LookupIpsecTunnelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpsecTunnelResult
	err := ctx.Invoke("scm:index/getIpsecTunnel:getIpsecTunnel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpsecTunnel.
type LookupIpsecTunnelArgs struct {
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Id param.
	Id string `pulumi:"id"`
}

// A collection of values returned by getIpsecTunnel.
type LookupIpsecTunnelResult struct {
	// Enable Anti-Replay check on this tunnel.
	AntiReplay bool `pulumi:"antiReplay"`
	// The AutoKey param.
	AutoKey GetIpsecTunnelAutoKey `pulumi:"autoKey"`
	// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
	CopyTos bool `pulumi:"copyTos"`
	// allow GRE over IPSec. Default: `false`.
	EnableGreEncapsulation bool `pulumi:"enableGreEncapsulation"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Id param.
	Id string `pulumi:"id"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name string `pulumi:"name"`
	Tfid string `pulumi:"tfid"`
	// The TunnelMonitor param.
	TunnelMonitor GetIpsecTunnelTunnelMonitor `pulumi:"tunnelMonitor"`
}

func LookupIpsecTunnelOutput(ctx *pulumi.Context, args LookupIpsecTunnelOutputArgs, opts ...pulumi.InvokeOption) LookupIpsecTunnelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpsecTunnelResultOutput, error) {
			args := v.(LookupIpsecTunnelArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupIpsecTunnelResult
			secret, err := ctx.InvokePackageRaw("scm:index/getIpsecTunnel:getIpsecTunnel", args, &rv, "", opts...)
			if err != nil {
				return LookupIpsecTunnelResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupIpsecTunnelResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupIpsecTunnelResultOutput), nil
			}
			return output, nil
		}).(LookupIpsecTunnelResultOutput)
}

// A collection of arguments for invoking getIpsecTunnel.
type LookupIpsecTunnelOutputArgs struct {
	// The Folder param.
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// The Id param.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIpsecTunnelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpsecTunnelArgs)(nil)).Elem()
}

// A collection of values returned by getIpsecTunnel.
type LookupIpsecTunnelResultOutput struct{ *pulumi.OutputState }

func (LookupIpsecTunnelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpsecTunnelResult)(nil)).Elem()
}

func (o LookupIpsecTunnelResultOutput) ToLookupIpsecTunnelResultOutput() LookupIpsecTunnelResultOutput {
	return o
}

func (o LookupIpsecTunnelResultOutput) ToLookupIpsecTunnelResultOutputWithContext(ctx context.Context) LookupIpsecTunnelResultOutput {
	return o
}

// Enable Anti-Replay check on this tunnel.
func (o LookupIpsecTunnelResultOutput) AntiReplay() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) bool { return v.AntiReplay }).(pulumi.BoolOutput)
}

// The AutoKey param.
func (o LookupIpsecTunnelResultOutput) AutoKey() GetIpsecTunnelAutoKeyOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) GetIpsecTunnelAutoKey { return v.AutoKey }).(GetIpsecTunnelAutoKeyOutput)
}

// Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
func (o LookupIpsecTunnelResultOutput) CopyTos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) bool { return v.CopyTos }).(pulumi.BoolOutput)
}

// allow GRE over IPSec. Default: `false`.
func (o LookupIpsecTunnelResultOutput) EnableGreEncapsulation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) bool { return v.EnableGreEncapsulation }).(pulumi.BoolOutput)
}

// The Folder param.
func (o LookupIpsecTunnelResultOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Id param.
func (o LookupIpsecTunnelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o LookupIpsecTunnelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupIpsecTunnelResultOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) string { return v.Tfid }).(pulumi.StringOutput)
}

// The TunnelMonitor param.
func (o LookupIpsecTunnelResultOutput) TunnelMonitor() GetIpsecTunnelTunnelMonitorOutput {
	return o.ApplyT(func(v LookupIpsecTunnelResult) GetIpsecTunnelTunnelMonitor { return v.TunnelMonitor }).(GetIpsecTunnelTunnelMonitorOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpsecTunnelResultOutput{})
}
