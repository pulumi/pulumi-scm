// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewIpsecCryptoProfile(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type IpsecCryptoProfile struct {
	pulumi.CustomResourceState

	// The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
	Ah IpsecCryptoProfileAhPtrOutput `pulumi:"ah"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
	DhGroup pulumi.StringOutput `pulumi:"dhGroup"`
	// The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
	Esp IpsecCryptoProfileEspPtrOutput `pulumi:"esp"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Lifesize param.
	Lifesize IpsecCryptoProfileLifesizePtrOutput `pulumi:"lifesize"`
	// The Lifetime param.
	Lifetime IpsecCryptoProfileLifetimeOutput `pulumi:"lifetime"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewIpsecCryptoProfile registers a new resource with the given unique name, arguments, and options.
func NewIpsecCryptoProfile(ctx *pulumi.Context,
	name string, args *IpsecCryptoProfileArgs, opts ...pulumi.ResourceOption) (*IpsecCryptoProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Lifetime == nil {
		return nil, errors.New("invalid value for required argument 'Lifetime'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpsecCryptoProfile
	err := ctx.RegisterResource("scm:index/ipsecCryptoProfile:IpsecCryptoProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpsecCryptoProfile gets an existing IpsecCryptoProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpsecCryptoProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpsecCryptoProfileState, opts ...pulumi.ResourceOption) (*IpsecCryptoProfile, error) {
	var resource IpsecCryptoProfile
	err := ctx.ReadResource("scm:index/ipsecCryptoProfile:IpsecCryptoProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpsecCryptoProfile resources.
type ipsecCryptoProfileState struct {
	// The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
	Ah *IpsecCryptoProfileAh `pulumi:"ah"`
	// The Device param.
	Device *string `pulumi:"device"`
	// phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
	DhGroup *string `pulumi:"dhGroup"`
	// The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
	Esp *IpsecCryptoProfileEsp `pulumi:"esp"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Lifesize param.
	Lifesize *IpsecCryptoProfileLifesize `pulumi:"lifesize"`
	// The Lifetime param.
	Lifetime *IpsecCryptoProfileLifetime `pulumi:"lifetime"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type IpsecCryptoProfileState struct {
	// The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
	Ah IpsecCryptoProfileAhPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
	DhGroup pulumi.StringPtrInput
	// The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
	Esp IpsecCryptoProfileEspPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Lifesize param.
	Lifesize IpsecCryptoProfileLifesizePtrInput
	// The Lifetime param.
	Lifetime IpsecCryptoProfileLifetimePtrInput
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (IpsecCryptoProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsecCryptoProfileState)(nil)).Elem()
}

type ipsecCryptoProfileArgs struct {
	// The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
	Ah *IpsecCryptoProfileAh `pulumi:"ah"`
	// The Device param.
	Device *string `pulumi:"device"`
	// phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
	DhGroup *string `pulumi:"dhGroup"`
	// The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
	Esp *IpsecCryptoProfileEsp `pulumi:"esp"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Lifesize param.
	Lifesize *IpsecCryptoProfileLifesize `pulumi:"lifesize"`
	// The Lifetime param.
	Lifetime IpsecCryptoProfileLifetime `pulumi:"lifetime"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a IpsecCryptoProfile resource.
type IpsecCryptoProfileArgs struct {
	// The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
	Ah IpsecCryptoProfileAhPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
	DhGroup pulumi.StringPtrInput
	// The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
	Esp IpsecCryptoProfileEspPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Lifesize param.
	Lifesize IpsecCryptoProfileLifesizePtrInput
	// The Lifetime param.
	Lifetime IpsecCryptoProfileLifetimeInput
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (IpsecCryptoProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsecCryptoProfileArgs)(nil)).Elem()
}

type IpsecCryptoProfileInput interface {
	pulumi.Input

	ToIpsecCryptoProfileOutput() IpsecCryptoProfileOutput
	ToIpsecCryptoProfileOutputWithContext(ctx context.Context) IpsecCryptoProfileOutput
}

func (*IpsecCryptoProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsecCryptoProfile)(nil)).Elem()
}

func (i *IpsecCryptoProfile) ToIpsecCryptoProfileOutput() IpsecCryptoProfileOutput {
	return i.ToIpsecCryptoProfileOutputWithContext(context.Background())
}

func (i *IpsecCryptoProfile) ToIpsecCryptoProfileOutputWithContext(ctx context.Context) IpsecCryptoProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecCryptoProfileOutput)
}

// IpsecCryptoProfileArrayInput is an input type that accepts IpsecCryptoProfileArray and IpsecCryptoProfileArrayOutput values.
// You can construct a concrete instance of `IpsecCryptoProfileArrayInput` via:
//
//	IpsecCryptoProfileArray{ IpsecCryptoProfileArgs{...} }
type IpsecCryptoProfileArrayInput interface {
	pulumi.Input

	ToIpsecCryptoProfileArrayOutput() IpsecCryptoProfileArrayOutput
	ToIpsecCryptoProfileArrayOutputWithContext(context.Context) IpsecCryptoProfileArrayOutput
}

type IpsecCryptoProfileArray []IpsecCryptoProfileInput

func (IpsecCryptoProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsecCryptoProfile)(nil)).Elem()
}

func (i IpsecCryptoProfileArray) ToIpsecCryptoProfileArrayOutput() IpsecCryptoProfileArrayOutput {
	return i.ToIpsecCryptoProfileArrayOutputWithContext(context.Background())
}

func (i IpsecCryptoProfileArray) ToIpsecCryptoProfileArrayOutputWithContext(ctx context.Context) IpsecCryptoProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecCryptoProfileArrayOutput)
}

// IpsecCryptoProfileMapInput is an input type that accepts IpsecCryptoProfileMap and IpsecCryptoProfileMapOutput values.
// You can construct a concrete instance of `IpsecCryptoProfileMapInput` via:
//
//	IpsecCryptoProfileMap{ "key": IpsecCryptoProfileArgs{...} }
type IpsecCryptoProfileMapInput interface {
	pulumi.Input

	ToIpsecCryptoProfileMapOutput() IpsecCryptoProfileMapOutput
	ToIpsecCryptoProfileMapOutputWithContext(context.Context) IpsecCryptoProfileMapOutput
}

type IpsecCryptoProfileMap map[string]IpsecCryptoProfileInput

func (IpsecCryptoProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsecCryptoProfile)(nil)).Elem()
}

func (i IpsecCryptoProfileMap) ToIpsecCryptoProfileMapOutput() IpsecCryptoProfileMapOutput {
	return i.ToIpsecCryptoProfileMapOutputWithContext(context.Background())
}

func (i IpsecCryptoProfileMap) ToIpsecCryptoProfileMapOutputWithContext(ctx context.Context) IpsecCryptoProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecCryptoProfileMapOutput)
}

type IpsecCryptoProfileOutput struct{ *pulumi.OutputState }

func (IpsecCryptoProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsecCryptoProfile)(nil)).Elem()
}

func (o IpsecCryptoProfileOutput) ToIpsecCryptoProfileOutput() IpsecCryptoProfileOutput {
	return o
}

func (o IpsecCryptoProfileOutput) ToIpsecCryptoProfileOutputWithContext(ctx context.Context) IpsecCryptoProfileOutput {
	return o
}

// The Ah param. Ensure that only one of the following is specified: `ah`, `esp`
func (o IpsecCryptoProfileOutput) Ah() IpsecCryptoProfileAhPtrOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) IpsecCryptoProfileAhPtrOutput { return v.Ah }).(IpsecCryptoProfileAhPtrOutput)
}

// The Device param.
func (o IpsecCryptoProfileOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
func (o IpsecCryptoProfileOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) pulumi.StringOutput { return v.DhGroup }).(pulumi.StringOutput)
}

// The Esp param. Ensure that only one of the following is specified: `ah`, `esp`
func (o IpsecCryptoProfileOutput) Esp() IpsecCryptoProfileEspPtrOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) IpsecCryptoProfileEspPtrOutput { return v.Esp }).(IpsecCryptoProfileEspPtrOutput)
}

// The Folder param.
func (o IpsecCryptoProfileOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Lifesize param.
func (o IpsecCryptoProfileOutput) Lifesize() IpsecCryptoProfileLifesizePtrOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) IpsecCryptoProfileLifesizePtrOutput { return v.Lifesize }).(IpsecCryptoProfileLifesizePtrOutput)
}

// The Lifetime param.
func (o IpsecCryptoProfileOutput) Lifetime() IpsecCryptoProfileLifetimeOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) IpsecCryptoProfileLifetimeOutput { return v.Lifetime }).(IpsecCryptoProfileLifetimeOutput)
}

// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
func (o IpsecCryptoProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o IpsecCryptoProfileOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o IpsecCryptoProfileOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsecCryptoProfile) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type IpsecCryptoProfileArrayOutput struct{ *pulumi.OutputState }

func (IpsecCryptoProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsecCryptoProfile)(nil)).Elem()
}

func (o IpsecCryptoProfileArrayOutput) ToIpsecCryptoProfileArrayOutput() IpsecCryptoProfileArrayOutput {
	return o
}

func (o IpsecCryptoProfileArrayOutput) ToIpsecCryptoProfileArrayOutputWithContext(ctx context.Context) IpsecCryptoProfileArrayOutput {
	return o
}

func (o IpsecCryptoProfileArrayOutput) Index(i pulumi.IntInput) IpsecCryptoProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpsecCryptoProfile {
		return vs[0].([]*IpsecCryptoProfile)[vs[1].(int)]
	}).(IpsecCryptoProfileOutput)
}

type IpsecCryptoProfileMapOutput struct{ *pulumi.OutputState }

func (IpsecCryptoProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsecCryptoProfile)(nil)).Elem()
}

func (o IpsecCryptoProfileMapOutput) ToIpsecCryptoProfileMapOutput() IpsecCryptoProfileMapOutput {
	return o
}

func (o IpsecCryptoProfileMapOutput) ToIpsecCryptoProfileMapOutputWithContext(ctx context.Context) IpsecCryptoProfileMapOutput {
	return o
}

func (o IpsecCryptoProfileMapOutput) MapIndex(k pulumi.StringInput) IpsecCryptoProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpsecCryptoProfile {
		return vs[0].(map[string]*IpsecCryptoProfile)[vs[1].(string)]
	}).(IpsecCryptoProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecCryptoProfileInput)(nil)).Elem(), &IpsecCryptoProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecCryptoProfileArrayInput)(nil)).Elem(), IpsecCryptoProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsecCryptoProfileMapInput)(nil)).Elem(), IpsecCryptoProfileMap{})
	pulumi.RegisterOutputType(IpsecCryptoProfileOutput{})
	pulumi.RegisterOutputType(IpsecCryptoProfileArrayOutput{})
	pulumi.RegisterOutputType(IpsecCryptoProfileMapOutput{})
}
