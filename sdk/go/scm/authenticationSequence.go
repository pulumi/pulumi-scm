// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewAuthenticationSequence(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AuthenticationSequence struct {
	pulumi.CustomResourceState

	// The AuthenticationProfiles param.
	AuthenticationProfiles pulumi.StringArrayOutput `pulumi:"authenticationProfiles"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
	// The UseDomainFindProfile param. Default: `true`.
	UseDomainFindProfile pulumi.BoolOutput `pulumi:"useDomainFindProfile"`
}

// NewAuthenticationSequence registers a new resource with the given unique name, arguments, and options.
func NewAuthenticationSequence(ctx *pulumi.Context,
	name string, args *AuthenticationSequenceArgs, opts ...pulumi.ResourceOption) (*AuthenticationSequence, error) {
	if args == nil {
		args = &AuthenticationSequenceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthenticationSequence
	err := ctx.RegisterResource("scm:index/authenticationSequence:AuthenticationSequence", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthenticationSequence gets an existing AuthenticationSequence resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthenticationSequence(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthenticationSequenceState, opts ...pulumi.ResourceOption) (*AuthenticationSequence, error) {
	var resource AuthenticationSequence
	err := ctx.ReadResource("scm:index/authenticationSequence:AuthenticationSequence", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthenticationSequence resources.
type authenticationSequenceState struct {
	// The AuthenticationProfiles param.
	AuthenticationProfiles []string `pulumi:"authenticationProfiles"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
	// The UseDomainFindProfile param. Default: `true`.
	UseDomainFindProfile *bool `pulumi:"useDomainFindProfile"`
}

type AuthenticationSequenceState struct {
	// The AuthenticationProfiles param.
	AuthenticationProfiles pulumi.StringArrayInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
	// The UseDomainFindProfile param. Default: `true`.
	UseDomainFindProfile pulumi.BoolPtrInput
}

func (AuthenticationSequenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationSequenceState)(nil)).Elem()
}

type authenticationSequenceArgs struct {
	// The AuthenticationProfiles param.
	AuthenticationProfiles []string `pulumi:"authenticationProfiles"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// The UseDomainFindProfile param. Default: `true`.
	UseDomainFindProfile *bool `pulumi:"useDomainFindProfile"`
}

// The set of arguments for constructing a AuthenticationSequence resource.
type AuthenticationSequenceArgs struct {
	// The AuthenticationProfiles param.
	AuthenticationProfiles pulumi.StringArrayInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// The UseDomainFindProfile param. Default: `true`.
	UseDomainFindProfile pulumi.BoolPtrInput
}

func (AuthenticationSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationSequenceArgs)(nil)).Elem()
}

type AuthenticationSequenceInput interface {
	pulumi.Input

	ToAuthenticationSequenceOutput() AuthenticationSequenceOutput
	ToAuthenticationSequenceOutputWithContext(ctx context.Context) AuthenticationSequenceOutput
}

func (*AuthenticationSequence) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSequence)(nil)).Elem()
}

func (i *AuthenticationSequence) ToAuthenticationSequenceOutput() AuthenticationSequenceOutput {
	return i.ToAuthenticationSequenceOutputWithContext(context.Background())
}

func (i *AuthenticationSequence) ToAuthenticationSequenceOutputWithContext(ctx context.Context) AuthenticationSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSequenceOutput)
}

// AuthenticationSequenceArrayInput is an input type that accepts AuthenticationSequenceArray and AuthenticationSequenceArrayOutput values.
// You can construct a concrete instance of `AuthenticationSequenceArrayInput` via:
//
//	AuthenticationSequenceArray{ AuthenticationSequenceArgs{...} }
type AuthenticationSequenceArrayInput interface {
	pulumi.Input

	ToAuthenticationSequenceArrayOutput() AuthenticationSequenceArrayOutput
	ToAuthenticationSequenceArrayOutputWithContext(context.Context) AuthenticationSequenceArrayOutput
}

type AuthenticationSequenceArray []AuthenticationSequenceInput

func (AuthenticationSequenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthenticationSequence)(nil)).Elem()
}

func (i AuthenticationSequenceArray) ToAuthenticationSequenceArrayOutput() AuthenticationSequenceArrayOutput {
	return i.ToAuthenticationSequenceArrayOutputWithContext(context.Background())
}

func (i AuthenticationSequenceArray) ToAuthenticationSequenceArrayOutputWithContext(ctx context.Context) AuthenticationSequenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSequenceArrayOutput)
}

// AuthenticationSequenceMapInput is an input type that accepts AuthenticationSequenceMap and AuthenticationSequenceMapOutput values.
// You can construct a concrete instance of `AuthenticationSequenceMapInput` via:
//
//	AuthenticationSequenceMap{ "key": AuthenticationSequenceArgs{...} }
type AuthenticationSequenceMapInput interface {
	pulumi.Input

	ToAuthenticationSequenceMapOutput() AuthenticationSequenceMapOutput
	ToAuthenticationSequenceMapOutputWithContext(context.Context) AuthenticationSequenceMapOutput
}

type AuthenticationSequenceMap map[string]AuthenticationSequenceInput

func (AuthenticationSequenceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthenticationSequence)(nil)).Elem()
}

func (i AuthenticationSequenceMap) ToAuthenticationSequenceMapOutput() AuthenticationSequenceMapOutput {
	return i.ToAuthenticationSequenceMapOutputWithContext(context.Background())
}

func (i AuthenticationSequenceMap) ToAuthenticationSequenceMapOutputWithContext(ctx context.Context) AuthenticationSequenceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSequenceMapOutput)
}

type AuthenticationSequenceOutput struct{ *pulumi.OutputState }

func (AuthenticationSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSequence)(nil)).Elem()
}

func (o AuthenticationSequenceOutput) ToAuthenticationSequenceOutput() AuthenticationSequenceOutput {
	return o
}

func (o AuthenticationSequenceOutput) ToAuthenticationSequenceOutputWithContext(ctx context.Context) AuthenticationSequenceOutput {
	return o
}

// The AuthenticationProfiles param.
func (o AuthenticationSequenceOutput) AuthenticationProfiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.StringArrayOutput { return v.AuthenticationProfiles }).(pulumi.StringArrayOutput)
}

// The Device param.
func (o AuthenticationSequenceOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o AuthenticationSequenceOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Name param.
func (o AuthenticationSequenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o AuthenticationSequenceOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o AuthenticationSequenceOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// The UseDomainFindProfile param. Default: `true`.
func (o AuthenticationSequenceOutput) UseDomainFindProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v *AuthenticationSequence) pulumi.BoolOutput { return v.UseDomainFindProfile }).(pulumi.BoolOutput)
}

type AuthenticationSequenceArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationSequenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthenticationSequence)(nil)).Elem()
}

func (o AuthenticationSequenceArrayOutput) ToAuthenticationSequenceArrayOutput() AuthenticationSequenceArrayOutput {
	return o
}

func (o AuthenticationSequenceArrayOutput) ToAuthenticationSequenceArrayOutputWithContext(ctx context.Context) AuthenticationSequenceArrayOutput {
	return o
}

func (o AuthenticationSequenceArrayOutput) Index(i pulumi.IntInput) AuthenticationSequenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthenticationSequence {
		return vs[0].([]*AuthenticationSequence)[vs[1].(int)]
	}).(AuthenticationSequenceOutput)
}

type AuthenticationSequenceMapOutput struct{ *pulumi.OutputState }

func (AuthenticationSequenceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthenticationSequence)(nil)).Elem()
}

func (o AuthenticationSequenceMapOutput) ToAuthenticationSequenceMapOutput() AuthenticationSequenceMapOutput {
	return o
}

func (o AuthenticationSequenceMapOutput) ToAuthenticationSequenceMapOutputWithContext(ctx context.Context) AuthenticationSequenceMapOutput {
	return o
}

func (o AuthenticationSequenceMapOutput) MapIndex(k pulumi.StringInput) AuthenticationSequenceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthenticationSequence {
		return vs[0].(map[string]*AuthenticationSequence)[vs[1].(string)]
	}).(AuthenticationSequenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSequenceInput)(nil)).Elem(), &AuthenticationSequence{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSequenceArrayInput)(nil)).Elem(), AuthenticationSequenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationSequenceMapInput)(nil)).Elem(), AuthenticationSequenceMap{})
	pulumi.RegisterOutputType(AuthenticationSequenceOutput{})
	pulumi.RegisterOutputType(AuthenticationSequenceArrayOutput{})
	pulumi.RegisterOutputType(AuthenticationSequenceMapOutput{})
}
