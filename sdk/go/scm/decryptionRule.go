// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewDecryptionRule(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DecryptionRule struct {
	pulumi.CustomResourceState

	// The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
	Action pulumi.StringOutput `pulumi:"action"`
	// The Categories param.
	Categories pulumi.StringArrayOutput `pulumi:"categories"`
	// The Description param.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The DestinationHips param.
	DestinationHips pulumi.StringArrayOutput `pulumi:"destinationHips"`
	// The Destinations param.
	Destinations pulumi.StringArrayOutput `pulumi:"destinations"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Disabled param.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Froms param.
	Froms pulumi.StringArrayOutput `pulumi:"froms"`
	// The LogFail param.
	LogFail pulumi.BoolPtrOutput `pulumi:"logFail"`
	// The LogSetting param.
	LogSetting pulumi.StringPtrOutput `pulumi:"logSetting"`
	// The LogSuccess param.
	LogSuccess pulumi.BoolPtrOutput `pulumi:"logSuccess"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The NegateDestination param.
	NegateDestination pulumi.BoolPtrOutput `pulumi:"negateDestination"`
	// The NegateSource param.
	NegateSource pulumi.BoolPtrOutput `pulumi:"negateSource"`
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position pulumi.StringOutput `pulumi:"position"`
	// The Profile param.
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// The Services param.
	Services pulumi.StringArrayOutput `pulumi:"services"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	// The SourceHips param.
	SourceHips pulumi.StringArrayOutput `pulumi:"sourceHips"`
	// The SourceUsers param.
	SourceUsers pulumi.StringArrayOutput `pulumi:"sourceUsers"`
	// The Sources param.
	Sources pulumi.StringArrayOutput `pulumi:"sources"`
	// The Tags param.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	Tfid pulumi.StringOutput      `pulumi:"tfid"`
	// The Tos param.
	Tos pulumi.StringArrayOutput `pulumi:"tos"`
	// The Type param.
	Type DecryptionRuleTypePtrOutput `pulumi:"type"`
}

// NewDecryptionRule registers a new resource with the given unique name, arguments, and options.
func NewDecryptionRule(ctx *pulumi.Context,
	name string, args *DecryptionRuleArgs, opts ...pulumi.ResourceOption) (*DecryptionRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Categories == nil {
		return nil, errors.New("invalid value for required argument 'Categories'")
	}
	if args.Destinations == nil {
		return nil, errors.New("invalid value for required argument 'Destinations'")
	}
	if args.Froms == nil {
		return nil, errors.New("invalid value for required argument 'Froms'")
	}
	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.SourceUsers == nil {
		return nil, errors.New("invalid value for required argument 'SourceUsers'")
	}
	if args.Sources == nil {
		return nil, errors.New("invalid value for required argument 'Sources'")
	}
	if args.Tos == nil {
		return nil, errors.New("invalid value for required argument 'Tos'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DecryptionRule
	err := ctx.RegisterResource("scm:index/decryptionRule:DecryptionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDecryptionRule gets an existing DecryptionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDecryptionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DecryptionRuleState, opts ...pulumi.ResourceOption) (*DecryptionRule, error) {
	var resource DecryptionRule
	err := ctx.ReadResource("scm:index/decryptionRule:DecryptionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DecryptionRule resources.
type decryptionRuleState struct {
	// The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
	Action *string `pulumi:"action"`
	// The Categories param.
	Categories []string `pulumi:"categories"`
	// The Description param.
	Description *string `pulumi:"description"`
	// The DestinationHips param.
	DestinationHips []string `pulumi:"destinationHips"`
	// The Destinations param.
	Destinations []string `pulumi:"destinations"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Disabled param.
	Disabled *bool `pulumi:"disabled"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Froms param.
	Froms []string `pulumi:"froms"`
	// The LogFail param.
	LogFail *bool `pulumi:"logFail"`
	// The LogSetting param.
	LogSetting *string `pulumi:"logSetting"`
	// The LogSuccess param.
	LogSuccess *bool `pulumi:"logSuccess"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The NegateDestination param.
	NegateDestination *bool `pulumi:"negateDestination"`
	// The NegateSource param.
	NegateSource *bool `pulumi:"negateSource"`
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position *string `pulumi:"position"`
	// The Profile param.
	Profile *string `pulumi:"profile"`
	// The Services param.
	Services []string `pulumi:"services"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// The SourceHips param.
	SourceHips []string `pulumi:"sourceHips"`
	// The SourceUsers param.
	SourceUsers []string `pulumi:"sourceUsers"`
	// The Sources param.
	Sources []string `pulumi:"sources"`
	// The Tags param.
	Tags []string `pulumi:"tags"`
	Tfid *string  `pulumi:"tfid"`
	// The Tos param.
	Tos []string `pulumi:"tos"`
	// The Type param.
	Type *DecryptionRuleType `pulumi:"type"`
}

type DecryptionRuleState struct {
	// The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
	Action pulumi.StringPtrInput
	// The Categories param.
	Categories pulumi.StringArrayInput
	// The Description param.
	Description pulumi.StringPtrInput
	// The DestinationHips param.
	DestinationHips pulumi.StringArrayInput
	// The Destinations param.
	Destinations pulumi.StringArrayInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Disabled param.
	Disabled pulumi.BoolPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Froms param.
	Froms pulumi.StringArrayInput
	// The LogFail param.
	LogFail pulumi.BoolPtrInput
	// The LogSetting param.
	LogSetting pulumi.StringPtrInput
	// The LogSuccess param.
	LogSuccess pulumi.BoolPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The NegateDestination param.
	NegateDestination pulumi.BoolPtrInput
	// The NegateSource param.
	NegateSource pulumi.BoolPtrInput
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position pulumi.StringPtrInput
	// The Profile param.
	Profile pulumi.StringPtrInput
	// The Services param.
	Services pulumi.StringArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// The SourceHips param.
	SourceHips pulumi.StringArrayInput
	// The SourceUsers param.
	SourceUsers pulumi.StringArrayInput
	// The Sources param.
	Sources pulumi.StringArrayInput
	// The Tags param.
	Tags pulumi.StringArrayInput
	Tfid pulumi.StringPtrInput
	// The Tos param.
	Tos pulumi.StringArrayInput
	// The Type param.
	Type DecryptionRuleTypePtrInput
}

func (DecryptionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*decryptionRuleState)(nil)).Elem()
}

type decryptionRuleArgs struct {
	// The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
	Action string `pulumi:"action"`
	// The Categories param.
	Categories []string `pulumi:"categories"`
	// The Description param.
	Description *string `pulumi:"description"`
	// The DestinationHips param.
	DestinationHips []string `pulumi:"destinationHips"`
	// The Destinations param.
	Destinations []string `pulumi:"destinations"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Disabled param.
	Disabled *bool `pulumi:"disabled"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Froms param.
	Froms []string `pulumi:"froms"`
	// The LogFail param.
	LogFail *bool `pulumi:"logFail"`
	// The LogSetting param.
	LogSetting *string `pulumi:"logSetting"`
	// The LogSuccess param.
	LogSuccess *bool `pulumi:"logSuccess"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The NegateDestination param.
	NegateDestination *bool `pulumi:"negateDestination"`
	// The NegateSource param.
	NegateSource *bool `pulumi:"negateSource"`
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position *string `pulumi:"position"`
	// The Profile param.
	Profile *string `pulumi:"profile"`
	// The Services param.
	Services []string `pulumi:"services"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// The SourceHips param.
	SourceHips []string `pulumi:"sourceHips"`
	// The SourceUsers param.
	SourceUsers []string `pulumi:"sourceUsers"`
	// The Sources param.
	Sources []string `pulumi:"sources"`
	// The Tags param.
	Tags []string `pulumi:"tags"`
	// The Tos param.
	Tos []string `pulumi:"tos"`
	// The Type param.
	Type *DecryptionRuleType `pulumi:"type"`
}

// The set of arguments for constructing a DecryptionRule resource.
type DecryptionRuleArgs struct {
	// The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
	Action pulumi.StringInput
	// The Categories param.
	Categories pulumi.StringArrayInput
	// The Description param.
	Description pulumi.StringPtrInput
	// The DestinationHips param.
	DestinationHips pulumi.StringArrayInput
	// The Destinations param.
	Destinations pulumi.StringArrayInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Disabled param.
	Disabled pulumi.BoolPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Froms param.
	Froms pulumi.StringArrayInput
	// The LogFail param.
	LogFail pulumi.BoolPtrInput
	// The LogSetting param.
	LogSetting pulumi.StringPtrInput
	// The LogSuccess param.
	LogSuccess pulumi.BoolPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The NegateDestination param.
	NegateDestination pulumi.BoolPtrInput
	// The NegateSource param.
	NegateSource pulumi.BoolPtrInput
	// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
	Position pulumi.StringPtrInput
	// The Profile param.
	Profile pulumi.StringPtrInput
	// The Services param.
	Services pulumi.StringArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// The SourceHips param.
	SourceHips pulumi.StringArrayInput
	// The SourceUsers param.
	SourceUsers pulumi.StringArrayInput
	// The Sources param.
	Sources pulumi.StringArrayInput
	// The Tags param.
	Tags pulumi.StringArrayInput
	// The Tos param.
	Tos pulumi.StringArrayInput
	// The Type param.
	Type DecryptionRuleTypePtrInput
}

func (DecryptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*decryptionRuleArgs)(nil)).Elem()
}

type DecryptionRuleInput interface {
	pulumi.Input

	ToDecryptionRuleOutput() DecryptionRuleOutput
	ToDecryptionRuleOutputWithContext(ctx context.Context) DecryptionRuleOutput
}

func (*DecryptionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**DecryptionRule)(nil)).Elem()
}

func (i *DecryptionRule) ToDecryptionRuleOutput() DecryptionRuleOutput {
	return i.ToDecryptionRuleOutputWithContext(context.Background())
}

func (i *DecryptionRule) ToDecryptionRuleOutputWithContext(ctx context.Context) DecryptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptionRuleOutput)
}

// DecryptionRuleArrayInput is an input type that accepts DecryptionRuleArray and DecryptionRuleArrayOutput values.
// You can construct a concrete instance of `DecryptionRuleArrayInput` via:
//
//	DecryptionRuleArray{ DecryptionRuleArgs{...} }
type DecryptionRuleArrayInput interface {
	pulumi.Input

	ToDecryptionRuleArrayOutput() DecryptionRuleArrayOutput
	ToDecryptionRuleArrayOutputWithContext(context.Context) DecryptionRuleArrayOutput
}

type DecryptionRuleArray []DecryptionRuleInput

func (DecryptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DecryptionRule)(nil)).Elem()
}

func (i DecryptionRuleArray) ToDecryptionRuleArrayOutput() DecryptionRuleArrayOutput {
	return i.ToDecryptionRuleArrayOutputWithContext(context.Background())
}

func (i DecryptionRuleArray) ToDecryptionRuleArrayOutputWithContext(ctx context.Context) DecryptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptionRuleArrayOutput)
}

// DecryptionRuleMapInput is an input type that accepts DecryptionRuleMap and DecryptionRuleMapOutput values.
// You can construct a concrete instance of `DecryptionRuleMapInput` via:
//
//	DecryptionRuleMap{ "key": DecryptionRuleArgs{...} }
type DecryptionRuleMapInput interface {
	pulumi.Input

	ToDecryptionRuleMapOutput() DecryptionRuleMapOutput
	ToDecryptionRuleMapOutputWithContext(context.Context) DecryptionRuleMapOutput
}

type DecryptionRuleMap map[string]DecryptionRuleInput

func (DecryptionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DecryptionRule)(nil)).Elem()
}

func (i DecryptionRuleMap) ToDecryptionRuleMapOutput() DecryptionRuleMapOutput {
	return i.ToDecryptionRuleMapOutputWithContext(context.Background())
}

func (i DecryptionRuleMap) ToDecryptionRuleMapOutputWithContext(ctx context.Context) DecryptionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptionRuleMapOutput)
}

type DecryptionRuleOutput struct{ *pulumi.OutputState }

func (DecryptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DecryptionRule)(nil)).Elem()
}

func (o DecryptionRuleOutput) ToDecryptionRuleOutput() DecryptionRuleOutput {
	return o
}

func (o DecryptionRuleOutput) ToDecryptionRuleOutputWithContext(ctx context.Context) DecryptionRuleOutput {
	return o
}

// The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
func (o DecryptionRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The Categories param.
func (o DecryptionRuleOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Categories }).(pulumi.StringArrayOutput)
}

// The Description param.
func (o DecryptionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The DestinationHips param.
func (o DecryptionRuleOutput) DestinationHips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.DestinationHips }).(pulumi.StringArrayOutput)
}

// The Destinations param.
func (o DecryptionRuleOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The Device param.
func (o DecryptionRuleOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Disabled param.
func (o DecryptionRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The Folder param.
func (o DecryptionRuleOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Froms param.
func (o DecryptionRuleOutput) Froms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Froms }).(pulumi.StringArrayOutput)
}

// The LogFail param.
func (o DecryptionRuleOutput) LogFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.BoolPtrOutput { return v.LogFail }).(pulumi.BoolPtrOutput)
}

// The LogSetting param.
func (o DecryptionRuleOutput) LogSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringPtrOutput { return v.LogSetting }).(pulumi.StringPtrOutput)
}

// The LogSuccess param.
func (o DecryptionRuleOutput) LogSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.BoolPtrOutput { return v.LogSuccess }).(pulumi.BoolPtrOutput)
}

// The Name param.
func (o DecryptionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The NegateDestination param.
func (o DecryptionRuleOutput) NegateDestination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.BoolPtrOutput { return v.NegateDestination }).(pulumi.BoolPtrOutput)
}

// The NegateSource param.
func (o DecryptionRuleOutput) NegateSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.BoolPtrOutput { return v.NegateSource }).(pulumi.BoolPtrOutput)
}

// The Position param. String must be one of these: `"pre"`, `"post"`. Default: `"pre"`.
func (o DecryptionRuleOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringOutput { return v.Position }).(pulumi.StringOutput)
}

// The Profile param.
func (o DecryptionRuleOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// The Services param.
func (o DecryptionRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Services }).(pulumi.StringArrayOutput)
}

// The Snippet param.
func (o DecryptionRuleOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

// The SourceHips param.
func (o DecryptionRuleOutput) SourceHips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.SourceHips }).(pulumi.StringArrayOutput)
}

// The SourceUsers param.
func (o DecryptionRuleOutput) SourceUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.SourceUsers }).(pulumi.StringArrayOutput)
}

// The Sources param.
func (o DecryptionRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Sources }).(pulumi.StringArrayOutput)
}

// The Tags param.
func (o DecryptionRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o DecryptionRuleOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// The Tos param.
func (o DecryptionRuleOutput) Tos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DecryptionRule) pulumi.StringArrayOutput { return v.Tos }).(pulumi.StringArrayOutput)
}

// The Type param.
func (o DecryptionRuleOutput) Type() DecryptionRuleTypePtrOutput {
	return o.ApplyT(func(v *DecryptionRule) DecryptionRuleTypePtrOutput { return v.Type }).(DecryptionRuleTypePtrOutput)
}

type DecryptionRuleArrayOutput struct{ *pulumi.OutputState }

func (DecryptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DecryptionRule)(nil)).Elem()
}

func (o DecryptionRuleArrayOutput) ToDecryptionRuleArrayOutput() DecryptionRuleArrayOutput {
	return o
}

func (o DecryptionRuleArrayOutput) ToDecryptionRuleArrayOutputWithContext(ctx context.Context) DecryptionRuleArrayOutput {
	return o
}

func (o DecryptionRuleArrayOutput) Index(i pulumi.IntInput) DecryptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DecryptionRule {
		return vs[0].([]*DecryptionRule)[vs[1].(int)]
	}).(DecryptionRuleOutput)
}

type DecryptionRuleMapOutput struct{ *pulumi.OutputState }

func (DecryptionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DecryptionRule)(nil)).Elem()
}

func (o DecryptionRuleMapOutput) ToDecryptionRuleMapOutput() DecryptionRuleMapOutput {
	return o
}

func (o DecryptionRuleMapOutput) ToDecryptionRuleMapOutputWithContext(ctx context.Context) DecryptionRuleMapOutput {
	return o
}

func (o DecryptionRuleMapOutput) MapIndex(k pulumi.StringInput) DecryptionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DecryptionRule {
		return vs[0].(map[string]*DecryptionRule)[vs[1].(string)]
	}).(DecryptionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptionRuleInput)(nil)).Elem(), &DecryptionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptionRuleArrayInput)(nil)).Elem(), DecryptionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptionRuleMapInput)(nil)).Elem(), DecryptionRuleMap{})
	pulumi.RegisterOutputType(DecryptionRuleOutput{})
	pulumi.RegisterOutputType(DecryptionRuleArrayOutput{})
	pulumi.RegisterOutputType(DecryptionRuleMapOutput{})
}
