// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewServiceConnectionGroup(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ServiceConnectionGroup struct {
	pulumi.CustomResourceState

	// The DisableSnat param.
	DisableSnat pulumi.BoolPtrOutput `pulumi:"disableSnat"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringOutput `pulumi:"folder"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The PbfOnly param.
	PbfOnly pulumi.BoolPtrOutput `pulumi:"pbfOnly"`
	// The Targets param.
	Targets pulumi.StringArrayOutput `pulumi:"targets"`
	Tfid    pulumi.StringOutput      `pulumi:"tfid"`
}

// NewServiceConnectionGroup registers a new resource with the given unique name, arguments, and options.
func NewServiceConnectionGroup(ctx *pulumi.Context,
	name string, args *ServiceConnectionGroupArgs, opts ...pulumi.ResourceOption) (*ServiceConnectionGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Targets == nil {
		return nil, errors.New("invalid value for required argument 'Targets'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceConnectionGroup
	err := ctx.RegisterResource("scm:index/serviceConnectionGroup:ServiceConnectionGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnectionGroup gets an existing ServiceConnectionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnectionGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionGroupState, opts ...pulumi.ResourceOption) (*ServiceConnectionGroup, error) {
	var resource ServiceConnectionGroup
	err := ctx.ReadResource("scm:index/serviceConnectionGroup:ServiceConnectionGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnectionGroup resources.
type serviceConnectionGroupState struct {
	// The DisableSnat param.
	DisableSnat *bool `pulumi:"disableSnat"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The PbfOnly param.
	PbfOnly *bool `pulumi:"pbfOnly"`
	// The Targets param.
	Targets []string `pulumi:"targets"`
	Tfid    *string  `pulumi:"tfid"`
}

type ServiceConnectionGroupState struct {
	// The DisableSnat param.
	DisableSnat pulumi.BoolPtrInput
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The PbfOnly param.
	PbfOnly pulumi.BoolPtrInput
	// The Targets param.
	Targets pulumi.StringArrayInput
	Tfid    pulumi.StringPtrInput
}

func (ServiceConnectionGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionGroupState)(nil)).Elem()
}

type serviceConnectionGroupArgs struct {
	// The DisableSnat param.
	DisableSnat *bool `pulumi:"disableSnat"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The PbfOnly param.
	PbfOnly *bool `pulumi:"pbfOnly"`
	// The Targets param.
	Targets []string `pulumi:"targets"`
}

// The set of arguments for constructing a ServiceConnectionGroup resource.
type ServiceConnectionGroupArgs struct {
	// The DisableSnat param.
	DisableSnat pulumi.BoolPtrInput
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The PbfOnly param.
	PbfOnly pulumi.BoolPtrInput
	// The Targets param.
	Targets pulumi.StringArrayInput
}

func (ServiceConnectionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionGroupArgs)(nil)).Elem()
}

type ServiceConnectionGroupInput interface {
	pulumi.Input

	ToServiceConnectionGroupOutput() ServiceConnectionGroupOutput
	ToServiceConnectionGroupOutputWithContext(ctx context.Context) ServiceConnectionGroupOutput
}

func (*ServiceConnectionGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionGroup)(nil)).Elem()
}

func (i *ServiceConnectionGroup) ToServiceConnectionGroupOutput() ServiceConnectionGroupOutput {
	return i.ToServiceConnectionGroupOutputWithContext(context.Background())
}

func (i *ServiceConnectionGroup) ToServiceConnectionGroupOutputWithContext(ctx context.Context) ServiceConnectionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionGroupOutput)
}

// ServiceConnectionGroupArrayInput is an input type that accepts ServiceConnectionGroupArray and ServiceConnectionGroupArrayOutput values.
// You can construct a concrete instance of `ServiceConnectionGroupArrayInput` via:
//
//	ServiceConnectionGroupArray{ ServiceConnectionGroupArgs{...} }
type ServiceConnectionGroupArrayInput interface {
	pulumi.Input

	ToServiceConnectionGroupArrayOutput() ServiceConnectionGroupArrayOutput
	ToServiceConnectionGroupArrayOutputWithContext(context.Context) ServiceConnectionGroupArrayOutput
}

type ServiceConnectionGroupArray []ServiceConnectionGroupInput

func (ServiceConnectionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceConnectionGroup)(nil)).Elem()
}

func (i ServiceConnectionGroupArray) ToServiceConnectionGroupArrayOutput() ServiceConnectionGroupArrayOutput {
	return i.ToServiceConnectionGroupArrayOutputWithContext(context.Background())
}

func (i ServiceConnectionGroupArray) ToServiceConnectionGroupArrayOutputWithContext(ctx context.Context) ServiceConnectionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionGroupArrayOutput)
}

// ServiceConnectionGroupMapInput is an input type that accepts ServiceConnectionGroupMap and ServiceConnectionGroupMapOutput values.
// You can construct a concrete instance of `ServiceConnectionGroupMapInput` via:
//
//	ServiceConnectionGroupMap{ "key": ServiceConnectionGroupArgs{...} }
type ServiceConnectionGroupMapInput interface {
	pulumi.Input

	ToServiceConnectionGroupMapOutput() ServiceConnectionGroupMapOutput
	ToServiceConnectionGroupMapOutputWithContext(context.Context) ServiceConnectionGroupMapOutput
}

type ServiceConnectionGroupMap map[string]ServiceConnectionGroupInput

func (ServiceConnectionGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceConnectionGroup)(nil)).Elem()
}

func (i ServiceConnectionGroupMap) ToServiceConnectionGroupMapOutput() ServiceConnectionGroupMapOutput {
	return i.ToServiceConnectionGroupMapOutputWithContext(context.Background())
}

func (i ServiceConnectionGroupMap) ToServiceConnectionGroupMapOutputWithContext(ctx context.Context) ServiceConnectionGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionGroupMapOutput)
}

type ServiceConnectionGroupOutput struct{ *pulumi.OutputState }

func (ServiceConnectionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionGroup)(nil)).Elem()
}

func (o ServiceConnectionGroupOutput) ToServiceConnectionGroupOutput() ServiceConnectionGroupOutput {
	return o
}

func (o ServiceConnectionGroupOutput) ToServiceConnectionGroupOutputWithContext(ctx context.Context) ServiceConnectionGroupOutput {
	return o
}

// The DisableSnat param.
func (o ServiceConnectionGroupOutput) DisableSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionGroup) pulumi.BoolPtrOutput { return v.DisableSnat }).(pulumi.BoolPtrOutput)
}

// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
func (o ServiceConnectionGroupOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionGroup) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

// The Name param.
func (o ServiceConnectionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The PbfOnly param.
func (o ServiceConnectionGroupOutput) PbfOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionGroup) pulumi.BoolPtrOutput { return v.PbfOnly }).(pulumi.BoolPtrOutput)
}

// The Targets param.
func (o ServiceConnectionGroupOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionGroup) pulumi.StringArrayOutput { return v.Targets }).(pulumi.StringArrayOutput)
}

func (o ServiceConnectionGroupOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionGroup) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type ServiceConnectionGroupArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceConnectionGroup)(nil)).Elem()
}

func (o ServiceConnectionGroupArrayOutput) ToServiceConnectionGroupArrayOutput() ServiceConnectionGroupArrayOutput {
	return o
}

func (o ServiceConnectionGroupArrayOutput) ToServiceConnectionGroupArrayOutputWithContext(ctx context.Context) ServiceConnectionGroupArrayOutput {
	return o
}

func (o ServiceConnectionGroupArrayOutput) Index(i pulumi.IntInput) ServiceConnectionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceConnectionGroup {
		return vs[0].([]*ServiceConnectionGroup)[vs[1].(int)]
	}).(ServiceConnectionGroupOutput)
}

type ServiceConnectionGroupMapOutput struct{ *pulumi.OutputState }

func (ServiceConnectionGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceConnectionGroup)(nil)).Elem()
}

func (o ServiceConnectionGroupMapOutput) ToServiceConnectionGroupMapOutput() ServiceConnectionGroupMapOutput {
	return o
}

func (o ServiceConnectionGroupMapOutput) ToServiceConnectionGroupMapOutputWithContext(ctx context.Context) ServiceConnectionGroupMapOutput {
	return o
}

func (o ServiceConnectionGroupMapOutput) MapIndex(k pulumi.StringInput) ServiceConnectionGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceConnectionGroup {
		return vs[0].(map[string]*ServiceConnectionGroup)[vs[1].(string)]
	}).(ServiceConnectionGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionGroupInput)(nil)).Elem(), &ServiceConnectionGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionGroupArrayInput)(nil)).Elem(), ServiceConnectionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionGroupMapInput)(nil)).Elem(), ServiceConnectionGroupMap{})
	pulumi.RegisterOutputType(ServiceConnectionGroupOutput{})
	pulumi.RegisterOutputType(ServiceConnectionGroupArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectionGroupMapOutput{})
}
