// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
type IkeGateway struct {
	pulumi.CustomResourceState

	// The Authentication param.
	Authentication IkeGatewayAuthenticationOutput `pulumi:"authentication"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapOutput `pulumi:"encryptedValues"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The LocalId param.
	LocalId IkeGatewayLocalIdPtrOutput `pulumi:"localId"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The PeerAddress param.
	PeerAddress IkeGatewayPeerAddressOutput `pulumi:"peerAddress"`
	// The PeerId param.
	PeerId IkeGatewayPeerIdPtrOutput `pulumi:"peerId"`
	// The Protocol param.
	Protocol IkeGatewayProtocolOutput `pulumi:"protocol"`
	// The ProtocolCommon param.
	ProtocolCommon IkeGatewayProtocolCommonPtrOutput `pulumi:"protocolCommon"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewIkeGateway registers a new resource with the given unique name, arguments, and options.
func NewIkeGateway(ctx *pulumi.Context,
	name string, args *IkeGatewayArgs, opts ...pulumi.ResourceOption) (*IkeGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.PeerAddress == nil {
		return nil, errors.New("invalid value for required argument 'PeerAddress'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"encryptedValues",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IkeGateway
	err := ctx.RegisterResource("scm:index/ikeGateway:IkeGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIkeGateway gets an existing IkeGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIkeGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IkeGatewayState, opts ...pulumi.ResourceOption) (*IkeGateway, error) {
	var resource IkeGateway
	err := ctx.ReadResource("scm:index/ikeGateway:IkeGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IkeGateway resources.
type ikeGatewayState struct {
	// The Authentication param.
	Authentication *IkeGatewayAuthentication `pulumi:"authentication"`
	// The Device param.
	Device *string `pulumi:"device"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues map[string]string `pulumi:"encryptedValues"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The LocalId param.
	LocalId *IkeGatewayLocalId `pulumi:"localId"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The PeerAddress param.
	PeerAddress *IkeGatewayPeerAddress `pulumi:"peerAddress"`
	// The PeerId param.
	PeerId *IkeGatewayPeerId `pulumi:"peerId"`
	// The Protocol param.
	Protocol *IkeGatewayProtocol `pulumi:"protocol"`
	// The ProtocolCommon param.
	ProtocolCommon *IkeGatewayProtocolCommon `pulumi:"protocolCommon"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type IkeGatewayState struct {
	// The Authentication param.
	Authentication IkeGatewayAuthenticationPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The LocalId param.
	LocalId IkeGatewayLocalIdPtrInput
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The PeerAddress param.
	PeerAddress IkeGatewayPeerAddressPtrInput
	// The PeerId param.
	PeerId IkeGatewayPeerIdPtrInput
	// The Protocol param.
	Protocol IkeGatewayProtocolPtrInput
	// The ProtocolCommon param.
	ProtocolCommon IkeGatewayProtocolCommonPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (IkeGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*ikeGatewayState)(nil)).Elem()
}

type ikeGatewayArgs struct {
	// The Authentication param.
	Authentication IkeGatewayAuthentication `pulumi:"authentication"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The LocalId param.
	LocalId *IkeGatewayLocalId `pulumi:"localId"`
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The PeerAddress param.
	PeerAddress IkeGatewayPeerAddress `pulumi:"peerAddress"`
	// The PeerId param.
	PeerId *IkeGatewayPeerId `pulumi:"peerId"`
	// The Protocol param.
	Protocol IkeGatewayProtocol `pulumi:"protocol"`
	// The ProtocolCommon param.
	ProtocolCommon *IkeGatewayProtocolCommon `pulumi:"protocolCommon"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a IkeGateway resource.
type IkeGatewayArgs struct {
	// The Authentication param.
	Authentication IkeGatewayAuthenticationInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The LocalId param.
	LocalId IkeGatewayLocalIdPtrInput
	// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The PeerAddress param.
	PeerAddress IkeGatewayPeerAddressInput
	// The PeerId param.
	PeerId IkeGatewayPeerIdPtrInput
	// The Protocol param.
	Protocol IkeGatewayProtocolInput
	// The ProtocolCommon param.
	ProtocolCommon IkeGatewayProtocolCommonPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (IkeGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ikeGatewayArgs)(nil)).Elem()
}

type IkeGatewayInput interface {
	pulumi.Input

	ToIkeGatewayOutput() IkeGatewayOutput
	ToIkeGatewayOutputWithContext(ctx context.Context) IkeGatewayOutput
}

func (*IkeGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeGateway)(nil)).Elem()
}

func (i *IkeGateway) ToIkeGatewayOutput() IkeGatewayOutput {
	return i.ToIkeGatewayOutputWithContext(context.Background())
}

func (i *IkeGateway) ToIkeGatewayOutputWithContext(ctx context.Context) IkeGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeGatewayOutput)
}

// IkeGatewayArrayInput is an input type that accepts IkeGatewayArray and IkeGatewayArrayOutput values.
// You can construct a concrete instance of `IkeGatewayArrayInput` via:
//
//	IkeGatewayArray{ IkeGatewayArgs{...} }
type IkeGatewayArrayInput interface {
	pulumi.Input

	ToIkeGatewayArrayOutput() IkeGatewayArrayOutput
	ToIkeGatewayArrayOutputWithContext(context.Context) IkeGatewayArrayOutput
}

type IkeGatewayArray []IkeGatewayInput

func (IkeGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IkeGateway)(nil)).Elem()
}

func (i IkeGatewayArray) ToIkeGatewayArrayOutput() IkeGatewayArrayOutput {
	return i.ToIkeGatewayArrayOutputWithContext(context.Background())
}

func (i IkeGatewayArray) ToIkeGatewayArrayOutputWithContext(ctx context.Context) IkeGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeGatewayArrayOutput)
}

// IkeGatewayMapInput is an input type that accepts IkeGatewayMap and IkeGatewayMapOutput values.
// You can construct a concrete instance of `IkeGatewayMapInput` via:
//
//	IkeGatewayMap{ "key": IkeGatewayArgs{...} }
type IkeGatewayMapInput interface {
	pulumi.Input

	ToIkeGatewayMapOutput() IkeGatewayMapOutput
	ToIkeGatewayMapOutputWithContext(context.Context) IkeGatewayMapOutput
}

type IkeGatewayMap map[string]IkeGatewayInput

func (IkeGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IkeGateway)(nil)).Elem()
}

func (i IkeGatewayMap) ToIkeGatewayMapOutput() IkeGatewayMapOutput {
	return i.ToIkeGatewayMapOutputWithContext(context.Background())
}

func (i IkeGatewayMap) ToIkeGatewayMapOutputWithContext(ctx context.Context) IkeGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IkeGatewayMapOutput)
}

type IkeGatewayOutput struct{ *pulumi.OutputState }

func (IkeGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IkeGateway)(nil)).Elem()
}

func (o IkeGatewayOutput) ToIkeGatewayOutput() IkeGatewayOutput {
	return o
}

func (o IkeGatewayOutput) ToIkeGatewayOutputWithContext(ctx context.Context) IkeGatewayOutput {
	return o
}

// The Authentication param.
func (o IkeGatewayOutput) Authentication() IkeGatewayAuthenticationOutput {
	return o.ApplyT(func(v *IkeGateway) IkeGatewayAuthenticationOutput { return v.Authentication }).(IkeGatewayAuthenticationOutput)
}

// The Device param.
func (o IkeGatewayOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeGateway) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// (Internal use) Encrypted values returned from the API.
func (o IkeGatewayOutput) EncryptedValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IkeGateway) pulumi.StringMapOutput { return v.EncryptedValues }).(pulumi.StringMapOutput)
}

// The Folder param.
func (o IkeGatewayOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeGateway) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The LocalId param.
func (o IkeGatewayOutput) LocalId() IkeGatewayLocalIdPtrOutput {
	return o.ApplyT(func(v *IkeGateway) IkeGatewayLocalIdPtrOutput { return v.LocalId }).(IkeGatewayLocalIdPtrOutput)
}

// Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o IkeGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IkeGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The PeerAddress param.
func (o IkeGatewayOutput) PeerAddress() IkeGatewayPeerAddressOutput {
	return o.ApplyT(func(v *IkeGateway) IkeGatewayPeerAddressOutput { return v.PeerAddress }).(IkeGatewayPeerAddressOutput)
}

// The PeerId param.
func (o IkeGatewayOutput) PeerId() IkeGatewayPeerIdPtrOutput {
	return o.ApplyT(func(v *IkeGateway) IkeGatewayPeerIdPtrOutput { return v.PeerId }).(IkeGatewayPeerIdPtrOutput)
}

// The Protocol param.
func (o IkeGatewayOutput) Protocol() IkeGatewayProtocolOutput {
	return o.ApplyT(func(v *IkeGateway) IkeGatewayProtocolOutput { return v.Protocol }).(IkeGatewayProtocolOutput)
}

// The ProtocolCommon param.
func (o IkeGatewayOutput) ProtocolCommon() IkeGatewayProtocolCommonPtrOutput {
	return o.ApplyT(func(v *IkeGateway) IkeGatewayProtocolCommonPtrOutput { return v.ProtocolCommon }).(IkeGatewayProtocolCommonPtrOutput)
}

// The Snippet param.
func (o IkeGatewayOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IkeGateway) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o IkeGatewayOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *IkeGateway) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type IkeGatewayArrayOutput struct{ *pulumi.OutputState }

func (IkeGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IkeGateway)(nil)).Elem()
}

func (o IkeGatewayArrayOutput) ToIkeGatewayArrayOutput() IkeGatewayArrayOutput {
	return o
}

func (o IkeGatewayArrayOutput) ToIkeGatewayArrayOutputWithContext(ctx context.Context) IkeGatewayArrayOutput {
	return o
}

func (o IkeGatewayArrayOutput) Index(i pulumi.IntInput) IkeGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IkeGateway {
		return vs[0].([]*IkeGateway)[vs[1].(int)]
	}).(IkeGatewayOutput)
}

type IkeGatewayMapOutput struct{ *pulumi.OutputState }

func (IkeGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IkeGateway)(nil)).Elem()
}

func (o IkeGatewayMapOutput) ToIkeGatewayMapOutput() IkeGatewayMapOutput {
	return o
}

func (o IkeGatewayMapOutput) ToIkeGatewayMapOutputWithContext(ctx context.Context) IkeGatewayMapOutput {
	return o
}

func (o IkeGatewayMapOutput) MapIndex(k pulumi.StringInput) IkeGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IkeGateway {
		return vs[0].(map[string]*IkeGateway)[vs[1].(string)]
	}).(IkeGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IkeGatewayInput)(nil)).Elem(), &IkeGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeGatewayArrayInput)(nil)).Elem(), IkeGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IkeGatewayMapInput)(nil)).Elem(), IkeGatewayMap{})
	pulumi.RegisterOutputType(IkeGatewayOutput{})
	pulumi.RegisterOutputType(IkeGatewayArrayOutput{})
	pulumi.RegisterOutputType(IkeGatewayMapOutput{})
}
