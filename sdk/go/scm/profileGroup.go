// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewProfileGroup(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ProfileGroup struct {
	pulumi.CustomResourceState

	// List of AI security profiles.
	AiSecurities pulumi.StringArrayOutput `pulumi:"aiSecurities"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// List of DNS security profiles.
	DnsSecurities pulumi.StringArrayOutput `pulumi:"dnsSecurities"`
	// List of file blocking profiles.
	FileBlockings pulumi.StringArrayOutput `pulumi:"fileBlockings"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The name of the profile group.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of HTTP header insertion profiles.
	SaasSecurities pulumi.StringArrayOutput `pulumi:"saasSecurities"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	// List of anti-spyware profiles.
	Spywares pulumi.StringArrayOutput `pulumi:"spywares"`
	Tfid     pulumi.StringOutput      `pulumi:"tfid"`
	// List of URL filtering profiles.
	UrlFilterings pulumi.StringArrayOutput `pulumi:"urlFilterings"`
	// List of anti-virus and Wildfire analysis profiles.
	VirusAndWildfireAnalyses pulumi.StringArrayOutput `pulumi:"virusAndWildfireAnalyses"`
	// List of vulnerability protection profiles.
	Vulnerabilities pulumi.StringArrayOutput `pulumi:"vulnerabilities"`
}

// NewProfileGroup registers a new resource with the given unique name, arguments, and options.
func NewProfileGroup(ctx *pulumi.Context,
	name string, args *ProfileGroupArgs, opts ...pulumi.ResourceOption) (*ProfileGroup, error) {
	if args == nil {
		args = &ProfileGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProfileGroup
	err := ctx.RegisterResource("scm:index/profileGroup:ProfileGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfileGroup gets an existing ProfileGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfileGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileGroupState, opts ...pulumi.ResourceOption) (*ProfileGroup, error) {
	var resource ProfileGroup
	err := ctx.ReadResource("scm:index/profileGroup:ProfileGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProfileGroup resources.
type profileGroupState struct {
	// List of AI security profiles.
	AiSecurities []string `pulumi:"aiSecurities"`
	// The Device param.
	Device *string `pulumi:"device"`
	// List of DNS security profiles.
	DnsSecurities []string `pulumi:"dnsSecurities"`
	// List of file blocking profiles.
	FileBlockings []string `pulumi:"fileBlockings"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The name of the profile group.
	Name *string `pulumi:"name"`
	// List of HTTP header insertion profiles.
	SaasSecurities []string `pulumi:"saasSecurities"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// List of anti-spyware profiles.
	Spywares []string `pulumi:"spywares"`
	Tfid     *string  `pulumi:"tfid"`
	// List of URL filtering profiles.
	UrlFilterings []string `pulumi:"urlFilterings"`
	// List of anti-virus and Wildfire analysis profiles.
	VirusAndWildfireAnalyses []string `pulumi:"virusAndWildfireAnalyses"`
	// List of vulnerability protection profiles.
	Vulnerabilities []string `pulumi:"vulnerabilities"`
}

type ProfileGroupState struct {
	// List of AI security profiles.
	AiSecurities pulumi.StringArrayInput
	// The Device param.
	Device pulumi.StringPtrInput
	// List of DNS security profiles.
	DnsSecurities pulumi.StringArrayInput
	// List of file blocking profiles.
	FileBlockings pulumi.StringArrayInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The name of the profile group.
	Name pulumi.StringPtrInput
	// List of HTTP header insertion profiles.
	SaasSecurities pulumi.StringArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// List of anti-spyware profiles.
	Spywares pulumi.StringArrayInput
	Tfid     pulumi.StringPtrInput
	// List of URL filtering profiles.
	UrlFilterings pulumi.StringArrayInput
	// List of anti-virus and Wildfire analysis profiles.
	VirusAndWildfireAnalyses pulumi.StringArrayInput
	// List of vulnerability protection profiles.
	Vulnerabilities pulumi.StringArrayInput
}

func (ProfileGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileGroupState)(nil)).Elem()
}

type profileGroupArgs struct {
	// List of AI security profiles.
	AiSecurities []string `pulumi:"aiSecurities"`
	// The Device param.
	Device *string `pulumi:"device"`
	// List of DNS security profiles.
	DnsSecurities []string `pulumi:"dnsSecurities"`
	// List of file blocking profiles.
	FileBlockings []string `pulumi:"fileBlockings"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The name of the profile group.
	Name *string `pulumi:"name"`
	// List of HTTP header insertion profiles.
	SaasSecurities []string `pulumi:"saasSecurities"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// List of anti-spyware profiles.
	Spywares []string `pulumi:"spywares"`
	// List of URL filtering profiles.
	UrlFilterings []string `pulumi:"urlFilterings"`
	// List of anti-virus and Wildfire analysis profiles.
	VirusAndWildfireAnalyses []string `pulumi:"virusAndWildfireAnalyses"`
	// List of vulnerability protection profiles.
	Vulnerabilities []string `pulumi:"vulnerabilities"`
}

// The set of arguments for constructing a ProfileGroup resource.
type ProfileGroupArgs struct {
	// List of AI security profiles.
	AiSecurities pulumi.StringArrayInput
	// The Device param.
	Device pulumi.StringPtrInput
	// List of DNS security profiles.
	DnsSecurities pulumi.StringArrayInput
	// List of file blocking profiles.
	FileBlockings pulumi.StringArrayInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The name of the profile group.
	Name pulumi.StringPtrInput
	// List of HTTP header insertion profiles.
	SaasSecurities pulumi.StringArrayInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// List of anti-spyware profiles.
	Spywares pulumi.StringArrayInput
	// List of URL filtering profiles.
	UrlFilterings pulumi.StringArrayInput
	// List of anti-virus and Wildfire analysis profiles.
	VirusAndWildfireAnalyses pulumi.StringArrayInput
	// List of vulnerability protection profiles.
	Vulnerabilities pulumi.StringArrayInput
}

func (ProfileGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileGroupArgs)(nil)).Elem()
}

type ProfileGroupInput interface {
	pulumi.Input

	ToProfileGroupOutput() ProfileGroupOutput
	ToProfileGroupOutputWithContext(ctx context.Context) ProfileGroupOutput
}

func (*ProfileGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileGroup)(nil)).Elem()
}

func (i *ProfileGroup) ToProfileGroupOutput() ProfileGroupOutput {
	return i.ToProfileGroupOutputWithContext(context.Background())
}

func (i *ProfileGroup) ToProfileGroupOutputWithContext(ctx context.Context) ProfileGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileGroupOutput)
}

// ProfileGroupArrayInput is an input type that accepts ProfileGroupArray and ProfileGroupArrayOutput values.
// You can construct a concrete instance of `ProfileGroupArrayInput` via:
//
//	ProfileGroupArray{ ProfileGroupArgs{...} }
type ProfileGroupArrayInput interface {
	pulumi.Input

	ToProfileGroupArrayOutput() ProfileGroupArrayOutput
	ToProfileGroupArrayOutputWithContext(context.Context) ProfileGroupArrayOutput
}

type ProfileGroupArray []ProfileGroupInput

func (ProfileGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfileGroup)(nil)).Elem()
}

func (i ProfileGroupArray) ToProfileGroupArrayOutput() ProfileGroupArrayOutput {
	return i.ToProfileGroupArrayOutputWithContext(context.Background())
}

func (i ProfileGroupArray) ToProfileGroupArrayOutputWithContext(ctx context.Context) ProfileGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileGroupArrayOutput)
}

// ProfileGroupMapInput is an input type that accepts ProfileGroupMap and ProfileGroupMapOutput values.
// You can construct a concrete instance of `ProfileGroupMapInput` via:
//
//	ProfileGroupMap{ "key": ProfileGroupArgs{...} }
type ProfileGroupMapInput interface {
	pulumi.Input

	ToProfileGroupMapOutput() ProfileGroupMapOutput
	ToProfileGroupMapOutputWithContext(context.Context) ProfileGroupMapOutput
}

type ProfileGroupMap map[string]ProfileGroupInput

func (ProfileGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfileGroup)(nil)).Elem()
}

func (i ProfileGroupMap) ToProfileGroupMapOutput() ProfileGroupMapOutput {
	return i.ToProfileGroupMapOutputWithContext(context.Background())
}

func (i ProfileGroupMap) ToProfileGroupMapOutputWithContext(ctx context.Context) ProfileGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileGroupMapOutput)
}

type ProfileGroupOutput struct{ *pulumi.OutputState }

func (ProfileGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileGroup)(nil)).Elem()
}

func (o ProfileGroupOutput) ToProfileGroupOutput() ProfileGroupOutput {
	return o
}

func (o ProfileGroupOutput) ToProfileGroupOutputWithContext(ctx context.Context) ProfileGroupOutput {
	return o
}

// List of AI security profiles.
func (o ProfileGroupOutput) AiSecurities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.AiSecurities }).(pulumi.StringArrayOutput)
}

// The Device param.
func (o ProfileGroupOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// List of DNS security profiles.
func (o ProfileGroupOutput) DnsSecurities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.DnsSecurities }).(pulumi.StringArrayOutput)
}

// List of file blocking profiles.
func (o ProfileGroupOutput) FileBlockings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.FileBlockings }).(pulumi.StringArrayOutput)
}

// The Folder param.
func (o ProfileGroupOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The name of the profile group.
func (o ProfileGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of HTTP header insertion profiles.
func (o ProfileGroupOutput) SaasSecurities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.SaasSecurities }).(pulumi.StringArrayOutput)
}

// The Snippet param.
func (o ProfileGroupOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

// List of anti-spyware profiles.
func (o ProfileGroupOutput) Spywares() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.Spywares }).(pulumi.StringArrayOutput)
}

func (o ProfileGroupOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

// List of URL filtering profiles.
func (o ProfileGroupOutput) UrlFilterings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.UrlFilterings }).(pulumi.StringArrayOutput)
}

// List of anti-virus and Wildfire analysis profiles.
func (o ProfileGroupOutput) VirusAndWildfireAnalyses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.VirusAndWildfireAnalyses }).(pulumi.StringArrayOutput)
}

// List of vulnerability protection profiles.
func (o ProfileGroupOutput) Vulnerabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileGroup) pulumi.StringArrayOutput { return v.Vulnerabilities }).(pulumi.StringArrayOutput)
}

type ProfileGroupArrayOutput struct{ *pulumi.OutputState }

func (ProfileGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfileGroup)(nil)).Elem()
}

func (o ProfileGroupArrayOutput) ToProfileGroupArrayOutput() ProfileGroupArrayOutput {
	return o
}

func (o ProfileGroupArrayOutput) ToProfileGroupArrayOutputWithContext(ctx context.Context) ProfileGroupArrayOutput {
	return o
}

func (o ProfileGroupArrayOutput) Index(i pulumi.IntInput) ProfileGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProfileGroup {
		return vs[0].([]*ProfileGroup)[vs[1].(int)]
	}).(ProfileGroupOutput)
}

type ProfileGroupMapOutput struct{ *pulumi.OutputState }

func (ProfileGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfileGroup)(nil)).Elem()
}

func (o ProfileGroupMapOutput) ToProfileGroupMapOutput() ProfileGroupMapOutput {
	return o
}

func (o ProfileGroupMapOutput) ToProfileGroupMapOutputWithContext(ctx context.Context) ProfileGroupMapOutput {
	return o
}

func (o ProfileGroupMapOutput) MapIndex(k pulumi.StringInput) ProfileGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProfileGroup {
		return vs[0].(map[string]*ProfileGroup)[vs[1].(string)]
	}).(ProfileGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileGroupInput)(nil)).Elem(), &ProfileGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileGroupArrayInput)(nil)).Elem(), ProfileGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileGroupMapInput)(nil)).Elem(), ProfileGroupMap{})
	pulumi.RegisterOutputType(ProfileGroupOutput{})
	pulumi.RegisterOutputType(ProfileGroupArrayOutput{})
	pulumi.RegisterOutputType(ProfileGroupMapOutput{})
}
