// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewLocalUser(ctx, "example", &scm.LocalUserArgs{
//				Folder:   pulumi.String("Shared"),
//				Name:     pulumi.String("user1"),
//				Password: pulumi.String("secret"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type LocalUser struct {
	pulumi.CustomResourceState

	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Disabled param.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapOutput `pulumi:"encryptedValues"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Name param. String length must not exceed 31 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Password param. String length must not exceed 63 characters.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewLocalUser registers a new resource with the given unique name, arguments, and options.
func NewLocalUser(ctx *pulumi.Context,
	name string, args *LocalUserArgs, opts ...pulumi.ResourceOption) (*LocalUser, error) {
	if args == nil {
		args = &LocalUserArgs{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"encryptedValues",
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalUser
	err := ctx.RegisterResource("scm:index/localUser:LocalUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalUser gets an existing LocalUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalUserState, opts ...pulumi.ResourceOption) (*LocalUser, error) {
	var resource LocalUser
	err := ctx.ReadResource("scm:index/localUser:LocalUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalUser resources.
type localUserState struct {
	// The Device param.
	Device *string `pulumi:"device"`
	// The Disabled param.
	Disabled *bool `pulumi:"disabled"`
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues map[string]string `pulumi:"encryptedValues"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param. String length must not exceed 31 characters.
	Name *string `pulumi:"name"`
	// The Password param. String length must not exceed 63 characters.
	Password *string `pulumi:"password"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type LocalUserState struct {
	// The Device param.
	Device pulumi.StringPtrInput
	// The Disabled param.
	Disabled pulumi.BoolPtrInput
	// (Internal use) Encrypted values returned from the API.
	EncryptedValues pulumi.StringMapInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param. String length must not exceed 31 characters.
	Name pulumi.StringPtrInput
	// The Password param. String length must not exceed 63 characters.
	Password pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (LocalUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*localUserState)(nil)).Elem()
}

type localUserArgs struct {
	// The Device param.
	Device *string `pulumi:"device"`
	// The Disabled param.
	Disabled *bool `pulumi:"disabled"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param. String length must not exceed 31 characters.
	Name *string `pulumi:"name"`
	// The Password param. String length must not exceed 63 characters.
	Password *string `pulumi:"password"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a LocalUser resource.
type LocalUserArgs struct {
	// The Device param.
	Device pulumi.StringPtrInput
	// The Disabled param.
	Disabled pulumi.BoolPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param. String length must not exceed 31 characters.
	Name pulumi.StringPtrInput
	// The Password param. String length must not exceed 63 characters.
	Password pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (LocalUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localUserArgs)(nil)).Elem()
}

type LocalUserInput interface {
	pulumi.Input

	ToLocalUserOutput() LocalUserOutput
	ToLocalUserOutputWithContext(ctx context.Context) LocalUserOutput
}

func (*LocalUser) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalUser)(nil)).Elem()
}

func (i *LocalUser) ToLocalUserOutput() LocalUserOutput {
	return i.ToLocalUserOutputWithContext(context.Background())
}

func (i *LocalUser) ToLocalUserOutputWithContext(ctx context.Context) LocalUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalUserOutput)
}

// LocalUserArrayInput is an input type that accepts LocalUserArray and LocalUserArrayOutput values.
// You can construct a concrete instance of `LocalUserArrayInput` via:
//
//	LocalUserArray{ LocalUserArgs{...} }
type LocalUserArrayInput interface {
	pulumi.Input

	ToLocalUserArrayOutput() LocalUserArrayOutput
	ToLocalUserArrayOutputWithContext(context.Context) LocalUserArrayOutput
}

type LocalUserArray []LocalUserInput

func (LocalUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalUser)(nil)).Elem()
}

func (i LocalUserArray) ToLocalUserArrayOutput() LocalUserArrayOutput {
	return i.ToLocalUserArrayOutputWithContext(context.Background())
}

func (i LocalUserArray) ToLocalUserArrayOutputWithContext(ctx context.Context) LocalUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalUserArrayOutput)
}

// LocalUserMapInput is an input type that accepts LocalUserMap and LocalUserMapOutput values.
// You can construct a concrete instance of `LocalUserMapInput` via:
//
//	LocalUserMap{ "key": LocalUserArgs{...} }
type LocalUserMapInput interface {
	pulumi.Input

	ToLocalUserMapOutput() LocalUserMapOutput
	ToLocalUserMapOutputWithContext(context.Context) LocalUserMapOutput
}

type LocalUserMap map[string]LocalUserInput

func (LocalUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalUser)(nil)).Elem()
}

func (i LocalUserMap) ToLocalUserMapOutput() LocalUserMapOutput {
	return i.ToLocalUserMapOutputWithContext(context.Background())
}

func (i LocalUserMap) ToLocalUserMapOutputWithContext(ctx context.Context) LocalUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalUserMapOutput)
}

type LocalUserOutput struct{ *pulumi.OutputState }

func (LocalUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalUser)(nil)).Elem()
}

func (o LocalUserOutput) ToLocalUserOutput() LocalUserOutput {
	return o
}

func (o LocalUserOutput) ToLocalUserOutputWithContext(ctx context.Context) LocalUserOutput {
	return o
}

// The Device param.
func (o LocalUserOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Disabled param.
func (o LocalUserOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// (Internal use) Encrypted values returned from the API.
func (o LocalUserOutput) EncryptedValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringMapOutput { return v.EncryptedValues }).(pulumi.StringMapOutput)
}

// The Folder param.
func (o LocalUserOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Name param. String length must not exceed 31 characters.
func (o LocalUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Password param. String length must not exceed 63 characters.
func (o LocalUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The Snippet param.
func (o LocalUserOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o LocalUserOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type LocalUserArrayOutput struct{ *pulumi.OutputState }

func (LocalUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalUser)(nil)).Elem()
}

func (o LocalUserArrayOutput) ToLocalUserArrayOutput() LocalUserArrayOutput {
	return o
}

func (o LocalUserArrayOutput) ToLocalUserArrayOutputWithContext(ctx context.Context) LocalUserArrayOutput {
	return o
}

func (o LocalUserArrayOutput) Index(i pulumi.IntInput) LocalUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalUser {
		return vs[0].([]*LocalUser)[vs[1].(int)]
	}).(LocalUserOutput)
}

type LocalUserMapOutput struct{ *pulumi.OutputState }

func (LocalUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalUser)(nil)).Elem()
}

func (o LocalUserMapOutput) ToLocalUserMapOutput() LocalUserMapOutput {
	return o
}

func (o LocalUserMapOutput) ToLocalUserMapOutputWithContext(ctx context.Context) LocalUserMapOutput {
	return o
}

func (o LocalUserMapOutput) MapIndex(k pulumi.StringInput) LocalUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalUser {
		return vs[0].(map[string]*LocalUser)[vs[1].(string)]
	}).(LocalUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalUserInput)(nil)).Elem(), &LocalUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalUserArrayInput)(nil)).Elem(), LocalUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalUserMapInput)(nil)).Elem(), LocalUserMap{})
	pulumi.RegisterOutputType(LocalUserOutput{})
	pulumi.RegisterOutputType(LocalUserArrayOutput{})
	pulumi.RegisterOutputType(LocalUserMapOutput{})
}
