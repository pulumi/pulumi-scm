// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewTrafficSteeringRule(ctx, "example", &scm.TrafficSteeringRuleArgs{
//				Folder: pulumi.String("Shared"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type TrafficSteeringRule struct {
	pulumi.CustomResourceState

	// The Action param.
	Action TrafficSteeringRuleActionPtrOutput `pulumi:"action"`
	// The Category param.
	Categories pulumi.StringArrayOutput `pulumi:"categories"`
	// The Destination param.
	Destinations pulumi.StringArrayOutput `pulumi:"destinations"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringOutput `pulumi:"folder"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Service param.
	Services pulumi.StringArrayOutput `pulumi:"services"`
	// The SourceUser param.
	SourceUsers pulumi.StringArrayOutput `pulumi:"sourceUsers"`
	// The Source param.
	Sources pulumi.StringArrayOutput `pulumi:"sources"`
	Tfid    pulumi.StringOutput      `pulumi:"tfid"`
}

// NewTrafficSteeringRule registers a new resource with the given unique name, arguments, and options.
func NewTrafficSteeringRule(ctx *pulumi.Context,
	name string, args *TrafficSteeringRuleArgs, opts ...pulumi.ResourceOption) (*TrafficSteeringRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Services == nil {
		return nil, errors.New("invalid value for required argument 'Services'")
	}
	if args.Sources == nil {
		return nil, errors.New("invalid value for required argument 'Sources'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficSteeringRule
	err := ctx.RegisterResource("scm:index/trafficSteeringRule:TrafficSteeringRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficSteeringRule gets an existing TrafficSteeringRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficSteeringRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficSteeringRuleState, opts ...pulumi.ResourceOption) (*TrafficSteeringRule, error) {
	var resource TrafficSteeringRule
	err := ctx.ReadResource("scm:index/trafficSteeringRule:TrafficSteeringRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficSteeringRule resources.
type trafficSteeringRuleState struct {
	// The Action param.
	Action *TrafficSteeringRuleAction `pulumi:"action"`
	// The Category param.
	Categories []string `pulumi:"categories"`
	// The Destination param.
	Destinations []string `pulumi:"destinations"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Service param.
	Services []string `pulumi:"services"`
	// The SourceUser param.
	SourceUsers []string `pulumi:"sourceUsers"`
	// The Source param.
	Sources []string `pulumi:"sources"`
	Tfid    *string  `pulumi:"tfid"`
}

type TrafficSteeringRuleState struct {
	// The Action param.
	Action TrafficSteeringRuleActionPtrInput
	// The Category param.
	Categories pulumi.StringArrayInput
	// The Destination param.
	Destinations pulumi.StringArrayInput
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Service param.
	Services pulumi.StringArrayInput
	// The SourceUser param.
	SourceUsers pulumi.StringArrayInput
	// The Source param.
	Sources pulumi.StringArrayInput
	Tfid    pulumi.StringPtrInput
}

func (TrafficSteeringRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficSteeringRuleState)(nil)).Elem()
}

type trafficSteeringRuleArgs struct {
	// The Action param.
	Action *TrafficSteeringRuleAction `pulumi:"action"`
	// The Category param.
	Categories []string `pulumi:"categories"`
	// The Destination param.
	Destinations []string `pulumi:"destinations"`
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Service param.
	Services []string `pulumi:"services"`
	// The SourceUser param.
	SourceUsers []string `pulumi:"sourceUsers"`
	// The Source param.
	Sources []string `pulumi:"sources"`
}

// The set of arguments for constructing a TrafficSteeringRule resource.
type TrafficSteeringRuleArgs struct {
	// The Action param.
	Action TrafficSteeringRuleActionPtrInput
	// The Category param.
	Categories pulumi.StringArrayInput
	// The Destination param.
	Destinations pulumi.StringArrayInput
	// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Service param.
	Services pulumi.StringArrayInput
	// The SourceUser param.
	SourceUsers pulumi.StringArrayInput
	// The Source param.
	Sources pulumi.StringArrayInput
}

func (TrafficSteeringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficSteeringRuleArgs)(nil)).Elem()
}

type TrafficSteeringRuleInput interface {
	pulumi.Input

	ToTrafficSteeringRuleOutput() TrafficSteeringRuleOutput
	ToTrafficSteeringRuleOutputWithContext(ctx context.Context) TrafficSteeringRuleOutput
}

func (*TrafficSteeringRule) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficSteeringRule)(nil)).Elem()
}

func (i *TrafficSteeringRule) ToTrafficSteeringRuleOutput() TrafficSteeringRuleOutput {
	return i.ToTrafficSteeringRuleOutputWithContext(context.Background())
}

func (i *TrafficSteeringRule) ToTrafficSteeringRuleOutputWithContext(ctx context.Context) TrafficSteeringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSteeringRuleOutput)
}

// TrafficSteeringRuleArrayInput is an input type that accepts TrafficSteeringRuleArray and TrafficSteeringRuleArrayOutput values.
// You can construct a concrete instance of `TrafficSteeringRuleArrayInput` via:
//
//	TrafficSteeringRuleArray{ TrafficSteeringRuleArgs{...} }
type TrafficSteeringRuleArrayInput interface {
	pulumi.Input

	ToTrafficSteeringRuleArrayOutput() TrafficSteeringRuleArrayOutput
	ToTrafficSteeringRuleArrayOutputWithContext(context.Context) TrafficSteeringRuleArrayOutput
}

type TrafficSteeringRuleArray []TrafficSteeringRuleInput

func (TrafficSteeringRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficSteeringRule)(nil)).Elem()
}

func (i TrafficSteeringRuleArray) ToTrafficSteeringRuleArrayOutput() TrafficSteeringRuleArrayOutput {
	return i.ToTrafficSteeringRuleArrayOutputWithContext(context.Background())
}

func (i TrafficSteeringRuleArray) ToTrafficSteeringRuleArrayOutputWithContext(ctx context.Context) TrafficSteeringRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSteeringRuleArrayOutput)
}

// TrafficSteeringRuleMapInput is an input type that accepts TrafficSteeringRuleMap and TrafficSteeringRuleMapOutput values.
// You can construct a concrete instance of `TrafficSteeringRuleMapInput` via:
//
//	TrafficSteeringRuleMap{ "key": TrafficSteeringRuleArgs{...} }
type TrafficSteeringRuleMapInput interface {
	pulumi.Input

	ToTrafficSteeringRuleMapOutput() TrafficSteeringRuleMapOutput
	ToTrafficSteeringRuleMapOutputWithContext(context.Context) TrafficSteeringRuleMapOutput
}

type TrafficSteeringRuleMap map[string]TrafficSteeringRuleInput

func (TrafficSteeringRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficSteeringRule)(nil)).Elem()
}

func (i TrafficSteeringRuleMap) ToTrafficSteeringRuleMapOutput() TrafficSteeringRuleMapOutput {
	return i.ToTrafficSteeringRuleMapOutputWithContext(context.Background())
}

func (i TrafficSteeringRuleMap) ToTrafficSteeringRuleMapOutputWithContext(ctx context.Context) TrafficSteeringRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSteeringRuleMapOutput)
}

type TrafficSteeringRuleOutput struct{ *pulumi.OutputState }

func (TrafficSteeringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficSteeringRule)(nil)).Elem()
}

func (o TrafficSteeringRuleOutput) ToTrafficSteeringRuleOutput() TrafficSteeringRuleOutput {
	return o
}

func (o TrafficSteeringRuleOutput) ToTrafficSteeringRuleOutputWithContext(ctx context.Context) TrafficSteeringRuleOutput {
	return o
}

// The Action param.
func (o TrafficSteeringRuleOutput) Action() TrafficSteeringRuleActionPtrOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) TrafficSteeringRuleActionPtrOutput { return v.Action }).(TrafficSteeringRuleActionPtrOutput)
}

// The Category param.
func (o TrafficSteeringRuleOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringArrayOutput { return v.Categories }).(pulumi.StringArrayOutput)
}

// The Destination param.
func (o TrafficSteeringRuleOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringArrayOutput { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `"Service Connections"`.
func (o TrafficSteeringRuleOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

// The Name param.
func (o TrafficSteeringRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Service param.
func (o TrafficSteeringRuleOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringArrayOutput { return v.Services }).(pulumi.StringArrayOutput)
}

// The SourceUser param.
func (o TrafficSteeringRuleOutput) SourceUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringArrayOutput { return v.SourceUsers }).(pulumi.StringArrayOutput)
}

// The Source param.
func (o TrafficSteeringRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringArrayOutput { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o TrafficSteeringRuleOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficSteeringRule) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type TrafficSteeringRuleArrayOutput struct{ *pulumi.OutputState }

func (TrafficSteeringRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficSteeringRule)(nil)).Elem()
}

func (o TrafficSteeringRuleArrayOutput) ToTrafficSteeringRuleArrayOutput() TrafficSteeringRuleArrayOutput {
	return o
}

func (o TrafficSteeringRuleArrayOutput) ToTrafficSteeringRuleArrayOutputWithContext(ctx context.Context) TrafficSteeringRuleArrayOutput {
	return o
}

func (o TrafficSteeringRuleArrayOutput) Index(i pulumi.IntInput) TrafficSteeringRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficSteeringRule {
		return vs[0].([]*TrafficSteeringRule)[vs[1].(int)]
	}).(TrafficSteeringRuleOutput)
}

type TrafficSteeringRuleMapOutput struct{ *pulumi.OutputState }

func (TrafficSteeringRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficSteeringRule)(nil)).Elem()
}

func (o TrafficSteeringRuleMapOutput) ToTrafficSteeringRuleMapOutput() TrafficSteeringRuleMapOutput {
	return o
}

func (o TrafficSteeringRuleMapOutput) ToTrafficSteeringRuleMapOutputWithContext(ctx context.Context) TrafficSteeringRuleMapOutput {
	return o
}

func (o TrafficSteeringRuleMapOutput) MapIndex(k pulumi.StringInput) TrafficSteeringRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficSteeringRule {
		return vs[0].(map[string]*TrafficSteeringRule)[vs[1].(string)]
	}).(TrafficSteeringRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficSteeringRuleInput)(nil)).Elem(), &TrafficSteeringRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficSteeringRuleArrayInput)(nil)).Elem(), TrafficSteeringRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficSteeringRuleMapInput)(nil)).Elem(), TrafficSteeringRuleMap{})
	pulumi.RegisterOutputType(TrafficSteeringRuleOutput{})
	pulumi.RegisterOutputType(TrafficSteeringRuleArrayOutput{})
	pulumi.RegisterOutputType(TrafficSteeringRuleMapOutput{})
}
