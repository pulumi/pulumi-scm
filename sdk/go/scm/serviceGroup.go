// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewServiceGroup(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ServiceGroup struct {
	pulumi.CustomResourceState

	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	// Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	Tfid pulumi.StringOutput      `pulumi:"tfid"`
}

// NewServiceGroup registers a new resource with the given unique name, arguments, and options.
func NewServiceGroup(ctx *pulumi.Context,
	name string, args *ServiceGroupArgs, opts ...pulumi.ResourceOption) (*ServiceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceGroup
	err := ctx.RegisterResource("scm:index/serviceGroup:ServiceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceGroup gets an existing ServiceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceGroupState, opts ...pulumi.ResourceOption) (*ServiceGroup, error) {
	var resource ServiceGroup
	err := ctx.ReadResource("scm:index/serviceGroup:ServiceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceGroup resources.
type serviceGroupState struct {
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
	Members []string `pulumi:"members"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags []string `pulumi:"tags"`
	Tfid *string  `pulumi:"tfid"`
}

type ServiceGroupState struct {
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
	Members pulumi.StringArrayInput
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags pulumi.StringArrayInput
	Tfid pulumi.StringPtrInput
}

func (ServiceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceGroupState)(nil)).Elem()
}

type serviceGroupArgs struct {
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
	Members []string `pulumi:"members"`
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	// Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceGroup resource.
type ServiceGroupArgs struct {
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
	Members pulumi.StringArrayInput
	// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	// Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
	Tags pulumi.StringArrayInput
}

func (ServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceGroupArgs)(nil)).Elem()
}

type ServiceGroupInput interface {
	pulumi.Input

	ToServiceGroupOutput() ServiceGroupOutput
	ToServiceGroupOutputWithContext(ctx context.Context) ServiceGroupOutput
}

func (*ServiceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGroup)(nil)).Elem()
}

func (i *ServiceGroup) ToServiceGroupOutput() ServiceGroupOutput {
	return i.ToServiceGroupOutputWithContext(context.Background())
}

func (i *ServiceGroup) ToServiceGroupOutputWithContext(ctx context.Context) ServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupOutput)
}

// ServiceGroupArrayInput is an input type that accepts ServiceGroupArray and ServiceGroupArrayOutput values.
// You can construct a concrete instance of `ServiceGroupArrayInput` via:
//
//	ServiceGroupArray{ ServiceGroupArgs{...} }
type ServiceGroupArrayInput interface {
	pulumi.Input

	ToServiceGroupArrayOutput() ServiceGroupArrayOutput
	ToServiceGroupArrayOutputWithContext(context.Context) ServiceGroupArrayOutput
}

type ServiceGroupArray []ServiceGroupInput

func (ServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceGroup)(nil)).Elem()
}

func (i ServiceGroupArray) ToServiceGroupArrayOutput() ServiceGroupArrayOutput {
	return i.ToServiceGroupArrayOutputWithContext(context.Background())
}

func (i ServiceGroupArray) ToServiceGroupArrayOutputWithContext(ctx context.Context) ServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupArrayOutput)
}

// ServiceGroupMapInput is an input type that accepts ServiceGroupMap and ServiceGroupMapOutput values.
// You can construct a concrete instance of `ServiceGroupMapInput` via:
//
//	ServiceGroupMap{ "key": ServiceGroupArgs{...} }
type ServiceGroupMapInput interface {
	pulumi.Input

	ToServiceGroupMapOutput() ServiceGroupMapOutput
	ToServiceGroupMapOutputWithContext(context.Context) ServiceGroupMapOutput
}

type ServiceGroupMap map[string]ServiceGroupInput

func (ServiceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceGroup)(nil)).Elem()
}

func (i ServiceGroupMap) ToServiceGroupMapOutput() ServiceGroupMapOutput {
	return i.ToServiceGroupMapOutputWithContext(context.Background())
}

func (i ServiceGroupMap) ToServiceGroupMapOutputWithContext(ctx context.Context) ServiceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupMapOutput)
}

type ServiceGroupOutput struct{ *pulumi.OutputState }

func (ServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGroup)(nil)).Elem()
}

func (o ServiceGroupOutput) ToServiceGroupOutput() ServiceGroupOutput {
	return o
}

func (o ServiceGroupOutput) ToServiceGroupOutputWithContext(ctx context.Context) ServiceGroupOutput {
	return o
}

// The Device param.
func (o ServiceGroupOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o ServiceGroupOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
func (o ServiceGroupOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
func (o ServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o ServiceGroupOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

// Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
func (o ServiceGroupOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ServiceGroupOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroup) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type ServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceGroup)(nil)).Elem()
}

func (o ServiceGroupArrayOutput) ToServiceGroupArrayOutput() ServiceGroupArrayOutput {
	return o
}

func (o ServiceGroupArrayOutput) ToServiceGroupArrayOutputWithContext(ctx context.Context) ServiceGroupArrayOutput {
	return o
}

func (o ServiceGroupArrayOutput) Index(i pulumi.IntInput) ServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceGroup {
		return vs[0].([]*ServiceGroup)[vs[1].(int)]
	}).(ServiceGroupOutput)
}

type ServiceGroupMapOutput struct{ *pulumi.OutputState }

func (ServiceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceGroup)(nil)).Elem()
}

func (o ServiceGroupMapOutput) ToServiceGroupMapOutput() ServiceGroupMapOutput {
	return o
}

func (o ServiceGroupMapOutput) ToServiceGroupMapOutputWithContext(ctx context.Context) ServiceGroupMapOutput {
	return o
}

func (o ServiceGroupMapOutput) MapIndex(k pulumi.StringInput) ServiceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceGroup {
		return vs[0].(map[string]*ServiceGroup)[vs[1].(string)]
	}).(ServiceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupInput)(nil)).Elem(), &ServiceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupArrayInput)(nil)).Elem(), ServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupMapInput)(nil)).Elem(), ServiceGroupMap{})
	pulumi.RegisterOutputType(ServiceGroupOutput{})
	pulumi.RegisterOutputType(ServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupMapOutput{})
}
