// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewHttpHeaderProfile(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type HttpHeaderProfile struct {
	pulumi.CustomResourceState

	// The Description param.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The HttpHeaderInsertions param.
	HttpHeaderInsertions HttpHeaderProfileHttpHeaderInsertionArrayOutput `pulumi:"httpHeaderInsertions"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewHttpHeaderProfile registers a new resource with the given unique name, arguments, and options.
func NewHttpHeaderProfile(ctx *pulumi.Context,
	name string, args *HttpHeaderProfileArgs, opts ...pulumi.ResourceOption) (*HttpHeaderProfile, error) {
	if args == nil {
		args = &HttpHeaderProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HttpHeaderProfile
	err := ctx.RegisterResource("scm:index/httpHeaderProfile:HttpHeaderProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHttpHeaderProfile gets an existing HttpHeaderProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHttpHeaderProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HttpHeaderProfileState, opts ...pulumi.ResourceOption) (*HttpHeaderProfile, error) {
	var resource HttpHeaderProfile
	err := ctx.ReadResource("scm:index/httpHeaderProfile:HttpHeaderProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HttpHeaderProfile resources.
type httpHeaderProfileState struct {
	// The Description param.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The HttpHeaderInsertions param.
	HttpHeaderInsertions []HttpHeaderProfileHttpHeaderInsertion `pulumi:"httpHeaderInsertions"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type HttpHeaderProfileState struct {
	// The Description param.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The HttpHeaderInsertions param.
	HttpHeaderInsertions HttpHeaderProfileHttpHeaderInsertionArrayInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (HttpHeaderProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*httpHeaderProfileState)(nil)).Elem()
}

type httpHeaderProfileArgs struct {
	// The Description param.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The HttpHeaderInsertions param.
	HttpHeaderInsertions []HttpHeaderProfileHttpHeaderInsertion `pulumi:"httpHeaderInsertions"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a HttpHeaderProfile resource.
type HttpHeaderProfileArgs struct {
	// The Description param.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The HttpHeaderInsertions param.
	HttpHeaderInsertions HttpHeaderProfileHttpHeaderInsertionArrayInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (HttpHeaderProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*httpHeaderProfileArgs)(nil)).Elem()
}

type HttpHeaderProfileInput interface {
	pulumi.Input

	ToHttpHeaderProfileOutput() HttpHeaderProfileOutput
	ToHttpHeaderProfileOutputWithContext(ctx context.Context) HttpHeaderProfileOutput
}

func (*HttpHeaderProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpHeaderProfile)(nil)).Elem()
}

func (i *HttpHeaderProfile) ToHttpHeaderProfileOutput() HttpHeaderProfileOutput {
	return i.ToHttpHeaderProfileOutputWithContext(context.Background())
}

func (i *HttpHeaderProfile) ToHttpHeaderProfileOutputWithContext(ctx context.Context) HttpHeaderProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpHeaderProfileOutput)
}

// HttpHeaderProfileArrayInput is an input type that accepts HttpHeaderProfileArray and HttpHeaderProfileArrayOutput values.
// You can construct a concrete instance of `HttpHeaderProfileArrayInput` via:
//
//	HttpHeaderProfileArray{ HttpHeaderProfileArgs{...} }
type HttpHeaderProfileArrayInput interface {
	pulumi.Input

	ToHttpHeaderProfileArrayOutput() HttpHeaderProfileArrayOutput
	ToHttpHeaderProfileArrayOutputWithContext(context.Context) HttpHeaderProfileArrayOutput
}

type HttpHeaderProfileArray []HttpHeaderProfileInput

func (HttpHeaderProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HttpHeaderProfile)(nil)).Elem()
}

func (i HttpHeaderProfileArray) ToHttpHeaderProfileArrayOutput() HttpHeaderProfileArrayOutput {
	return i.ToHttpHeaderProfileArrayOutputWithContext(context.Background())
}

func (i HttpHeaderProfileArray) ToHttpHeaderProfileArrayOutputWithContext(ctx context.Context) HttpHeaderProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpHeaderProfileArrayOutput)
}

// HttpHeaderProfileMapInput is an input type that accepts HttpHeaderProfileMap and HttpHeaderProfileMapOutput values.
// You can construct a concrete instance of `HttpHeaderProfileMapInput` via:
//
//	HttpHeaderProfileMap{ "key": HttpHeaderProfileArgs{...} }
type HttpHeaderProfileMapInput interface {
	pulumi.Input

	ToHttpHeaderProfileMapOutput() HttpHeaderProfileMapOutput
	ToHttpHeaderProfileMapOutputWithContext(context.Context) HttpHeaderProfileMapOutput
}

type HttpHeaderProfileMap map[string]HttpHeaderProfileInput

func (HttpHeaderProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HttpHeaderProfile)(nil)).Elem()
}

func (i HttpHeaderProfileMap) ToHttpHeaderProfileMapOutput() HttpHeaderProfileMapOutput {
	return i.ToHttpHeaderProfileMapOutputWithContext(context.Background())
}

func (i HttpHeaderProfileMap) ToHttpHeaderProfileMapOutputWithContext(ctx context.Context) HttpHeaderProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpHeaderProfileMapOutput)
}

type HttpHeaderProfileOutput struct{ *pulumi.OutputState }

func (HttpHeaderProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpHeaderProfile)(nil)).Elem()
}

func (o HttpHeaderProfileOutput) ToHttpHeaderProfileOutput() HttpHeaderProfileOutput {
	return o
}

func (o HttpHeaderProfileOutput) ToHttpHeaderProfileOutputWithContext(ctx context.Context) HttpHeaderProfileOutput {
	return o
}

// The Description param.
func (o HttpHeaderProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Device param.
func (o HttpHeaderProfileOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o HttpHeaderProfileOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The HttpHeaderInsertions param.
func (o HttpHeaderProfileOutput) HttpHeaderInsertions() HttpHeaderProfileHttpHeaderInsertionArrayOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) HttpHeaderProfileHttpHeaderInsertionArrayOutput {
		return v.HttpHeaderInsertions
	}).(HttpHeaderProfileHttpHeaderInsertionArrayOutput)
}

// The Name param.
func (o HttpHeaderProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o HttpHeaderProfileOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o HttpHeaderProfileOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *HttpHeaderProfile) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type HttpHeaderProfileArrayOutput struct{ *pulumi.OutputState }

func (HttpHeaderProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HttpHeaderProfile)(nil)).Elem()
}

func (o HttpHeaderProfileArrayOutput) ToHttpHeaderProfileArrayOutput() HttpHeaderProfileArrayOutput {
	return o
}

func (o HttpHeaderProfileArrayOutput) ToHttpHeaderProfileArrayOutputWithContext(ctx context.Context) HttpHeaderProfileArrayOutput {
	return o
}

func (o HttpHeaderProfileArrayOutput) Index(i pulumi.IntInput) HttpHeaderProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HttpHeaderProfile {
		return vs[0].([]*HttpHeaderProfile)[vs[1].(int)]
	}).(HttpHeaderProfileOutput)
}

type HttpHeaderProfileMapOutput struct{ *pulumi.OutputState }

func (HttpHeaderProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HttpHeaderProfile)(nil)).Elem()
}

func (o HttpHeaderProfileMapOutput) ToHttpHeaderProfileMapOutput() HttpHeaderProfileMapOutput {
	return o
}

func (o HttpHeaderProfileMapOutput) ToHttpHeaderProfileMapOutputWithContext(ctx context.Context) HttpHeaderProfileMapOutput {
	return o
}

func (o HttpHeaderProfileMapOutput) MapIndex(k pulumi.StringInput) HttpHeaderProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HttpHeaderProfile {
		return vs[0].(map[string]*HttpHeaderProfile)[vs[1].(string)]
	}).(HttpHeaderProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HttpHeaderProfileInput)(nil)).Elem(), &HttpHeaderProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpHeaderProfileArrayInput)(nil)).Elem(), HttpHeaderProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpHeaderProfileMapInput)(nil)).Elem(), HttpHeaderProfileMap{})
	pulumi.RegisterOutputType(HttpHeaderProfileOutput{})
	pulumi.RegisterOutputType(HttpHeaderProfileArrayOutput{})
	pulumi.RegisterOutputType(HttpHeaderProfileMapOutput{})
}
