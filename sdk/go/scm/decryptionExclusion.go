// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-scm/sdk/go/scm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a config item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-scm/sdk/go/scm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scm.NewDecryptionExclusion(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DecryptionExclusion struct {
	pulumi.CustomResourceState

	// The Description param.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Device param.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// The Folder param.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Name param.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Snippet param.
	Snippet pulumi.StringPtrOutput `pulumi:"snippet"`
	Tfid    pulumi.StringOutput    `pulumi:"tfid"`
}

// NewDecryptionExclusion registers a new resource with the given unique name, arguments, and options.
func NewDecryptionExclusion(ctx *pulumi.Context,
	name string, args *DecryptionExclusionArgs, opts ...pulumi.ResourceOption) (*DecryptionExclusion, error) {
	if args == nil {
		args = &DecryptionExclusionArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DecryptionExclusion
	err := ctx.RegisterResource("scm:index/decryptionExclusion:DecryptionExclusion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDecryptionExclusion gets an existing DecryptionExclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDecryptionExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DecryptionExclusionState, opts ...pulumi.ResourceOption) (*DecryptionExclusion, error) {
	var resource DecryptionExclusion
	err := ctx.ReadResource("scm:index/decryptionExclusion:DecryptionExclusion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DecryptionExclusion resources.
type decryptionExclusionState struct {
	// The Description param.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
	Tfid    *string `pulumi:"tfid"`
}

type DecryptionExclusionState struct {
	// The Description param.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
	Tfid    pulumi.StringPtrInput
}

func (DecryptionExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*decryptionExclusionState)(nil)).Elem()
}

type decryptionExclusionArgs struct {
	// The Description param.
	Description *string `pulumi:"description"`
	// The Device param.
	Device *string `pulumi:"device"`
	// The Folder param.
	Folder *string `pulumi:"folder"`
	// The Name param.
	Name *string `pulumi:"name"`
	// The Snippet param.
	Snippet *string `pulumi:"snippet"`
}

// The set of arguments for constructing a DecryptionExclusion resource.
type DecryptionExclusionArgs struct {
	// The Description param.
	Description pulumi.StringPtrInput
	// The Device param.
	Device pulumi.StringPtrInput
	// The Folder param.
	Folder pulumi.StringPtrInput
	// The Name param.
	Name pulumi.StringPtrInput
	// The Snippet param.
	Snippet pulumi.StringPtrInput
}

func (DecryptionExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*decryptionExclusionArgs)(nil)).Elem()
}

type DecryptionExclusionInput interface {
	pulumi.Input

	ToDecryptionExclusionOutput() DecryptionExclusionOutput
	ToDecryptionExclusionOutputWithContext(ctx context.Context) DecryptionExclusionOutput
}

func (*DecryptionExclusion) ElementType() reflect.Type {
	return reflect.TypeOf((**DecryptionExclusion)(nil)).Elem()
}

func (i *DecryptionExclusion) ToDecryptionExclusionOutput() DecryptionExclusionOutput {
	return i.ToDecryptionExclusionOutputWithContext(context.Background())
}

func (i *DecryptionExclusion) ToDecryptionExclusionOutputWithContext(ctx context.Context) DecryptionExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptionExclusionOutput)
}

// DecryptionExclusionArrayInput is an input type that accepts DecryptionExclusionArray and DecryptionExclusionArrayOutput values.
// You can construct a concrete instance of `DecryptionExclusionArrayInput` via:
//
//	DecryptionExclusionArray{ DecryptionExclusionArgs{...} }
type DecryptionExclusionArrayInput interface {
	pulumi.Input

	ToDecryptionExclusionArrayOutput() DecryptionExclusionArrayOutput
	ToDecryptionExclusionArrayOutputWithContext(context.Context) DecryptionExclusionArrayOutput
}

type DecryptionExclusionArray []DecryptionExclusionInput

func (DecryptionExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DecryptionExclusion)(nil)).Elem()
}

func (i DecryptionExclusionArray) ToDecryptionExclusionArrayOutput() DecryptionExclusionArrayOutput {
	return i.ToDecryptionExclusionArrayOutputWithContext(context.Background())
}

func (i DecryptionExclusionArray) ToDecryptionExclusionArrayOutputWithContext(ctx context.Context) DecryptionExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptionExclusionArrayOutput)
}

// DecryptionExclusionMapInput is an input type that accepts DecryptionExclusionMap and DecryptionExclusionMapOutput values.
// You can construct a concrete instance of `DecryptionExclusionMapInput` via:
//
//	DecryptionExclusionMap{ "key": DecryptionExclusionArgs{...} }
type DecryptionExclusionMapInput interface {
	pulumi.Input

	ToDecryptionExclusionMapOutput() DecryptionExclusionMapOutput
	ToDecryptionExclusionMapOutputWithContext(context.Context) DecryptionExclusionMapOutput
}

type DecryptionExclusionMap map[string]DecryptionExclusionInput

func (DecryptionExclusionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DecryptionExclusion)(nil)).Elem()
}

func (i DecryptionExclusionMap) ToDecryptionExclusionMapOutput() DecryptionExclusionMapOutput {
	return i.ToDecryptionExclusionMapOutputWithContext(context.Background())
}

func (i DecryptionExclusionMap) ToDecryptionExclusionMapOutputWithContext(ctx context.Context) DecryptionExclusionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DecryptionExclusionMapOutput)
}

type DecryptionExclusionOutput struct{ *pulumi.OutputState }

func (DecryptionExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DecryptionExclusion)(nil)).Elem()
}

func (o DecryptionExclusionOutput) ToDecryptionExclusionOutput() DecryptionExclusionOutput {
	return o
}

func (o DecryptionExclusionOutput) ToDecryptionExclusionOutputWithContext(ctx context.Context) DecryptionExclusionOutput {
	return o
}

// The Description param.
func (o DecryptionExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionExclusion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Device param.
func (o DecryptionExclusionOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionExclusion) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// The Folder param.
func (o DecryptionExclusionOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionExclusion) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Name param.
func (o DecryptionExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DecryptionExclusion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Snippet param.
func (o DecryptionExclusionOutput) Snippet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DecryptionExclusion) pulumi.StringPtrOutput { return v.Snippet }).(pulumi.StringPtrOutput)
}

func (o DecryptionExclusionOutput) Tfid() pulumi.StringOutput {
	return o.ApplyT(func(v *DecryptionExclusion) pulumi.StringOutput { return v.Tfid }).(pulumi.StringOutput)
}

type DecryptionExclusionArrayOutput struct{ *pulumi.OutputState }

func (DecryptionExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DecryptionExclusion)(nil)).Elem()
}

func (o DecryptionExclusionArrayOutput) ToDecryptionExclusionArrayOutput() DecryptionExclusionArrayOutput {
	return o
}

func (o DecryptionExclusionArrayOutput) ToDecryptionExclusionArrayOutputWithContext(ctx context.Context) DecryptionExclusionArrayOutput {
	return o
}

func (o DecryptionExclusionArrayOutput) Index(i pulumi.IntInput) DecryptionExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DecryptionExclusion {
		return vs[0].([]*DecryptionExclusion)[vs[1].(int)]
	}).(DecryptionExclusionOutput)
}

type DecryptionExclusionMapOutput struct{ *pulumi.OutputState }

func (DecryptionExclusionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DecryptionExclusion)(nil)).Elem()
}

func (o DecryptionExclusionMapOutput) ToDecryptionExclusionMapOutput() DecryptionExclusionMapOutput {
	return o
}

func (o DecryptionExclusionMapOutput) ToDecryptionExclusionMapOutputWithContext(ctx context.Context) DecryptionExclusionMapOutput {
	return o
}

func (o DecryptionExclusionMapOutput) MapIndex(k pulumi.StringInput) DecryptionExclusionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DecryptionExclusion {
		return vs[0].(map[string]*DecryptionExclusion)[vs[1].(string)]
	}).(DecryptionExclusionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptionExclusionInput)(nil)).Elem(), &DecryptionExclusion{})
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptionExclusionArrayInput)(nil)).Elem(), DecryptionExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DecryptionExclusionMapInput)(nil)).Elem(), DecryptionExclusionMap{})
	pulumi.RegisterOutputType(DecryptionExclusionOutput{})
	pulumi.RegisterOutputType(DecryptionExclusionArrayOutput{})
	pulumi.RegisterOutputType(DecryptionExclusionMapOutput{})
}
