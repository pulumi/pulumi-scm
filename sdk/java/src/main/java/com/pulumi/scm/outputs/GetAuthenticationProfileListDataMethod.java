// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetAuthenticationProfileListDataMethodCloud;
import com.pulumi.scm.outputs.GetAuthenticationProfileListDataMethodKerberos;
import com.pulumi.scm.outputs.GetAuthenticationProfileListDataMethodLdap;
import com.pulumi.scm.outputs.GetAuthenticationProfileListDataMethodRadius;
import com.pulumi.scm.outputs.GetAuthenticationProfileListDataMethodSamlIdp;
import com.pulumi.scm.outputs.GetAuthenticationProfileListDataMethodTacplus;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetAuthenticationProfileListDataMethod {
    /**
     * @return The Cloud param.
     * 
     */
    private GetAuthenticationProfileListDataMethodCloud cloud;
    /**
     * @return The Kerberos param.
     * 
     */
    private GetAuthenticationProfileListDataMethodKerberos kerberos;
    /**
     * @return The Ldap param.
     * 
     */
    private GetAuthenticationProfileListDataMethodLdap ldap;
    /**
     * @return The LocalDatabase param.
     * 
     */
    private Boolean localDatabase;
    /**
     * @return The Radius param.
     * 
     */
    private GetAuthenticationProfileListDataMethodRadius radius;
    /**
     * @return The SamlIdp param.
     * 
     */
    private GetAuthenticationProfileListDataMethodSamlIdp samlIdp;
    /**
     * @return The Tacplus param.
     * 
     */
    private GetAuthenticationProfileListDataMethodTacplus tacplus;

    private GetAuthenticationProfileListDataMethod() {}
    /**
     * @return The Cloud param.
     * 
     */
    public GetAuthenticationProfileListDataMethodCloud cloud() {
        return this.cloud;
    }
    /**
     * @return The Kerberos param.
     * 
     */
    public GetAuthenticationProfileListDataMethodKerberos kerberos() {
        return this.kerberos;
    }
    /**
     * @return The Ldap param.
     * 
     */
    public GetAuthenticationProfileListDataMethodLdap ldap() {
        return this.ldap;
    }
    /**
     * @return The LocalDatabase param.
     * 
     */
    public Boolean localDatabase() {
        return this.localDatabase;
    }
    /**
     * @return The Radius param.
     * 
     */
    public GetAuthenticationProfileListDataMethodRadius radius() {
        return this.radius;
    }
    /**
     * @return The SamlIdp param.
     * 
     */
    public GetAuthenticationProfileListDataMethodSamlIdp samlIdp() {
        return this.samlIdp;
    }
    /**
     * @return The Tacplus param.
     * 
     */
    public GetAuthenticationProfileListDataMethodTacplus tacplus() {
        return this.tacplus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthenticationProfileListDataMethod defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetAuthenticationProfileListDataMethodCloud cloud;
        private GetAuthenticationProfileListDataMethodKerberos kerberos;
        private GetAuthenticationProfileListDataMethodLdap ldap;
        private Boolean localDatabase;
        private GetAuthenticationProfileListDataMethodRadius radius;
        private GetAuthenticationProfileListDataMethodSamlIdp samlIdp;
        private GetAuthenticationProfileListDataMethodTacplus tacplus;
        public Builder() {}
        public Builder(GetAuthenticationProfileListDataMethod defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloud = defaults.cloud;
    	      this.kerberos = defaults.kerberos;
    	      this.ldap = defaults.ldap;
    	      this.localDatabase = defaults.localDatabase;
    	      this.radius = defaults.radius;
    	      this.samlIdp = defaults.samlIdp;
    	      this.tacplus = defaults.tacplus;
        }

        @CustomType.Setter
        public Builder cloud(GetAuthenticationProfileListDataMethodCloud cloud) {
            if (cloud == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "cloud");
            }
            this.cloud = cloud;
            return this;
        }
        @CustomType.Setter
        public Builder kerberos(GetAuthenticationProfileListDataMethodKerberos kerberos) {
            if (kerberos == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "kerberos");
            }
            this.kerberos = kerberos;
            return this;
        }
        @CustomType.Setter
        public Builder ldap(GetAuthenticationProfileListDataMethodLdap ldap) {
            if (ldap == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "ldap");
            }
            this.ldap = ldap;
            return this;
        }
        @CustomType.Setter
        public Builder localDatabase(Boolean localDatabase) {
            if (localDatabase == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "localDatabase");
            }
            this.localDatabase = localDatabase;
            return this;
        }
        @CustomType.Setter
        public Builder radius(GetAuthenticationProfileListDataMethodRadius radius) {
            if (radius == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "radius");
            }
            this.radius = radius;
            return this;
        }
        @CustomType.Setter
        public Builder samlIdp(GetAuthenticationProfileListDataMethodSamlIdp samlIdp) {
            if (samlIdp == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "samlIdp");
            }
            this.samlIdp = samlIdp;
            return this;
        }
        @CustomType.Setter
        public Builder tacplus(GetAuthenticationProfileListDataMethodTacplus tacplus) {
            if (tacplus == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethod", "tacplus");
            }
            this.tacplus = tacplus;
            return this;
        }
        public GetAuthenticationProfileListDataMethod build() {
            final var _resultValue = new GetAuthenticationProfileListDataMethod();
            _resultValue.cloud = cloud;
            _resultValue.kerberos = kerberos;
            _resultValue.ldap = ldap;
            _resultValue.localDatabase = localDatabase;
            _resultValue.radius = radius;
            _resultValue.samlIdp = samlIdp;
            _resultValue.tacplus = tacplus;
            return _resultValue;
        }
    }
}
