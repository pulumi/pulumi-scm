// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.IkeGatewayProtocolCommonFragmentationArgs;
import com.pulumi.scm.inputs.IkeGatewayProtocolCommonNatTraversalArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IkeGatewayProtocolCommonArgs extends com.pulumi.resources.ResourceArgs {

    public static final IkeGatewayProtocolCommonArgs Empty = new IkeGatewayProtocolCommonArgs();

    /**
     * The Fragmentation param.
     * 
     */
    @Import(name="fragmentation")
    private @Nullable Output<IkeGatewayProtocolCommonFragmentationArgs> fragmentation;

    /**
     * @return The Fragmentation param.
     * 
     */
    public Optional<Output<IkeGatewayProtocolCommonFragmentationArgs>> fragmentation() {
        return Optional.ofNullable(this.fragmentation);
    }

    /**
     * The NatTraversal param.
     * 
     */
    @Import(name="natTraversal")
    private @Nullable Output<IkeGatewayProtocolCommonNatTraversalArgs> natTraversal;

    /**
     * @return The NatTraversal param.
     * 
     */
    public Optional<Output<IkeGatewayProtocolCommonNatTraversalArgs>> natTraversal() {
        return Optional.ofNullable(this.natTraversal);
    }

    /**
     * The PassiveMode param.
     * 
     */
    @Import(name="passiveMode")
    private @Nullable Output<Boolean> passiveMode;

    /**
     * @return The PassiveMode param.
     * 
     */
    public Optional<Output<Boolean>> passiveMode() {
        return Optional.ofNullable(this.passiveMode);
    }

    private IkeGatewayProtocolCommonArgs() {}

    private IkeGatewayProtocolCommonArgs(IkeGatewayProtocolCommonArgs $) {
        this.fragmentation = $.fragmentation;
        this.natTraversal = $.natTraversal;
        this.passiveMode = $.passiveMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IkeGatewayProtocolCommonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IkeGatewayProtocolCommonArgs $;

        public Builder() {
            $ = new IkeGatewayProtocolCommonArgs();
        }

        public Builder(IkeGatewayProtocolCommonArgs defaults) {
            $ = new IkeGatewayProtocolCommonArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fragmentation The Fragmentation param.
         * 
         * @return builder
         * 
         */
        public Builder fragmentation(@Nullable Output<IkeGatewayProtocolCommonFragmentationArgs> fragmentation) {
            $.fragmentation = fragmentation;
            return this;
        }

        /**
         * @param fragmentation The Fragmentation param.
         * 
         * @return builder
         * 
         */
        public Builder fragmentation(IkeGatewayProtocolCommonFragmentationArgs fragmentation) {
            return fragmentation(Output.of(fragmentation));
        }

        /**
         * @param natTraversal The NatTraversal param.
         * 
         * @return builder
         * 
         */
        public Builder natTraversal(@Nullable Output<IkeGatewayProtocolCommonNatTraversalArgs> natTraversal) {
            $.natTraversal = natTraversal;
            return this;
        }

        /**
         * @param natTraversal The NatTraversal param.
         * 
         * @return builder
         * 
         */
        public Builder natTraversal(IkeGatewayProtocolCommonNatTraversalArgs natTraversal) {
            return natTraversal(Output.of(natTraversal));
        }

        /**
         * @param passiveMode The PassiveMode param.
         * 
         * @return builder
         * 
         */
        public Builder passiveMode(@Nullable Output<Boolean> passiveMode) {
            $.passiveMode = passiveMode;
            return this;
        }

        /**
         * @param passiveMode The PassiveMode param.
         * 
         * @return builder
         * 
         */
        public Builder passiveMode(Boolean passiveMode) {
            return passiveMode(Output.of(passiveMode));
        }

        public IkeGatewayProtocolCommonArgs build() {
            return $;
        }
    }

}
