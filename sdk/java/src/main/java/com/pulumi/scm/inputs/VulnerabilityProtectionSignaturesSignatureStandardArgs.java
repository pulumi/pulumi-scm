// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VulnerabilityProtectionSignaturesSignatureStandardArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityProtectionSignaturesSignatureStandardArgs Empty = new VulnerabilityProtectionSignaturesSignatureStandardArgs();

    /**
     * The AndConditions param.
     * 
     */
    @Import(name="andConditions")
    private @Nullable Output<List<VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs>> andConditions;

    /**
     * @return The AndConditions param.
     * 
     */
    public Optional<Output<List<VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs>>> andConditions() {
        return Optional.ofNullable(this.andConditions);
    }

    /**
     * The Comment param. String length must not exceed 256 characters.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return The Comment param. String length must not exceed 256 characters.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The OrderFree param. Default: `false`.
     * 
     */
    @Import(name="orderFree")
    private @Nullable Output<Boolean> orderFree;

    /**
     * @return The OrderFree param. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> orderFree() {
        return Optional.ofNullable(this.orderFree);
    }

    /**
     * The Scope param. String must be one of these: `&#34;protocol-data-unit&#34;`, `&#34;session&#34;`.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The Scope param. String must be one of these: `&#34;protocol-data-unit&#34;`, `&#34;session&#34;`.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private VulnerabilityProtectionSignaturesSignatureStandardArgs() {}

    private VulnerabilityProtectionSignaturesSignatureStandardArgs(VulnerabilityProtectionSignaturesSignatureStandardArgs $) {
        this.andConditions = $.andConditions;
        this.comment = $.comment;
        this.name = $.name;
        this.orderFree = $.orderFree;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityProtectionSignaturesSignatureStandardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityProtectionSignaturesSignatureStandardArgs $;

        public Builder() {
            $ = new VulnerabilityProtectionSignaturesSignatureStandardArgs();
        }

        public Builder(VulnerabilityProtectionSignaturesSignatureStandardArgs defaults) {
            $ = new VulnerabilityProtectionSignaturesSignatureStandardArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param andConditions The AndConditions param.
         * 
         * @return builder
         * 
         */
        public Builder andConditions(@Nullable Output<List<VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs>> andConditions) {
            $.andConditions = andConditions;
            return this;
        }

        /**
         * @param andConditions The AndConditions param.
         * 
         * @return builder
         * 
         */
        public Builder andConditions(List<VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs> andConditions) {
            return andConditions(Output.of(andConditions));
        }

        /**
         * @param andConditions The AndConditions param.
         * 
         * @return builder
         * 
         */
        public Builder andConditions(VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs... andConditions) {
            return andConditions(List.of(andConditions));
        }

        /**
         * @param comment The Comment param. String length must not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment The Comment param. String length must not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orderFree The OrderFree param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder orderFree(@Nullable Output<Boolean> orderFree) {
            $.orderFree = orderFree;
            return this;
        }

        /**
         * @param orderFree The OrderFree param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder orderFree(Boolean orderFree) {
            return orderFree(Output.of(orderFree));
        }

        /**
         * @param scope The Scope param. String must be one of these: `&#34;protocol-data-unit&#34;`, `&#34;session&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The Scope param. String must be one of these: `&#34;protocol-data-unit&#34;`, `&#34;session&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public VulnerabilityProtectionSignaturesSignatureStandardArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("VulnerabilityProtectionSignaturesSignatureStandardArgs", "name");
            }
            return $;
        }
    }

}
