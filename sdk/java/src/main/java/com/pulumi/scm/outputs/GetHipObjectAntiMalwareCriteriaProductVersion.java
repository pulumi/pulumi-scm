// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectAntiMalwareCriteriaProductVersionNotWithin;
import com.pulumi.scm.outputs.GetHipObjectAntiMalwareCriteriaProductVersionWithin;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHipObjectAntiMalwareCriteriaProductVersion {
    /**
     * @return The Contains param. String length must not exceed 255 characters.
     * 
     */
    private String contains;
    /**
     * @return The GreaterEqual param. String length must not exceed 255 characters.
     * 
     */
    private String greaterEqual;
    /**
     * @return The GreaterThan param. String length must not exceed 255 characters.
     * 
     */
    private String greaterThan;
    /**
     * @return The Is param. String length must not exceed 255 characters.
     * 
     */
    private String is;
    /**
     * @return The IsNot param. String length must not exceed 255 characters.
     * 
     */
    private String isNot;
    /**
     * @return The LessEqual param. String length must not exceed 255 characters.
     * 
     */
    private String lessEqual;
    /**
     * @return The LessThan param. String length must not exceed 255 characters.
     * 
     */
    private String lessThan;
    /**
     * @return The NotWithin param.
     * 
     */
    private GetHipObjectAntiMalwareCriteriaProductVersionNotWithin notWithin;
    /**
     * @return The Within param.
     * 
     */
    private GetHipObjectAntiMalwareCriteriaProductVersionWithin within;

    private GetHipObjectAntiMalwareCriteriaProductVersion() {}
    /**
     * @return The Contains param. String length must not exceed 255 characters.
     * 
     */
    public String contains() {
        return this.contains;
    }
    /**
     * @return The GreaterEqual param. String length must not exceed 255 characters.
     * 
     */
    public String greaterEqual() {
        return this.greaterEqual;
    }
    /**
     * @return The GreaterThan param. String length must not exceed 255 characters.
     * 
     */
    public String greaterThan() {
        return this.greaterThan;
    }
    /**
     * @return The Is param. String length must not exceed 255 characters.
     * 
     */
    public String is() {
        return this.is;
    }
    /**
     * @return The IsNot param. String length must not exceed 255 characters.
     * 
     */
    public String isNot() {
        return this.isNot;
    }
    /**
     * @return The LessEqual param. String length must not exceed 255 characters.
     * 
     */
    public String lessEqual() {
        return this.lessEqual;
    }
    /**
     * @return The LessThan param. String length must not exceed 255 characters.
     * 
     */
    public String lessThan() {
        return this.lessThan;
    }
    /**
     * @return The NotWithin param.
     * 
     */
    public GetHipObjectAntiMalwareCriteriaProductVersionNotWithin notWithin() {
        return this.notWithin;
    }
    /**
     * @return The Within param.
     * 
     */
    public GetHipObjectAntiMalwareCriteriaProductVersionWithin within() {
        return this.within;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectAntiMalwareCriteriaProductVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contains;
        private String greaterEqual;
        private String greaterThan;
        private String is;
        private String isNot;
        private String lessEqual;
        private String lessThan;
        private GetHipObjectAntiMalwareCriteriaProductVersionNotWithin notWithin;
        private GetHipObjectAntiMalwareCriteriaProductVersionWithin within;
        public Builder() {}
        public Builder(GetHipObjectAntiMalwareCriteriaProductVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contains = defaults.contains;
    	      this.greaterEqual = defaults.greaterEqual;
    	      this.greaterThan = defaults.greaterThan;
    	      this.is = defaults.is;
    	      this.isNot = defaults.isNot;
    	      this.lessEqual = defaults.lessEqual;
    	      this.lessThan = defaults.lessThan;
    	      this.notWithin = defaults.notWithin;
    	      this.within = defaults.within;
        }

        @CustomType.Setter
        public Builder contains(String contains) {
            if (contains == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "contains");
            }
            this.contains = contains;
            return this;
        }
        @CustomType.Setter
        public Builder greaterEqual(String greaterEqual) {
            if (greaterEqual == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "greaterEqual");
            }
            this.greaterEqual = greaterEqual;
            return this;
        }
        @CustomType.Setter
        public Builder greaterThan(String greaterThan) {
            if (greaterThan == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "greaterThan");
            }
            this.greaterThan = greaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder is(String is) {
            if (is == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "is");
            }
            this.is = is;
            return this;
        }
        @CustomType.Setter
        public Builder isNot(String isNot) {
            if (isNot == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "isNot");
            }
            this.isNot = isNot;
            return this;
        }
        @CustomType.Setter
        public Builder lessEqual(String lessEqual) {
            if (lessEqual == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "lessEqual");
            }
            this.lessEqual = lessEqual;
            return this;
        }
        @CustomType.Setter
        public Builder lessThan(String lessThan) {
            if (lessThan == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "lessThan");
            }
            this.lessThan = lessThan;
            return this;
        }
        @CustomType.Setter
        public Builder notWithin(GetHipObjectAntiMalwareCriteriaProductVersionNotWithin notWithin) {
            if (notWithin == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "notWithin");
            }
            this.notWithin = notWithin;
            return this;
        }
        @CustomType.Setter
        public Builder within(GetHipObjectAntiMalwareCriteriaProductVersionWithin within) {
            if (within == null) {
              throw new MissingRequiredPropertyException("GetHipObjectAntiMalwareCriteriaProductVersion", "within");
            }
            this.within = within;
            return this;
        }
        public GetHipObjectAntiMalwareCriteriaProductVersion build() {
            final var _resultValue = new GetHipObjectAntiMalwareCriteriaProductVersion();
            _resultValue.contains = contains;
            _resultValue.greaterEqual = greaterEqual;
            _resultValue.greaterThan = greaterThan;
            _resultValue.is = is;
            _resultValue.isNot = isNot;
            _resultValue.lessEqual = lessEqual;
            _resultValue.lessThan = lessThan;
            _resultValue.notWithin = notWithin;
            _resultValue.within = within;
            return _resultValue;
        }
    }
}
