// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin;
import com.pulumi.scm.outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeWithin;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetHipObjectDiskBackupCriteriaLastBackupTime {
    /**
     * @return The NotAvailable param.
     * 
     */
    private Boolean notAvailable;
    /**
     * @return The NotWithin param.
     * 
     */
    private GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin notWithin;
    /**
     * @return The Within param.
     * 
     */
    private GetHipObjectDiskBackupCriteriaLastBackupTimeWithin within;

    private GetHipObjectDiskBackupCriteriaLastBackupTime() {}
    /**
     * @return The NotAvailable param.
     * 
     */
    public Boolean notAvailable() {
        return this.notAvailable;
    }
    /**
     * @return The NotWithin param.
     * 
     */
    public GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin notWithin() {
        return this.notWithin;
    }
    /**
     * @return The Within param.
     * 
     */
    public GetHipObjectDiskBackupCriteriaLastBackupTimeWithin within() {
        return this.within;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectDiskBackupCriteriaLastBackupTime defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean notAvailable;
        private GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin notWithin;
        private GetHipObjectDiskBackupCriteriaLastBackupTimeWithin within;
        public Builder() {}
        public Builder(GetHipObjectDiskBackupCriteriaLastBackupTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notAvailable = defaults.notAvailable;
    	      this.notWithin = defaults.notWithin;
    	      this.within = defaults.within;
        }

        @CustomType.Setter
        public Builder notAvailable(Boolean notAvailable) {
            if (notAvailable == null) {
              throw new MissingRequiredPropertyException("GetHipObjectDiskBackupCriteriaLastBackupTime", "notAvailable");
            }
            this.notAvailable = notAvailable;
            return this;
        }
        @CustomType.Setter
        public Builder notWithin(GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithin notWithin) {
            if (notWithin == null) {
              throw new MissingRequiredPropertyException("GetHipObjectDiskBackupCriteriaLastBackupTime", "notWithin");
            }
            this.notWithin = notWithin;
            return this;
        }
        @CustomType.Setter
        public Builder within(GetHipObjectDiskBackupCriteriaLastBackupTimeWithin within) {
            if (within == null) {
              throw new MissingRequiredPropertyException("GetHipObjectDiskBackupCriteriaLastBackupTime", "within");
            }
            this.within = within;
            return this;
        }
        public GetHipObjectDiskBackupCriteriaLastBackupTime build() {
            final var _resultValue = new GetHipObjectDiskBackupCriteriaLastBackupTime();
            _resultValue.notAvailable = notAvailable;
            _resultValue.notWithin = notWithin;
            _resultValue.within = within;
            return _resultValue;
        }
    }
}
