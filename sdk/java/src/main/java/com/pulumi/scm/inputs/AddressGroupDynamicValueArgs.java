// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AddressGroupDynamicValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final AddressGroupDynamicValueArgs Empty = new AddressGroupDynamicValueArgs();

    /**
     * Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
     * 
     */
    @Import(name="filter", required=true)
    private Output<String> filter;

    /**
     * @return Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
     * 
     */
    public Output<String> filter() {
        return this.filter;
    }

    private AddressGroupDynamicValueArgs() {}

    private AddressGroupDynamicValueArgs(AddressGroupDynamicValueArgs $) {
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddressGroupDynamicValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddressGroupDynamicValueArgs $;

        public Builder() {
            $ = new AddressGroupDynamicValueArgs();
        }

        public Builder(AddressGroupDynamicValueArgs defaults) {
            $ = new AddressGroupDynamicValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public AddressGroupDynamicValueArgs build() {
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("AddressGroupDynamicValueArgs", "filter");
            }
            return $;
        }
    }

}
