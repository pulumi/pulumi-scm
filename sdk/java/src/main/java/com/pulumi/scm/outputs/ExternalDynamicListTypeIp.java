// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.ExternalDynamicListTypeIpIpAuth;
import com.pulumi.scm.outputs.ExternalDynamicListTypeIpRecurring;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExternalDynamicListTypeIp {
    /**
     * @return Profile for authenticating client certificates. Default: `&#34;None&#34;`.
     * 
     */
    private @Nullable String certificateProfile;
    /**
     * @return The Description param. String length must not exceed 255 characters.
     * 
     */
    private @Nullable String description;
    /**
     * @return The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     * 
     */
    private @Nullable List<String> exceptionLists;
    /**
     * @return The IpAuth param.
     * 
     */
    private @Nullable ExternalDynamicListTypeIpIpAuth ipAuth;
    /**
     * @return The Recurring param.
     * 
     */
    private ExternalDynamicListTypeIpRecurring recurring;
    /**
     * @return The Url param. String length must not exceed 255 characters. Default: `&#34;http://&#34;`.
     * 
     */
    private @Nullable String url;

    private ExternalDynamicListTypeIp() {}
    /**
     * @return Profile for authenticating client certificates. Default: `&#34;None&#34;`.
     * 
     */
    public Optional<String> certificateProfile() {
        return Optional.ofNullable(this.certificateProfile);
    }
    /**
     * @return The Description param. String length must not exceed 255 characters.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
     * 
     */
    public List<String> exceptionLists() {
        return this.exceptionLists == null ? List.of() : this.exceptionLists;
    }
    /**
     * @return The IpAuth param.
     * 
     */
    public Optional<ExternalDynamicListTypeIpIpAuth> ipAuth() {
        return Optional.ofNullable(this.ipAuth);
    }
    /**
     * @return The Recurring param.
     * 
     */
    public ExternalDynamicListTypeIpRecurring recurring() {
        return this.recurring;
    }
    /**
     * @return The Url param. String length must not exceed 255 characters. Default: `&#34;http://&#34;`.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalDynamicListTypeIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateProfile;
        private @Nullable String description;
        private @Nullable List<String> exceptionLists;
        private @Nullable ExternalDynamicListTypeIpIpAuth ipAuth;
        private ExternalDynamicListTypeIpRecurring recurring;
        private @Nullable String url;
        public Builder() {}
        public Builder(ExternalDynamicListTypeIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateProfile = defaults.certificateProfile;
    	      this.description = defaults.description;
    	      this.exceptionLists = defaults.exceptionLists;
    	      this.ipAuth = defaults.ipAuth;
    	      this.recurring = defaults.recurring;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder certificateProfile(@Nullable String certificateProfile) {

            this.certificateProfile = certificateProfile;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder exceptionLists(@Nullable List<String> exceptionLists) {

            this.exceptionLists = exceptionLists;
            return this;
        }
        public Builder exceptionLists(String... exceptionLists) {
            return exceptionLists(List.of(exceptionLists));
        }
        @CustomType.Setter
        public Builder ipAuth(@Nullable ExternalDynamicListTypeIpIpAuth ipAuth) {

            this.ipAuth = ipAuth;
            return this;
        }
        @CustomType.Setter
        public Builder recurring(ExternalDynamicListTypeIpRecurring recurring) {
            if (recurring == null) {
              throw new MissingRequiredPropertyException("ExternalDynamicListTypeIp", "recurring");
            }
            this.recurring = recurring;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public ExternalDynamicListTypeIp build() {
            final var _resultValue = new ExternalDynamicListTypeIp();
            _resultValue.certificateProfile = certificateProfile;
            _resultValue.description = description;
            _resultValue.exceptionLists = exceptionLists;
            _resultValue.ipAuth = ipAuth;
            _resultValue.recurring = recurring;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
