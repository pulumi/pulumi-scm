// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.AddressGroupDynamicValueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AddressGroupState extends com.pulumi.resources.ResourceArgs {

    public static final AddressGroupState Empty = new AddressGroupState();

    /**
     * The Description param. String length must not exceed 1023 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Description param. String length must not exceed 1023 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The DynamicValue param. Ensure that only one of the following is specified: `dynamic`, `static`
     * 
     */
    @Import(name="dynamicValue")
    private @Nullable Output<AddressGroupDynamicValueArgs> dynamicValue;

    /**
     * @return The DynamicValue param. Ensure that only one of the following is specified: `dynamic`, `static`
     * 
     */
    public Optional<Output<AddressGroupDynamicValueArgs>> dynamicValue() {
        return Optional.ofNullable(this.dynamicValue);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `dynamic`, `static`
     * 
     */
    @Import(name="staticLists")
    private @Nullable Output<List<String>> staticLists;

    /**
     * @return The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `dynamic`, `static`
     * 
     */
    public Optional<Output<List<String>>> staticLists() {
        return Optional.ofNullable(this.staticLists);
    }

    /**
     * Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tfid")
    private @Nullable Output<String> tfid;

    public Optional<Output<String>> tfid() {
        return Optional.ofNullable(this.tfid);
    }

    private AddressGroupState() {}

    private AddressGroupState(AddressGroupState $) {
        this.description = $.description;
        this.device = $.device;
        this.dynamicValue = $.dynamicValue;
        this.folder = $.folder;
        this.name = $.name;
        this.snippet = $.snippet;
        this.staticLists = $.staticLists;
        this.tags = $.tags;
        this.tfid = $.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddressGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddressGroupState $;

        public Builder() {
            $ = new AddressGroupState();
        }

        public Builder(AddressGroupState defaults) {
            $ = new AddressGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The Description param. String length must not exceed 1023 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Description param. String length must not exceed 1023 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param dynamicValue The DynamicValue param. Ensure that only one of the following is specified: `dynamic`, `static`
         * 
         * @return builder
         * 
         */
        public Builder dynamicValue(@Nullable Output<AddressGroupDynamicValueArgs> dynamicValue) {
            $.dynamicValue = dynamicValue;
            return this;
        }

        /**
         * @param dynamicValue The DynamicValue param. Ensure that only one of the following is specified: `dynamic`, `static`
         * 
         * @return builder
         * 
         */
        public Builder dynamicValue(AddressGroupDynamicValueArgs dynamicValue) {
            return dynamicValue(Output.of(dynamicValue));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param staticLists The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `dynamic`, `static`
         * 
         * @return builder
         * 
         */
        public Builder staticLists(@Nullable Output<List<String>> staticLists) {
            $.staticLists = staticLists;
            return this;
        }

        /**
         * @param staticLists The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `dynamic`, `static`
         * 
         * @return builder
         * 
         */
        public Builder staticLists(List<String> staticLists) {
            return staticLists(Output.of(staticLists));
        }

        /**
         * @param staticLists The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `dynamic`, `static`
         * 
         * @return builder
         * 
         */
        public Builder staticLists(String... staticLists) {
            return staticLists(List.of(staticLists));
        }

        /**
         * @param tags Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder tfid(@Nullable Output<String> tfid) {
            $.tfid = tfid;
            return this;
        }

        public Builder tfid(String tfid) {
            return tfid(Output.of(tfid));
        }

        public AddressGroupState build() {
            return $;
        }
    }

}
