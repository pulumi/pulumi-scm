// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInternalDnsServerListData {
    /**
     * @return The DomainNames param.
     * 
     */
    private List<String> domainNames;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return The Name param.
     * 
     */
    private String name;
    /**
     * @return The Primary param.
     * 
     */
    private String primary;
    /**
     * @return The Secondary param.
     * 
     */
    private String secondary;

    private GetInternalDnsServerListData() {}
    /**
     * @return The DomainNames param.
     * 
     */
    public List<String> domainNames() {
        return this.domainNames;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Name param.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Primary param.
     * 
     */
    public String primary() {
        return this.primary;
    }
    /**
     * @return The Secondary param.
     * 
     */
    public String secondary() {
        return this.secondary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInternalDnsServerListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> domainNames;
        private String id;
        private String name;
        private String primary;
        private String secondary;
        public Builder() {}
        public Builder(GetInternalDnsServerListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainNames = defaults.domainNames;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.primary = defaults.primary;
    	      this.secondary = defaults.secondary;
        }

        @CustomType.Setter
        public Builder domainNames(List<String> domainNames) {
            if (domainNames == null) {
              throw new MissingRequiredPropertyException("GetInternalDnsServerListData", "domainNames");
            }
            this.domainNames = domainNames;
            return this;
        }
        public Builder domainNames(String... domainNames) {
            return domainNames(List.of(domainNames));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInternalDnsServerListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetInternalDnsServerListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder primary(String primary) {
            if (primary == null) {
              throw new MissingRequiredPropertyException("GetInternalDnsServerListData", "primary");
            }
            this.primary = primary;
            return this;
        }
        @CustomType.Setter
        public Builder secondary(String secondary) {
            if (secondary == null) {
              throw new MissingRequiredPropertyException("GetInternalDnsServerListData", "secondary");
            }
            this.secondary = secondary;
            return this;
        }
        public GetInternalDnsServerListData build() {
            final var _resultValue = new GetInternalDnsServerListData();
            _resultValue.domainNames = domainNames;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.primary = primary;
            _resultValue.secondary = secondary;
            return _resultValue;
        }
    }
}
