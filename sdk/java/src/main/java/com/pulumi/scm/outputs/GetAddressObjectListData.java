// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAddressObjectListData {
    /**
     * @return The Description param. String length must not exceed 1023 characters.
     * 
     */
    private String description;
    /**
     * @return The Fqdn param. String length must be between 1 and 255 characters. String validation regex: `^a-zA-Z0-9_+[a-zA-Z0-9]$`.
     * 
     */
    private String fqdn;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return The IpNetmask param.
     * 
     */
    private String ipNetmask;
    /**
     * @return The IpRange param.
     * 
     */
    private String ipRange;
    /**
     * @return The IpWildcard param.
     * 
     */
    private String ipWildcard;
    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    private String name;
    /**
     * @return Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     * 
     */
    private List<String> tags;
    /**
     * @return The Type param.
     * 
     */
    private String type;

    private GetAddressObjectListData() {}
    /**
     * @return The Description param. String length must not exceed 1023 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Fqdn param. String length must be between 1 and 255 characters. String validation regex: `^a-zA-Z0-9_+[a-zA-Z0-9]$`.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IpNetmask param.
     * 
     */
    public String ipNetmask() {
        return this.ipNetmask;
    }
    /**
     * @return The IpRange param.
     * 
     */
    public String ipRange() {
        return this.ipRange;
    }
    /**
     * @return The IpWildcard param.
     * 
     */
    public String ipWildcard() {
        return this.ipWildcard;
    }
    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The Type param.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddressObjectListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String fqdn;
        private String id;
        private String ipNetmask;
        private String ipRange;
        private String ipWildcard;
        private String name;
        private List<String> tags;
        private String type;
        public Builder() {}
        public Builder(GetAddressObjectListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.ipNetmask = defaults.ipNetmask;
    	      this.ipRange = defaults.ipRange;
    	      this.ipWildcard = defaults.ipWildcard;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipNetmask(String ipNetmask) {
            if (ipNetmask == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "ipNetmask");
            }
            this.ipNetmask = ipNetmask;
            return this;
        }
        @CustomType.Setter
        public Builder ipRange(String ipRange) {
            if (ipRange == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "ipRange");
            }
            this.ipRange = ipRange;
            return this;
        }
        @CustomType.Setter
        public Builder ipWildcard(String ipWildcard) {
            if (ipWildcard == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "ipWildcard");
            }
            this.ipWildcard = ipWildcard;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAddressObjectListData", "type");
            }
            this.type = type;
            return this;
        }
        public GetAddressObjectListData build() {
            final var _resultValue = new GetAddressObjectListData();
            _resultValue.description = description;
            _resultValue.fqdn = fqdn;
            _resultValue.id = id;
            _resultValue.ipNetmask = ipNetmask;
            _resultValue.ipRange = ipRange;
            _resultValue.ipWildcard = ipWildcard;
            _resultValue.name = name;
            _resultValue.tags = tags;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
