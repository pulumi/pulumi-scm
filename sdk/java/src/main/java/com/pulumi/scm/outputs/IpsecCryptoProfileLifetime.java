// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IpsecCryptoProfileLifetime {
    /**
     * @return specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    private @Nullable Integer days;
    /**
     * @return specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    private @Nullable Integer hours;
    /**
     * @return specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    private @Nullable Integer minutes;
    /**
     * @return specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    private @Nullable Integer seconds;

    private IpsecCryptoProfileLifetime() {}
    /**
     * @return specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    public Optional<Integer> days() {
        return Optional.ofNullable(this.days);
    }
    /**
     * @return specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    public Optional<Integer> hours() {
        return Optional.ofNullable(this.hours);
    }
    /**
     * @return specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    public Optional<Integer> minutes() {
        return Optional.ofNullable(this.minutes);
    }
    /**
     * @return specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
     * 
     */
    public Optional<Integer> seconds() {
        return Optional.ofNullable(this.seconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IpsecCryptoProfileLifetime defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer days;
        private @Nullable Integer hours;
        private @Nullable Integer minutes;
        private @Nullable Integer seconds;
        public Builder() {}
        public Builder(IpsecCryptoProfileLifetime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.days = defaults.days;
    	      this.hours = defaults.hours;
    	      this.minutes = defaults.minutes;
    	      this.seconds = defaults.seconds;
        }

        @CustomType.Setter
        public Builder days(@Nullable Integer days) {

            this.days = days;
            return this;
        }
        @CustomType.Setter
        public Builder hours(@Nullable Integer hours) {

            this.hours = hours;
            return this;
        }
        @CustomType.Setter
        public Builder minutes(@Nullable Integer minutes) {

            this.minutes = minutes;
            return this;
        }
        @CustomType.Setter
        public Builder seconds(@Nullable Integer seconds) {

            this.seconds = seconds;
            return this;
        }
        public IpsecCryptoProfileLifetime build() {
            final var _resultValue = new IpsecCryptoProfileLifetime();
            _resultValue.days = days;
            _resultValue.hours = hours;
            _resultValue.minutes = minutes;
            _resultValue.seconds = seconds;
            return _resultValue;
        }
    }
}
