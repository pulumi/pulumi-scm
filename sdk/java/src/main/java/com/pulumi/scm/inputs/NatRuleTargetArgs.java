// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.NatRuleTargetDeviceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NatRuleTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final NatRuleTargetArgs Empty = new NatRuleTargetArgs();

    /**
     * The Devices param.
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<NatRuleTargetDeviceArgs>> devices;

    /**
     * @return The Devices param.
     * 
     */
    public Optional<Output<List<NatRuleTargetDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * The Negate param.
     * 
     */
    @Import(name="negate")
    private @Nullable Output<Boolean> negate;

    /**
     * @return The Negate param.
     * 
     */
    public Optional<Output<Boolean>> negate() {
        return Optional.ofNullable(this.negate);
    }

    /**
     * The Tags param.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The Tags param.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NatRuleTargetArgs() {}

    private NatRuleTargetArgs(NatRuleTargetArgs $) {
        this.devices = $.devices;
        this.negate = $.negate;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatRuleTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatRuleTargetArgs $;

        public Builder() {
            $ = new NatRuleTargetArgs();
        }

        public Builder(NatRuleTargetArgs defaults) {
            $ = new NatRuleTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devices The Devices param.
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<NatRuleTargetDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices The Devices param.
         * 
         * @return builder
         * 
         */
        public Builder devices(List<NatRuleTargetDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices The Devices param.
         * 
         * @return builder
         * 
         */
        public Builder devices(NatRuleTargetDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param negate The Negate param.
         * 
         * @return builder
         * 
         */
        public Builder negate(@Nullable Output<Boolean> negate) {
            $.negate = negate;
            return this;
        }

        /**
         * @param negate The Negate param.
         * 
         * @return builder
         * 
         */
        public Builder negate(Boolean negate) {
            return negate(Output.of(negate));
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public NatRuleTargetArgs build() {
            return $;
        }
    }

}
