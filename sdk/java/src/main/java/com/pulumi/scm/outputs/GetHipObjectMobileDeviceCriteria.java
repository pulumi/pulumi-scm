// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectMobileDeviceCriteriaApplications;
import com.pulumi.scm.outputs.GetHipObjectMobileDeviceCriteriaImei;
import com.pulumi.scm.outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTime;
import com.pulumi.scm.outputs.GetHipObjectMobileDeviceCriteriaModel;
import com.pulumi.scm.outputs.GetHipObjectMobileDeviceCriteriaPhoneNumber;
import com.pulumi.scm.outputs.GetHipObjectMobileDeviceCriteriaTag;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetHipObjectMobileDeviceCriteria {
    /**
     * @return The Applications param.
     * 
     */
    private GetHipObjectMobileDeviceCriteriaApplications applications;
    /**
     * @return If device&#39;s disk is encrypted.
     * 
     */
    private Boolean diskEncrypted;
    /**
     * @return The Imei param.
     * 
     */
    private GetHipObjectMobileDeviceCriteriaImei imei;
    /**
     * @return If device is by rooted/jailbroken.
     * 
     */
    private Boolean jailbroken;
    /**
     * @return The LastCheckinTime param.
     * 
     */
    private GetHipObjectMobileDeviceCriteriaLastCheckinTime lastCheckinTime;
    /**
     * @return The Model param.
     * 
     */
    private GetHipObjectMobileDeviceCriteriaModel model;
    /**
     * @return If device&#39;s passcode is present.
     * 
     */
    private Boolean passcodeSet;
    /**
     * @return The PhoneNumber param.
     * 
     */
    private GetHipObjectMobileDeviceCriteriaPhoneNumber phoneNumber;
    /**
     * @return The Tag param.
     * 
     */
    private GetHipObjectMobileDeviceCriteriaTag tag;

    private GetHipObjectMobileDeviceCriteria() {}
    /**
     * @return The Applications param.
     * 
     */
    public GetHipObjectMobileDeviceCriteriaApplications applications() {
        return this.applications;
    }
    /**
     * @return If device&#39;s disk is encrypted.
     * 
     */
    public Boolean diskEncrypted() {
        return this.diskEncrypted;
    }
    /**
     * @return The Imei param.
     * 
     */
    public GetHipObjectMobileDeviceCriteriaImei imei() {
        return this.imei;
    }
    /**
     * @return If device is by rooted/jailbroken.
     * 
     */
    public Boolean jailbroken() {
        return this.jailbroken;
    }
    /**
     * @return The LastCheckinTime param.
     * 
     */
    public GetHipObjectMobileDeviceCriteriaLastCheckinTime lastCheckinTime() {
        return this.lastCheckinTime;
    }
    /**
     * @return The Model param.
     * 
     */
    public GetHipObjectMobileDeviceCriteriaModel model() {
        return this.model;
    }
    /**
     * @return If device&#39;s passcode is present.
     * 
     */
    public Boolean passcodeSet() {
        return this.passcodeSet;
    }
    /**
     * @return The PhoneNumber param.
     * 
     */
    public GetHipObjectMobileDeviceCriteriaPhoneNumber phoneNumber() {
        return this.phoneNumber;
    }
    /**
     * @return The Tag param.
     * 
     */
    public GetHipObjectMobileDeviceCriteriaTag tag() {
        return this.tag;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectMobileDeviceCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetHipObjectMobileDeviceCriteriaApplications applications;
        private Boolean diskEncrypted;
        private GetHipObjectMobileDeviceCriteriaImei imei;
        private Boolean jailbroken;
        private GetHipObjectMobileDeviceCriteriaLastCheckinTime lastCheckinTime;
        private GetHipObjectMobileDeviceCriteriaModel model;
        private Boolean passcodeSet;
        private GetHipObjectMobileDeviceCriteriaPhoneNumber phoneNumber;
        private GetHipObjectMobileDeviceCriteriaTag tag;
        public Builder() {}
        public Builder(GetHipObjectMobileDeviceCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applications = defaults.applications;
    	      this.diskEncrypted = defaults.diskEncrypted;
    	      this.imei = defaults.imei;
    	      this.jailbroken = defaults.jailbroken;
    	      this.lastCheckinTime = defaults.lastCheckinTime;
    	      this.model = defaults.model;
    	      this.passcodeSet = defaults.passcodeSet;
    	      this.phoneNumber = defaults.phoneNumber;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder applications(GetHipObjectMobileDeviceCriteriaApplications applications) {
            if (applications == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "applications");
            }
            this.applications = applications;
            return this;
        }
        @CustomType.Setter
        public Builder diskEncrypted(Boolean diskEncrypted) {
            if (diskEncrypted == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "diskEncrypted");
            }
            this.diskEncrypted = diskEncrypted;
            return this;
        }
        @CustomType.Setter
        public Builder imei(GetHipObjectMobileDeviceCriteriaImei imei) {
            if (imei == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "imei");
            }
            this.imei = imei;
            return this;
        }
        @CustomType.Setter
        public Builder jailbroken(Boolean jailbroken) {
            if (jailbroken == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "jailbroken");
            }
            this.jailbroken = jailbroken;
            return this;
        }
        @CustomType.Setter
        public Builder lastCheckinTime(GetHipObjectMobileDeviceCriteriaLastCheckinTime lastCheckinTime) {
            if (lastCheckinTime == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "lastCheckinTime");
            }
            this.lastCheckinTime = lastCheckinTime;
            return this;
        }
        @CustomType.Setter
        public Builder model(GetHipObjectMobileDeviceCriteriaModel model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder passcodeSet(Boolean passcodeSet) {
            if (passcodeSet == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "passcodeSet");
            }
            this.passcodeSet = passcodeSet;
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(GetHipObjectMobileDeviceCriteriaPhoneNumber phoneNumber) {
            if (phoneNumber == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "phoneNumber");
            }
            this.phoneNumber = phoneNumber;
            return this;
        }
        @CustomType.Setter
        public Builder tag(GetHipObjectMobileDeviceCriteriaTag tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetHipObjectMobileDeviceCriteria", "tag");
            }
            this.tag = tag;
            return this;
        }
        public GetHipObjectMobileDeviceCriteria build() {
            final var _resultValue = new GetHipObjectMobileDeviceCriteria();
            _resultValue.applications = applications;
            _resultValue.diskEncrypted = diskEncrypted;
            _resultValue.imei = imei;
            _resultValue.jailbroken = jailbroken;
            _resultValue.lastCheckinTime = lastCheckinTime;
            _resultValue.model = model;
            _resultValue.passcodeSet = passcodeSet;
            _resultValue.phoneNumber = phoneNumber;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
