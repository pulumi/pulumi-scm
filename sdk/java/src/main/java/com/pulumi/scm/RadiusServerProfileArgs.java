// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.RadiusServerProfileProtocolArgs;
import com.pulumi.scm.inputs.RadiusServerProfileServerArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RadiusServerProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final RadiusServerProfileArgs Empty = new RadiusServerProfileArgs();

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The Protocol param.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<RadiusServerProfileProtocolArgs> protocol;

    /**
     * @return The Protocol param.
     * 
     */
    public Optional<Output<RadiusServerProfileProtocolArgs>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * The Retries param. Value must be between 1 and 5.
     * 
     */
    @Import(name="retries")
    private @Nullable Output<Integer> retries;

    /**
     * @return The Retries param. Value must be between 1 and 5.
     * 
     */
    public Optional<Output<Integer>> retries() {
        return Optional.ofNullable(this.retries);
    }

    /**
     * The Servers param.
     * 
     */
    @Import(name="servers", required=true)
    private Output<List<RadiusServerProfileServerArgs>> servers;

    /**
     * @return The Servers param.
     * 
     */
    public Output<List<RadiusServerProfileServerArgs>> servers() {
        return this.servers;
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The Timeout param. Value must be between 1 and 120.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return The Timeout param. Value must be between 1 and 120.
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private RadiusServerProfileArgs() {}

    private RadiusServerProfileArgs(RadiusServerProfileArgs $) {
        this.device = $.device;
        this.folder = $.folder;
        this.protocol = $.protocol;
        this.retries = $.retries;
        this.servers = $.servers;
        this.snippet = $.snippet;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RadiusServerProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RadiusServerProfileArgs $;

        public Builder() {
            $ = new RadiusServerProfileArgs();
        }

        public Builder(RadiusServerProfileArgs defaults) {
            $ = new RadiusServerProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param protocol The Protocol param.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<RadiusServerProfileProtocolArgs> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The Protocol param.
         * 
         * @return builder
         * 
         */
        public Builder protocol(RadiusServerProfileProtocolArgs protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param retries The Retries param. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder retries(@Nullable Output<Integer> retries) {
            $.retries = retries;
            return this;
        }

        /**
         * @param retries The Retries param. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder retries(Integer retries) {
            return retries(Output.of(retries));
        }

        /**
         * @param servers The Servers param.
         * 
         * @return builder
         * 
         */
        public Builder servers(Output<List<RadiusServerProfileServerArgs>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers The Servers param.
         * 
         * @return builder
         * 
         */
        public Builder servers(List<RadiusServerProfileServerArgs> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers The Servers param.
         * 
         * @return builder
         * 
         */
        public Builder servers(RadiusServerProfileServerArgs... servers) {
            return servers(List.of(servers));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param timeout The Timeout param. Value must be between 1 and 120.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout The Timeout param. Value must be between 1 and 120.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public RadiusServerProfileArgs build() {
            if ($.servers == null) {
                throw new MissingRequiredPropertyException("RadiusServerProfileArgs", "servers");
            }
            return $;
        }
    }

}
