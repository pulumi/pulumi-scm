// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DecryptionProfileSslInboundProxy {
    /**
     * @return The BlockIfHsmUnavailable param. Default: `false`.
     * 
     */
    private @Nullable Boolean blockIfHsmUnavailable;
    /**
     * @return The BlockIfNoResource param. Default: `false`.
     * 
     */
    private @Nullable Boolean blockIfNoResource;
    /**
     * @return The BlockUnsupportedCipher param. Default: `false`.
     * 
     */
    private @Nullable Boolean blockUnsupportedCipher;
    /**
     * @return The BlockUnsupportedVersion param. Default: `false`.
     * 
     */
    private @Nullable Boolean blockUnsupportedVersion;

    private DecryptionProfileSslInboundProxy() {}
    /**
     * @return The BlockIfHsmUnavailable param. Default: `false`.
     * 
     */
    public Optional<Boolean> blockIfHsmUnavailable() {
        return Optional.ofNullable(this.blockIfHsmUnavailable);
    }
    /**
     * @return The BlockIfNoResource param. Default: `false`.
     * 
     */
    public Optional<Boolean> blockIfNoResource() {
        return Optional.ofNullable(this.blockIfNoResource);
    }
    /**
     * @return The BlockUnsupportedCipher param. Default: `false`.
     * 
     */
    public Optional<Boolean> blockUnsupportedCipher() {
        return Optional.ofNullable(this.blockUnsupportedCipher);
    }
    /**
     * @return The BlockUnsupportedVersion param. Default: `false`.
     * 
     */
    public Optional<Boolean> blockUnsupportedVersion() {
        return Optional.ofNullable(this.blockUnsupportedVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DecryptionProfileSslInboundProxy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean blockIfHsmUnavailable;
        private @Nullable Boolean blockIfNoResource;
        private @Nullable Boolean blockUnsupportedCipher;
        private @Nullable Boolean blockUnsupportedVersion;
        public Builder() {}
        public Builder(DecryptionProfileSslInboundProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockIfHsmUnavailable = defaults.blockIfHsmUnavailable;
    	      this.blockIfNoResource = defaults.blockIfNoResource;
    	      this.blockUnsupportedCipher = defaults.blockUnsupportedCipher;
    	      this.blockUnsupportedVersion = defaults.blockUnsupportedVersion;
        }

        @CustomType.Setter
        public Builder blockIfHsmUnavailable(@Nullable Boolean blockIfHsmUnavailable) {

            this.blockIfHsmUnavailable = blockIfHsmUnavailable;
            return this;
        }
        @CustomType.Setter
        public Builder blockIfNoResource(@Nullable Boolean blockIfNoResource) {

            this.blockIfNoResource = blockIfNoResource;
            return this;
        }
        @CustomType.Setter
        public Builder blockUnsupportedCipher(@Nullable Boolean blockUnsupportedCipher) {

            this.blockUnsupportedCipher = blockUnsupportedCipher;
            return this;
        }
        @CustomType.Setter
        public Builder blockUnsupportedVersion(@Nullable Boolean blockUnsupportedVersion) {

            this.blockUnsupportedVersion = blockUnsupportedVersion;
            return this;
        }
        public DecryptionProfileSslInboundProxy build() {
            final var _resultValue = new DecryptionProfileSslInboundProxy();
            _resultValue.blockIfHsmUnavailable = blockIfHsmUnavailable;
            _resultValue.blockIfNoResource = blockIfNoResource;
            _resultValue.blockUnsupportedCipher = blockUnsupportedCipher;
            _resultValue.blockUnsupportedVersion = blockUnsupportedVersion;
            return _resultValue;
        }
    }
}
