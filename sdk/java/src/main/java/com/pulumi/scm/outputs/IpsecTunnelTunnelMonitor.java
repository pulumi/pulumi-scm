// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IpsecTunnelTunnelMonitor {
    /**
     * @return Destination IP to send ICMP probe.
     * 
     */
    private String destinationIp;
    /**
     * @return Enable tunnel monitoring on this tunnel. Default: `true`.
     * 
     */
    private @Nullable Boolean enable;
    /**
     * @return Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
     * 
     */
    private @Nullable String proxyId;

    private IpsecTunnelTunnelMonitor() {}
    /**
     * @return Destination IP to send ICMP probe.
     * 
     */
    public String destinationIp() {
        return this.destinationIp;
    }
    /**
     * @return Enable tunnel monitoring on this tunnel. Default: `true`.
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
     * 
     */
    public Optional<String> proxyId() {
        return Optional.ofNullable(this.proxyId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IpsecTunnelTunnelMonitor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String destinationIp;
        private @Nullable Boolean enable;
        private @Nullable String proxyId;
        public Builder() {}
        public Builder(IpsecTunnelTunnelMonitor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationIp = defaults.destinationIp;
    	      this.enable = defaults.enable;
    	      this.proxyId = defaults.proxyId;
        }

        @CustomType.Setter
        public Builder destinationIp(String destinationIp) {
            if (destinationIp == null) {
              throw new MissingRequiredPropertyException("IpsecTunnelTunnelMonitor", "destinationIp");
            }
            this.destinationIp = destinationIp;
            return this;
        }
        @CustomType.Setter
        public Builder enable(@Nullable Boolean enable) {

            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder proxyId(@Nullable String proxyId) {

            this.proxyId = proxyId;
            return this;
        }
        public IpsecTunnelTunnelMonitor build() {
            final var _resultValue = new IpsecTunnelTunnelMonitor();
            _resultValue.destinationIp = destinationIp;
            _resultValue.enable = enable;
            _resultValue.proxyId = proxyId;
            return _resultValue;
        }
    }
}
