// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import com.pulumi.scm.Utilities;
import com.pulumi.scm.inputs.GetAddressGroupArgs;
import com.pulumi.scm.inputs.GetAddressGroupListArgs;
import com.pulumi.scm.inputs.GetAddressGroupListPlainArgs;
import com.pulumi.scm.inputs.GetAddressGroupPlainArgs;
import com.pulumi.scm.inputs.GetAddressObjectArgs;
import com.pulumi.scm.inputs.GetAddressObjectListArgs;
import com.pulumi.scm.inputs.GetAddressObjectListPlainArgs;
import com.pulumi.scm.inputs.GetAddressObjectPlainArgs;
import com.pulumi.scm.inputs.GetAntiSpywareProfileArgs;
import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
import com.pulumi.scm.inputs.GetAntiSpywareProfileListPlainArgs;
import com.pulumi.scm.inputs.GetAntiSpywareProfilePlainArgs;
import com.pulumi.scm.inputs.GetAntiSpywareSignatureArgs;
import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
import com.pulumi.scm.inputs.GetAntiSpywareSignatureListPlainArgs;
import com.pulumi.scm.inputs.GetAntiSpywareSignaturePlainArgs;
import com.pulumi.scm.inputs.GetAppOverrideRuleArgs;
import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
import com.pulumi.scm.inputs.GetAppOverrideRuleListPlainArgs;
import com.pulumi.scm.inputs.GetAppOverrideRulePlainArgs;
import com.pulumi.scm.inputs.GetApplicationArgs;
import com.pulumi.scm.inputs.GetApplicationFilterArgs;
import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
import com.pulumi.scm.inputs.GetApplicationFilterListPlainArgs;
import com.pulumi.scm.inputs.GetApplicationFilterPlainArgs;
import com.pulumi.scm.inputs.GetApplicationGroupArgs;
import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
import com.pulumi.scm.inputs.GetApplicationGroupListPlainArgs;
import com.pulumi.scm.inputs.GetApplicationGroupPlainArgs;
import com.pulumi.scm.inputs.GetApplicationListArgs;
import com.pulumi.scm.inputs.GetApplicationListPlainArgs;
import com.pulumi.scm.inputs.GetApplicationPlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationPortalArgs;
import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
import com.pulumi.scm.inputs.GetAuthenticationPortalListPlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationPortalPlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationProfileArgs;
import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
import com.pulumi.scm.inputs.GetAuthenticationProfileListPlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationProfilePlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationRuleArgs;
import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
import com.pulumi.scm.inputs.GetAuthenticationRuleListPlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationRulePlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationSequenceArgs;
import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
import com.pulumi.scm.inputs.GetAuthenticationSequenceListPlainArgs;
import com.pulumi.scm.inputs.GetAuthenticationSequencePlainArgs;
import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
import com.pulumi.scm.inputs.GetAutoTagActionsListPlainArgs;
import com.pulumi.scm.inputs.GetCertificateProfileArgs;
import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
import com.pulumi.scm.inputs.GetCertificateProfileListPlainArgs;
import com.pulumi.scm.inputs.GetCertificateProfilePlainArgs;
import com.pulumi.scm.inputs.GetDecryptionExclusionArgs;
import com.pulumi.scm.inputs.GetDecryptionExclusionPlainArgs;
import com.pulumi.scm.inputs.GetDecryptionProfileArgs;
import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
import com.pulumi.scm.inputs.GetDecryptionProfileListPlainArgs;
import com.pulumi.scm.inputs.GetDecryptionProfilePlainArgs;
import com.pulumi.scm.inputs.GetDecryptionRuleArgs;
import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
import com.pulumi.scm.inputs.GetDecryptionRuleListPlainArgs;
import com.pulumi.scm.inputs.GetDecryptionRulePlainArgs;
import com.pulumi.scm.inputs.GetDeviceArgs;
import com.pulumi.scm.inputs.GetDeviceListArgs;
import com.pulumi.scm.inputs.GetDeviceListPlainArgs;
import com.pulumi.scm.inputs.GetDevicePlainArgs;
import com.pulumi.scm.inputs.GetDnsSecurityProfileArgs;
import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
import com.pulumi.scm.inputs.GetDnsSecurityProfileListPlainArgs;
import com.pulumi.scm.inputs.GetDnsSecurityProfilePlainArgs;
import com.pulumi.scm.inputs.GetDynamicUserGroupArgs;
import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
import com.pulumi.scm.inputs.GetDynamicUserGroupListPlainArgs;
import com.pulumi.scm.inputs.GetDynamicUserGroupPlainArgs;
import com.pulumi.scm.inputs.GetExternalDynamicListArgs;
import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
import com.pulumi.scm.inputs.GetExternalDynamicListListPlainArgs;
import com.pulumi.scm.inputs.GetExternalDynamicListPlainArgs;
import com.pulumi.scm.inputs.GetFileBlockingProfileArgs;
import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
import com.pulumi.scm.inputs.GetFileBlockingProfileListPlainArgs;
import com.pulumi.scm.inputs.GetFileBlockingProfilePlainArgs;
import com.pulumi.scm.inputs.GetHipObjectArgs;
import com.pulumi.scm.inputs.GetHipObjectListArgs;
import com.pulumi.scm.inputs.GetHipObjectListPlainArgs;
import com.pulumi.scm.inputs.GetHipObjectPlainArgs;
import com.pulumi.scm.inputs.GetHipProfileArgs;
import com.pulumi.scm.inputs.GetHipProfileListArgs;
import com.pulumi.scm.inputs.GetHipProfileListPlainArgs;
import com.pulumi.scm.inputs.GetHipProfilePlainArgs;
import com.pulumi.scm.inputs.GetHttpHeaderProfileArgs;
import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
import com.pulumi.scm.inputs.GetHttpHeaderProfileListPlainArgs;
import com.pulumi.scm.inputs.GetHttpHeaderProfilePlainArgs;
import com.pulumi.scm.inputs.GetIkeCryptoProfileArgs;
import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
import com.pulumi.scm.inputs.GetIkeCryptoProfileListPlainArgs;
import com.pulumi.scm.inputs.GetIkeCryptoProfilePlainArgs;
import com.pulumi.scm.inputs.GetIkeGatewayArgs;
import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
import com.pulumi.scm.inputs.GetIkeGatewayListPlainArgs;
import com.pulumi.scm.inputs.GetIkeGatewayPlainArgs;
import com.pulumi.scm.inputs.GetInternalDnsServerArgs;
import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
import com.pulumi.scm.inputs.GetInternalDnsServerListPlainArgs;
import com.pulumi.scm.inputs.GetInternalDnsServerPlainArgs;
import com.pulumi.scm.inputs.GetIpsecCryptoProfileArgs;
import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
import com.pulumi.scm.inputs.GetIpsecCryptoProfileListPlainArgs;
import com.pulumi.scm.inputs.GetIpsecCryptoProfilePlainArgs;
import com.pulumi.scm.inputs.GetIpsecTunnelArgs;
import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
import com.pulumi.scm.inputs.GetIpsecTunnelListPlainArgs;
import com.pulumi.scm.inputs.GetIpsecTunnelPlainArgs;
import com.pulumi.scm.inputs.GetJobsArgs;
import com.pulumi.scm.inputs.GetJobsPlainArgs;
import com.pulumi.scm.inputs.GetKerberosServerProfileArgs;
import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
import com.pulumi.scm.inputs.GetKerberosServerProfileListPlainArgs;
import com.pulumi.scm.inputs.GetKerberosServerProfilePlainArgs;
import com.pulumi.scm.inputs.GetLabelListArgs;
import com.pulumi.scm.inputs.GetLabelListPlainArgs;
import com.pulumi.scm.inputs.GetLabelsGetbyidResponseArgs;
import com.pulumi.scm.inputs.GetLabelsGetbyidResponsePlainArgs;
import com.pulumi.scm.inputs.GetLdapServerProfileArgs;
import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
import com.pulumi.scm.inputs.GetLdapServerProfileListPlainArgs;
import com.pulumi.scm.inputs.GetLdapServerProfilePlainArgs;
import com.pulumi.scm.inputs.GetLocalUserArgs;
import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
import com.pulumi.scm.inputs.GetLocalUserGroupListPlainArgs;
import com.pulumi.scm.inputs.GetLocalUserListArgs;
import com.pulumi.scm.inputs.GetLocalUserListPlainArgs;
import com.pulumi.scm.inputs.GetLocalUserPlainArgs;
import com.pulumi.scm.inputs.GetMfaServerArgs;
import com.pulumi.scm.inputs.GetMfaServerPlainArgs;
import com.pulumi.scm.inputs.GetNatRuleArgs;
import com.pulumi.scm.inputs.GetNatRuleListArgs;
import com.pulumi.scm.inputs.GetNatRuleListPlainArgs;
import com.pulumi.scm.inputs.GetNatRulePlainArgs;
import com.pulumi.scm.inputs.GetOcspResponderArgs;
import com.pulumi.scm.inputs.GetOcspResponderListArgs;
import com.pulumi.scm.inputs.GetOcspResponderListPlainArgs;
import com.pulumi.scm.inputs.GetOcspResponderPlainArgs;
import com.pulumi.scm.inputs.GetProfileGroupArgs;
import com.pulumi.scm.inputs.GetProfileGroupListArgs;
import com.pulumi.scm.inputs.GetProfileGroupListPlainArgs;
import com.pulumi.scm.inputs.GetProfileGroupPlainArgs;
import com.pulumi.scm.inputs.GetQosPolicyRuleArgs;
import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
import com.pulumi.scm.inputs.GetQosPolicyRuleListPlainArgs;
import com.pulumi.scm.inputs.GetQosPolicyRulePlainArgs;
import com.pulumi.scm.inputs.GetQosProfileArgs;
import com.pulumi.scm.inputs.GetQosProfileListArgs;
import com.pulumi.scm.inputs.GetQosProfileListPlainArgs;
import com.pulumi.scm.inputs.GetQosProfilePlainArgs;
import com.pulumi.scm.inputs.GetRadiusServerProfileArgs;
import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
import com.pulumi.scm.inputs.GetRadiusServerProfileListPlainArgs;
import com.pulumi.scm.inputs.GetRadiusServerProfilePlainArgs;
import com.pulumi.scm.inputs.GetRegionArgs;
import com.pulumi.scm.inputs.GetRegionListArgs;
import com.pulumi.scm.inputs.GetRegionListPlainArgs;
import com.pulumi.scm.inputs.GetRegionPlainArgs;
import com.pulumi.scm.inputs.GetRemoteNetworkArgs;
import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
import com.pulumi.scm.inputs.GetRemoteNetworkListPlainArgs;
import com.pulumi.scm.inputs.GetRemoteNetworkPlainArgs;
import com.pulumi.scm.inputs.GetSamlServerProfileArgs;
import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
import com.pulumi.scm.inputs.GetSamlServerProfileListPlainArgs;
import com.pulumi.scm.inputs.GetSamlServerProfilePlainArgs;
import com.pulumi.scm.inputs.GetScepProfileArgs;
import com.pulumi.scm.inputs.GetScepProfileListArgs;
import com.pulumi.scm.inputs.GetScepProfileListPlainArgs;
import com.pulumi.scm.inputs.GetScepProfilePlainArgs;
import com.pulumi.scm.inputs.GetScheduleArgs;
import com.pulumi.scm.inputs.GetScheduleListArgs;
import com.pulumi.scm.inputs.GetScheduleListPlainArgs;
import com.pulumi.scm.inputs.GetSchedulePlainArgs;
import com.pulumi.scm.inputs.GetSecurityRuleArgs;
import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
import com.pulumi.scm.inputs.GetSecurityRuleListPlainArgs;
import com.pulumi.scm.inputs.GetSecurityRulePlainArgs;
import com.pulumi.scm.inputs.GetServiceArgs;
import com.pulumi.scm.inputs.GetServiceConnectionArgs;
import com.pulumi.scm.inputs.GetServiceConnectionGroupArgs;
import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
import com.pulumi.scm.inputs.GetServiceConnectionGroupListPlainArgs;
import com.pulumi.scm.inputs.GetServiceConnectionGroupPlainArgs;
import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
import com.pulumi.scm.inputs.GetServiceConnectionListPlainArgs;
import com.pulumi.scm.inputs.GetServiceConnectionPlainArgs;
import com.pulumi.scm.inputs.GetServiceGroupArgs;
import com.pulumi.scm.inputs.GetServiceGroupListArgs;
import com.pulumi.scm.inputs.GetServiceGroupListPlainArgs;
import com.pulumi.scm.inputs.GetServiceGroupPlainArgs;
import com.pulumi.scm.inputs.GetServiceListArgs;
import com.pulumi.scm.inputs.GetServiceListPlainArgs;
import com.pulumi.scm.inputs.GetServicePlainArgs;
import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListPlainArgs;
import com.pulumi.scm.inputs.GetSnippetArgs;
import com.pulumi.scm.inputs.GetSnippetListArgs;
import com.pulumi.scm.inputs.GetSnippetListPlainArgs;
import com.pulumi.scm.inputs.GetSnippetPlainArgs;
import com.pulumi.scm.inputs.GetTacacsServerProfileArgs;
import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
import com.pulumi.scm.inputs.GetTacacsServerProfileListPlainArgs;
import com.pulumi.scm.inputs.GetTacacsServerProfilePlainArgs;
import com.pulumi.scm.inputs.GetTagArgs;
import com.pulumi.scm.inputs.GetTagListArgs;
import com.pulumi.scm.inputs.GetTagListPlainArgs;
import com.pulumi.scm.inputs.GetTagPlainArgs;
import com.pulumi.scm.inputs.GetTlsServiceProfileArgs;
import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
import com.pulumi.scm.inputs.GetTlsServiceProfileListPlainArgs;
import com.pulumi.scm.inputs.GetTlsServiceProfilePlainArgs;
import com.pulumi.scm.inputs.GetTrafficSteeringRuleArgs;
import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
import com.pulumi.scm.inputs.GetTrafficSteeringRuleListPlainArgs;
import com.pulumi.scm.inputs.GetTrafficSteeringRulePlainArgs;
import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListPlainArgs;
import com.pulumi.scm.inputs.GetUrlAccessProfileArgs;
import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
import com.pulumi.scm.inputs.GetUrlAccessProfileListPlainArgs;
import com.pulumi.scm.inputs.GetUrlAccessProfilePlainArgs;
import com.pulumi.scm.inputs.GetUrlCategoryArgs;
import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
import com.pulumi.scm.inputs.GetUrlCategoryListPlainArgs;
import com.pulumi.scm.inputs.GetUrlCategoryPlainArgs;
import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
import com.pulumi.scm.inputs.GetUrlFilteringCategoryListPlainArgs;
import com.pulumi.scm.inputs.GetVariableArgs;
import com.pulumi.scm.inputs.GetVariableListArgs;
import com.pulumi.scm.inputs.GetVariableListPlainArgs;
import com.pulumi.scm.inputs.GetVariablePlainArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListPlainArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfilePlainArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListPlainArgs;
import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesPlainArgs;
import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileArgs;
import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListPlainArgs;
import com.pulumi.scm.inputs.GetWildfireAntiVirusProfilePlainArgs;
import com.pulumi.scm.outputs.GetAddressGroupListResult;
import com.pulumi.scm.outputs.GetAddressGroupResult;
import com.pulumi.scm.outputs.GetAddressObjectListResult;
import com.pulumi.scm.outputs.GetAddressObjectResult;
import com.pulumi.scm.outputs.GetAntiSpywareProfileListResult;
import com.pulumi.scm.outputs.GetAntiSpywareProfileResult;
import com.pulumi.scm.outputs.GetAntiSpywareSignatureListResult;
import com.pulumi.scm.outputs.GetAntiSpywareSignatureResult;
import com.pulumi.scm.outputs.GetAppOverrideRuleListResult;
import com.pulumi.scm.outputs.GetAppOverrideRuleResult;
import com.pulumi.scm.outputs.GetApplicationFilterListResult;
import com.pulumi.scm.outputs.GetApplicationFilterResult;
import com.pulumi.scm.outputs.GetApplicationGroupListResult;
import com.pulumi.scm.outputs.GetApplicationGroupResult;
import com.pulumi.scm.outputs.GetApplicationListResult;
import com.pulumi.scm.outputs.GetApplicationResult;
import com.pulumi.scm.outputs.GetAuthenticationPortalListResult;
import com.pulumi.scm.outputs.GetAuthenticationPortalResult;
import com.pulumi.scm.outputs.GetAuthenticationProfileListResult;
import com.pulumi.scm.outputs.GetAuthenticationProfileResult;
import com.pulumi.scm.outputs.GetAuthenticationRuleListResult;
import com.pulumi.scm.outputs.GetAuthenticationRuleResult;
import com.pulumi.scm.outputs.GetAuthenticationSequenceListResult;
import com.pulumi.scm.outputs.GetAuthenticationSequenceResult;
import com.pulumi.scm.outputs.GetAutoTagActionsListResult;
import com.pulumi.scm.outputs.GetCertificateProfileListResult;
import com.pulumi.scm.outputs.GetCertificateProfileResult;
import com.pulumi.scm.outputs.GetDecryptionExclusionResult;
import com.pulumi.scm.outputs.GetDecryptionProfileListResult;
import com.pulumi.scm.outputs.GetDecryptionProfileResult;
import com.pulumi.scm.outputs.GetDecryptionRuleListResult;
import com.pulumi.scm.outputs.GetDecryptionRuleResult;
import com.pulumi.scm.outputs.GetDeviceListResult;
import com.pulumi.scm.outputs.GetDeviceResult;
import com.pulumi.scm.outputs.GetDnsSecurityProfileListResult;
import com.pulumi.scm.outputs.GetDnsSecurityProfileResult;
import com.pulumi.scm.outputs.GetDynamicUserGroupListResult;
import com.pulumi.scm.outputs.GetDynamicUserGroupResult;
import com.pulumi.scm.outputs.GetExternalDynamicListListResult;
import com.pulumi.scm.outputs.GetExternalDynamicListResult;
import com.pulumi.scm.outputs.GetFileBlockingProfileListResult;
import com.pulumi.scm.outputs.GetFileBlockingProfileResult;
import com.pulumi.scm.outputs.GetHipObjectListResult;
import com.pulumi.scm.outputs.GetHipObjectResult;
import com.pulumi.scm.outputs.GetHipProfileListResult;
import com.pulumi.scm.outputs.GetHipProfileResult;
import com.pulumi.scm.outputs.GetHttpHeaderProfileListResult;
import com.pulumi.scm.outputs.GetHttpHeaderProfileResult;
import com.pulumi.scm.outputs.GetIkeCryptoProfileListResult;
import com.pulumi.scm.outputs.GetIkeCryptoProfileResult;
import com.pulumi.scm.outputs.GetIkeGatewayListResult;
import com.pulumi.scm.outputs.GetIkeGatewayResult;
import com.pulumi.scm.outputs.GetInternalDnsServerListResult;
import com.pulumi.scm.outputs.GetInternalDnsServerResult;
import com.pulumi.scm.outputs.GetIpsecCryptoProfileListResult;
import com.pulumi.scm.outputs.GetIpsecCryptoProfileResult;
import com.pulumi.scm.outputs.GetIpsecTunnelListResult;
import com.pulumi.scm.outputs.GetIpsecTunnelResult;
import com.pulumi.scm.outputs.GetJobsListResult;
import com.pulumi.scm.outputs.GetJobsResult;
import com.pulumi.scm.outputs.GetKerberosServerProfileListResult;
import com.pulumi.scm.outputs.GetKerberosServerProfileResult;
import com.pulumi.scm.outputs.GetLabelListResult;
import com.pulumi.scm.outputs.GetLabelsGetbyidResponseResult;
import com.pulumi.scm.outputs.GetLdapServerProfileListResult;
import com.pulumi.scm.outputs.GetLdapServerProfileResult;
import com.pulumi.scm.outputs.GetLocalUserGroupListResult;
import com.pulumi.scm.outputs.GetLocalUserListResult;
import com.pulumi.scm.outputs.GetLocalUserResult;
import com.pulumi.scm.outputs.GetMfaServerResult;
import com.pulumi.scm.outputs.GetNatRuleListResult;
import com.pulumi.scm.outputs.GetNatRuleResult;
import com.pulumi.scm.outputs.GetOcspResponderListResult;
import com.pulumi.scm.outputs.GetOcspResponderResult;
import com.pulumi.scm.outputs.GetProfileGroupListResult;
import com.pulumi.scm.outputs.GetProfileGroupResult;
import com.pulumi.scm.outputs.GetQosPolicyRuleListResult;
import com.pulumi.scm.outputs.GetQosPolicyRuleResult;
import com.pulumi.scm.outputs.GetQosProfileListResult;
import com.pulumi.scm.outputs.GetQosProfileResult;
import com.pulumi.scm.outputs.GetRadiusServerProfileListResult;
import com.pulumi.scm.outputs.GetRadiusServerProfileResult;
import com.pulumi.scm.outputs.GetRegionListResult;
import com.pulumi.scm.outputs.GetRegionResult;
import com.pulumi.scm.outputs.GetRemoteNetworkListResult;
import com.pulumi.scm.outputs.GetRemoteNetworkResult;
import com.pulumi.scm.outputs.GetSamlServerProfileListResult;
import com.pulumi.scm.outputs.GetSamlServerProfileResult;
import com.pulumi.scm.outputs.GetScepProfileListResult;
import com.pulumi.scm.outputs.GetScepProfileResult;
import com.pulumi.scm.outputs.GetScheduleListResult;
import com.pulumi.scm.outputs.GetScheduleResult;
import com.pulumi.scm.outputs.GetSecurityRuleListResult;
import com.pulumi.scm.outputs.GetSecurityRuleResult;
import com.pulumi.scm.outputs.GetServiceConnectionGroupListResult;
import com.pulumi.scm.outputs.GetServiceConnectionGroupResult;
import com.pulumi.scm.outputs.GetServiceConnectionListResult;
import com.pulumi.scm.outputs.GetServiceConnectionResult;
import com.pulumi.scm.outputs.GetServiceGroupListResult;
import com.pulumi.scm.outputs.GetServiceGroupResult;
import com.pulumi.scm.outputs.GetServiceListResult;
import com.pulumi.scm.outputs.GetServiceResult;
import com.pulumi.scm.outputs.GetSharedInfrastructureSettingsListResult;
import com.pulumi.scm.outputs.GetSnippetListResult;
import com.pulumi.scm.outputs.GetSnippetResult;
import com.pulumi.scm.outputs.GetTacacsServerProfileListResult;
import com.pulumi.scm.outputs.GetTacacsServerProfileResult;
import com.pulumi.scm.outputs.GetTagListResult;
import com.pulumi.scm.outputs.GetTagResult;
import com.pulumi.scm.outputs.GetTlsServiceProfileListResult;
import com.pulumi.scm.outputs.GetTlsServiceProfileResult;
import com.pulumi.scm.outputs.GetTrafficSteeringRuleListResult;
import com.pulumi.scm.outputs.GetTrafficSteeringRuleResult;
import com.pulumi.scm.outputs.GetTrustedCertificateAuthorityListResult;
import com.pulumi.scm.outputs.GetUrlAccessProfileListResult;
import com.pulumi.scm.outputs.GetUrlAccessProfileResult;
import com.pulumi.scm.outputs.GetUrlCategoryListResult;
import com.pulumi.scm.outputs.GetUrlCategoryResult;
import com.pulumi.scm.outputs.GetUrlFilteringCategoryListResult;
import com.pulumi.scm.outputs.GetVariableListResult;
import com.pulumi.scm.outputs.GetVariableResult;
import com.pulumi.scm.outputs.GetVulnerabilityProtectionProfileListResult;
import com.pulumi.scm.outputs.GetVulnerabilityProtectionProfileResult;
import com.pulumi.scm.outputs.GetVulnerabilityProtectionSignaturesListResult;
import com.pulumi.scm.outputs.GetVulnerabilityProtectionSignaturesResult;
import com.pulumi.scm.outputs.GetWildfireAntiVirusProfileListResult;
import com.pulumi.scm.outputs.GetWildfireAntiVirusProfileResult;
import java.util.concurrent.CompletableFuture;

public final class ScmFunctions {
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroup(GetAddressGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressGroupResult> getAddressGroup(GetAddressGroupArgs args) {
        return getAddressGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroup(GetAddressGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressGroupResult> getAddressGroupPlain(GetAddressGroupPlainArgs args) {
        return getAddressGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroup(GetAddressGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressGroupResult> getAddressGroup(GetAddressGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAddressGroup:getAddressGroup", TypeShape.of(GetAddressGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroup(GetAddressGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressGroupResult> getAddressGroupPlain(GetAddressGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAddressGroup:getAddressGroup", TypeShape.of(GetAddressGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroupList(GetAddressGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressGroupListResult> getAddressGroupList() {
        return getAddressGroupList(GetAddressGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroupList(GetAddressGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressGroupListResult> getAddressGroupListPlain() {
        return getAddressGroupListPlain(GetAddressGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroupList(GetAddressGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressGroupListResult> getAddressGroupList(GetAddressGroupListArgs args) {
        return getAddressGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroupList(GetAddressGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressGroupListResult> getAddressGroupListPlain(GetAddressGroupListPlainArgs args) {
        return getAddressGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroupList(GetAddressGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressGroupListResult> getAddressGroupList(GetAddressGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAddressGroupList:getAddressGroupList", TypeShape.of(GetAddressGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressGroupList(GetAddressGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressGroupListResult> getAddressGroupListPlain(GetAddressGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAddressGroupList:getAddressGroupList", TypeShape.of(GetAddressGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObject(GetAddressObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressObjectResult> getAddressObject(GetAddressObjectArgs args) {
        return getAddressObject(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObject(GetAddressObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressObjectResult> getAddressObjectPlain(GetAddressObjectPlainArgs args) {
        return getAddressObjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObject(GetAddressObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressObjectResult> getAddressObject(GetAddressObjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAddressObject:getAddressObject", TypeShape.of(GetAddressObjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObject(GetAddressObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressObjectResult> getAddressObjectPlain(GetAddressObjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAddressObject:getAddressObject", TypeShape.of(GetAddressObjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObjectList(GetAddressObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressObjectListResult> getAddressObjectList() {
        return getAddressObjectList(GetAddressObjectListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObjectList(GetAddressObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressObjectListResult> getAddressObjectListPlain() {
        return getAddressObjectListPlain(GetAddressObjectListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObjectList(GetAddressObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressObjectListResult> getAddressObjectList(GetAddressObjectListArgs args) {
        return getAddressObjectList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObjectList(GetAddressObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressObjectListResult> getAddressObjectListPlain(GetAddressObjectListPlainArgs args) {
        return getAddressObjectListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObjectList(GetAddressObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressObjectListResult> getAddressObjectList(GetAddressObjectListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAddressObjectList:getAddressObjectList", TypeShape.of(GetAddressObjectListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAddressObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAddressObjectList(GetAddressObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressObjectListResult> getAddressObjectListPlain(GetAddressObjectListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAddressObjectList:getAddressObjectList", TypeShape.of(GetAddressObjectListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfile(GetAntiSpywareProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareProfileResult> getAntiSpywareProfile(GetAntiSpywareProfileArgs args) {
        return getAntiSpywareProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfile(GetAntiSpywareProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareProfileResult> getAntiSpywareProfilePlain(GetAntiSpywareProfilePlainArgs args) {
        return getAntiSpywareProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfile(GetAntiSpywareProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareProfileResult> getAntiSpywareProfile(GetAntiSpywareProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAntiSpywareProfile:getAntiSpywareProfile", TypeShape.of(GetAntiSpywareProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfile(GetAntiSpywareProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareProfileResult> getAntiSpywareProfilePlain(GetAntiSpywareProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAntiSpywareProfile:getAntiSpywareProfile", TypeShape.of(GetAntiSpywareProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareProfileListResult> getAntiSpywareProfileList() {
        return getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareProfileListResult> getAntiSpywareProfileListPlain() {
        return getAntiSpywareProfileListPlain(GetAntiSpywareProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareProfileListResult> getAntiSpywareProfileList(GetAntiSpywareProfileListArgs args) {
        return getAntiSpywareProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareProfileListResult> getAntiSpywareProfileListPlain(GetAntiSpywareProfileListPlainArgs args) {
        return getAntiSpywareProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareProfileListResult> getAntiSpywareProfileList(GetAntiSpywareProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAntiSpywareProfileList:getAntiSpywareProfileList", TypeShape.of(GetAntiSpywareProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareProfileList(GetAntiSpywareProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareProfileListResult> getAntiSpywareProfileListPlain(GetAntiSpywareProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAntiSpywareProfileList:getAntiSpywareProfileList", TypeShape.of(GetAntiSpywareProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignature(GetAntiSpywareSignatureArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareSignatureResult> getAntiSpywareSignature(GetAntiSpywareSignatureArgs args) {
        return getAntiSpywareSignature(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignature(GetAntiSpywareSignatureArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareSignatureResult> getAntiSpywareSignaturePlain(GetAntiSpywareSignaturePlainArgs args) {
        return getAntiSpywareSignaturePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignature(GetAntiSpywareSignatureArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareSignatureResult> getAntiSpywareSignature(GetAntiSpywareSignatureArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAntiSpywareSignature:getAntiSpywareSignature", TypeShape.of(GetAntiSpywareSignatureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignature(GetAntiSpywareSignatureArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareSignatureResult> getAntiSpywareSignaturePlain(GetAntiSpywareSignaturePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAntiSpywareSignature:getAntiSpywareSignature", TypeShape.of(GetAntiSpywareSignatureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareSignatureListResult> getAntiSpywareSignatureList() {
        return getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareSignatureListResult> getAntiSpywareSignatureListPlain() {
        return getAntiSpywareSignatureListPlain(GetAntiSpywareSignatureListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareSignatureListResult> getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs args) {
        return getAntiSpywareSignatureList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareSignatureListResult> getAntiSpywareSignatureListPlain(GetAntiSpywareSignatureListPlainArgs args) {
        return getAntiSpywareSignatureListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAntiSpywareSignatureListResult> getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAntiSpywareSignatureList:getAntiSpywareSignatureList", TypeShape.of(GetAntiSpywareSignatureListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAntiSpywareSignatureListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAntiSpywareSignatureList(GetAntiSpywareSignatureListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAntiSpywareSignatureListResult> getAntiSpywareSignatureListPlain(GetAntiSpywareSignatureListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAntiSpywareSignatureList:getAntiSpywareSignatureList", TypeShape.of(GetAntiSpywareSignatureListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRule(GetAppOverrideRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppOverrideRuleResult> getAppOverrideRule(GetAppOverrideRuleArgs args) {
        return getAppOverrideRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRule(GetAppOverrideRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppOverrideRuleResult> getAppOverrideRulePlain(GetAppOverrideRulePlainArgs args) {
        return getAppOverrideRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRule(GetAppOverrideRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppOverrideRuleResult> getAppOverrideRule(GetAppOverrideRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAppOverrideRule:getAppOverrideRule", TypeShape.of(GetAppOverrideRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRule(GetAppOverrideRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppOverrideRuleResult> getAppOverrideRulePlain(GetAppOverrideRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAppOverrideRule:getAppOverrideRule", TypeShape.of(GetAppOverrideRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRuleList(GetAppOverrideRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppOverrideRuleListResult> getAppOverrideRuleList() {
        return getAppOverrideRuleList(GetAppOverrideRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRuleList(GetAppOverrideRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppOverrideRuleListResult> getAppOverrideRuleListPlain() {
        return getAppOverrideRuleListPlain(GetAppOverrideRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRuleList(GetAppOverrideRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppOverrideRuleListResult> getAppOverrideRuleList(GetAppOverrideRuleListArgs args) {
        return getAppOverrideRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRuleList(GetAppOverrideRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppOverrideRuleListResult> getAppOverrideRuleListPlain(GetAppOverrideRuleListPlainArgs args) {
        return getAppOverrideRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRuleList(GetAppOverrideRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAppOverrideRuleListResult> getAppOverrideRuleList(GetAppOverrideRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAppOverrideRuleList:getAppOverrideRuleList", TypeShape.of(GetAppOverrideRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAppOverrideRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAppOverrideRuleList(GetAppOverrideRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAppOverrideRuleListResult> getAppOverrideRuleListPlain(GetAppOverrideRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAppOverrideRuleList:getAppOverrideRuleList", TypeShape.of(GetAppOverrideRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplication(GetApplicationArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationResult> getApplication(GetApplicationArgs args) {
        return getApplication(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplication(GetApplicationArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationResult> getApplicationPlain(GetApplicationPlainArgs args) {
        return getApplicationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplication(GetApplicationArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationResult> getApplication(GetApplicationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getApplication:getApplication", TypeShape.of(GetApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplication(GetApplicationArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationResult> getApplicationPlain(GetApplicationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getApplication:getApplication", TypeShape.of(GetApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilter(GetApplicationFilterArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationFilterResult> getApplicationFilter(GetApplicationFilterArgs args) {
        return getApplicationFilter(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilter(GetApplicationFilterArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationFilterResult> getApplicationFilterPlain(GetApplicationFilterPlainArgs args) {
        return getApplicationFilterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilter(GetApplicationFilterArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationFilterResult> getApplicationFilter(GetApplicationFilterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getApplicationFilter:getApplicationFilter", TypeShape.of(GetApplicationFilterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilter(GetApplicationFilterArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationFilterResult> getApplicationFilterPlain(GetApplicationFilterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getApplicationFilter:getApplicationFilter", TypeShape.of(GetApplicationFilterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilterList(GetApplicationFilterListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationFilterListResult> getApplicationFilterList() {
        return getApplicationFilterList(GetApplicationFilterListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilterList(GetApplicationFilterListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationFilterListResult> getApplicationFilterListPlain() {
        return getApplicationFilterListPlain(GetApplicationFilterListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilterList(GetApplicationFilterListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationFilterListResult> getApplicationFilterList(GetApplicationFilterListArgs args) {
        return getApplicationFilterList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilterList(GetApplicationFilterListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationFilterListResult> getApplicationFilterListPlain(GetApplicationFilterListPlainArgs args) {
        return getApplicationFilterListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilterList(GetApplicationFilterListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationFilterListResult> getApplicationFilterList(GetApplicationFilterListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getApplicationFilterList:getApplicationFilterList", TypeShape.of(GetApplicationFilterListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationFilterListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationFilterList(GetApplicationFilterListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationFilterListResult> getApplicationFilterListPlain(GetApplicationFilterListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getApplicationFilterList:getApplicationFilterList", TypeShape.of(GetApplicationFilterListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroup(GetApplicationGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationGroupResult> getApplicationGroup(GetApplicationGroupArgs args) {
        return getApplicationGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroup(GetApplicationGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationGroupResult> getApplicationGroupPlain(GetApplicationGroupPlainArgs args) {
        return getApplicationGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroup(GetApplicationGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationGroupResult> getApplicationGroup(GetApplicationGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getApplicationGroup:getApplicationGroup", TypeShape.of(GetApplicationGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroup(GetApplicationGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationGroupResult> getApplicationGroupPlain(GetApplicationGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getApplicationGroup:getApplicationGroup", TypeShape.of(GetApplicationGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroupList(GetApplicationGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationGroupListResult> getApplicationGroupList() {
        return getApplicationGroupList(GetApplicationGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroupList(GetApplicationGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationGroupListResult> getApplicationGroupListPlain() {
        return getApplicationGroupListPlain(GetApplicationGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroupList(GetApplicationGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationGroupListResult> getApplicationGroupList(GetApplicationGroupListArgs args) {
        return getApplicationGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroupList(GetApplicationGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationGroupListResult> getApplicationGroupListPlain(GetApplicationGroupListPlainArgs args) {
        return getApplicationGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroupList(GetApplicationGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationGroupListResult> getApplicationGroupList(GetApplicationGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getApplicationGroupList:getApplicationGroupList", TypeShape.of(GetApplicationGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationGroupList(GetApplicationGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationGroupListResult> getApplicationGroupListPlain(GetApplicationGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getApplicationGroupList:getApplicationGroupList", TypeShape.of(GetApplicationGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationList(GetApplicationListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationListResult> getApplicationList() {
        return getApplicationList(GetApplicationListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationList(GetApplicationListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationListResult> getApplicationListPlain() {
        return getApplicationListPlain(GetApplicationListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationList(GetApplicationListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationListResult> getApplicationList(GetApplicationListArgs args) {
        return getApplicationList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationList(GetApplicationListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationListResult> getApplicationListPlain(GetApplicationListPlainArgs args) {
        return getApplicationListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationList(GetApplicationListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationListResult> getApplicationList(GetApplicationListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getApplicationList:getApplicationList", TypeShape.of(GetApplicationListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetApplicationListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getApplicationList(GetApplicationListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationListResult> getApplicationListPlain(GetApplicationListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getApplicationList:getApplicationList", TypeShape.of(GetApplicationListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortal(GetAuthenticationPortalArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationPortalResult> getAuthenticationPortal(GetAuthenticationPortalArgs args) {
        return getAuthenticationPortal(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortal(GetAuthenticationPortalArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationPortalResult> getAuthenticationPortalPlain(GetAuthenticationPortalPlainArgs args) {
        return getAuthenticationPortalPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortal(GetAuthenticationPortalArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationPortalResult> getAuthenticationPortal(GetAuthenticationPortalArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationPortal:getAuthenticationPortal", TypeShape.of(GetAuthenticationPortalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortal(GetAuthenticationPortalArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationPortalResult> getAuthenticationPortalPlain(GetAuthenticationPortalPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationPortal:getAuthenticationPortal", TypeShape.of(GetAuthenticationPortalResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortalList(GetAuthenticationPortalListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationPortalListResult> getAuthenticationPortalList() {
        return getAuthenticationPortalList(GetAuthenticationPortalListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortalList(GetAuthenticationPortalListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationPortalListResult> getAuthenticationPortalListPlain() {
        return getAuthenticationPortalListPlain(GetAuthenticationPortalListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortalList(GetAuthenticationPortalListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationPortalListResult> getAuthenticationPortalList(GetAuthenticationPortalListArgs args) {
        return getAuthenticationPortalList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortalList(GetAuthenticationPortalListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationPortalListResult> getAuthenticationPortalListPlain(GetAuthenticationPortalListPlainArgs args) {
        return getAuthenticationPortalListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortalList(GetAuthenticationPortalListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationPortalListResult> getAuthenticationPortalList(GetAuthenticationPortalListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationPortalList:getAuthenticationPortalList", TypeShape.of(GetAuthenticationPortalListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationPortalListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationPortalList(GetAuthenticationPortalListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationPortalListResult> getAuthenticationPortalListPlain(GetAuthenticationPortalListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationPortalList:getAuthenticationPortalList", TypeShape.of(GetAuthenticationPortalListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfile(GetAuthenticationProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationProfileResult> getAuthenticationProfile(GetAuthenticationProfileArgs args) {
        return getAuthenticationProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfile(GetAuthenticationProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationProfileResult> getAuthenticationProfilePlain(GetAuthenticationProfilePlainArgs args) {
        return getAuthenticationProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfile(GetAuthenticationProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationProfileResult> getAuthenticationProfile(GetAuthenticationProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationProfile:getAuthenticationProfile", TypeShape.of(GetAuthenticationProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfile(GetAuthenticationProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationProfileResult> getAuthenticationProfilePlain(GetAuthenticationProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationProfile:getAuthenticationProfile", TypeShape.of(GetAuthenticationProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfileList(GetAuthenticationProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationProfileListResult> getAuthenticationProfileList() {
        return getAuthenticationProfileList(GetAuthenticationProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfileList(GetAuthenticationProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationProfileListResult> getAuthenticationProfileListPlain() {
        return getAuthenticationProfileListPlain(GetAuthenticationProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfileList(GetAuthenticationProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationProfileListResult> getAuthenticationProfileList(GetAuthenticationProfileListArgs args) {
        return getAuthenticationProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfileList(GetAuthenticationProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationProfileListResult> getAuthenticationProfileListPlain(GetAuthenticationProfileListPlainArgs args) {
        return getAuthenticationProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfileList(GetAuthenticationProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationProfileListResult> getAuthenticationProfileList(GetAuthenticationProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationProfileList:getAuthenticationProfileList", TypeShape.of(GetAuthenticationProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationProfileList(GetAuthenticationProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationProfileListResult> getAuthenticationProfileListPlain(GetAuthenticationProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationProfileList:getAuthenticationProfileList", TypeShape.of(GetAuthenticationProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRule(GetAuthenticationRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationRuleResult> getAuthenticationRule(GetAuthenticationRuleArgs args) {
        return getAuthenticationRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRule(GetAuthenticationRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationRuleResult> getAuthenticationRulePlain(GetAuthenticationRulePlainArgs args) {
        return getAuthenticationRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRule(GetAuthenticationRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationRuleResult> getAuthenticationRule(GetAuthenticationRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationRule:getAuthenticationRule", TypeShape.of(GetAuthenticationRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRule(GetAuthenticationRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationRuleResult> getAuthenticationRulePlain(GetAuthenticationRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationRule:getAuthenticationRule", TypeShape.of(GetAuthenticationRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRuleList(GetAuthenticationRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationRuleListResult> getAuthenticationRuleList() {
        return getAuthenticationRuleList(GetAuthenticationRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRuleList(GetAuthenticationRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationRuleListResult> getAuthenticationRuleListPlain() {
        return getAuthenticationRuleListPlain(GetAuthenticationRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRuleList(GetAuthenticationRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationRuleListResult> getAuthenticationRuleList(GetAuthenticationRuleListArgs args) {
        return getAuthenticationRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRuleList(GetAuthenticationRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationRuleListResult> getAuthenticationRuleListPlain(GetAuthenticationRuleListPlainArgs args) {
        return getAuthenticationRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRuleList(GetAuthenticationRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationRuleListResult> getAuthenticationRuleList(GetAuthenticationRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationRuleList:getAuthenticationRuleList", TypeShape.of(GetAuthenticationRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationRuleList(GetAuthenticationRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationRuleListResult> getAuthenticationRuleListPlain(GetAuthenticationRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationRuleList:getAuthenticationRuleList", TypeShape.of(GetAuthenticationRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequence(GetAuthenticationSequenceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationSequenceResult> getAuthenticationSequence(GetAuthenticationSequenceArgs args) {
        return getAuthenticationSequence(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequence(GetAuthenticationSequenceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationSequenceResult> getAuthenticationSequencePlain(GetAuthenticationSequencePlainArgs args) {
        return getAuthenticationSequencePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequence(GetAuthenticationSequenceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationSequenceResult> getAuthenticationSequence(GetAuthenticationSequenceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationSequence:getAuthenticationSequence", TypeShape.of(GetAuthenticationSequenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequence(GetAuthenticationSequenceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationSequenceResult> getAuthenticationSequencePlain(GetAuthenticationSequencePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationSequence:getAuthenticationSequence", TypeShape.of(GetAuthenticationSequenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationSequenceListResult> getAuthenticationSequenceList() {
        return getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationSequenceListResult> getAuthenticationSequenceListPlain() {
        return getAuthenticationSequenceListPlain(GetAuthenticationSequenceListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationSequenceListResult> getAuthenticationSequenceList(GetAuthenticationSequenceListArgs args) {
        return getAuthenticationSequenceList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationSequenceListResult> getAuthenticationSequenceListPlain(GetAuthenticationSequenceListPlainArgs args) {
        return getAuthenticationSequenceListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAuthenticationSequenceListResult> getAuthenticationSequenceList(GetAuthenticationSequenceListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAuthenticationSequenceList:getAuthenticationSequenceList", TypeShape.of(GetAuthenticationSequenceListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAuthenticationSequenceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAuthenticationSequenceList(GetAuthenticationSequenceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAuthenticationSequenceListResult> getAuthenticationSequenceListPlain(GetAuthenticationSequenceListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAuthenticationSequenceList:getAuthenticationSequenceList", TypeShape.of(GetAuthenticationSequenceListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAutoTagActionsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoTagActionsListResult> getAutoTagActionsList() {
        return getAutoTagActionsList(GetAutoTagActionsListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAutoTagActionsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoTagActionsListResult> getAutoTagActionsListPlain() {
        return getAutoTagActionsListPlain(GetAutoTagActionsListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAutoTagActionsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoTagActionsListResult> getAutoTagActionsList(GetAutoTagActionsListArgs args) {
        return getAutoTagActionsList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAutoTagActionsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoTagActionsListResult> getAutoTagActionsListPlain(GetAutoTagActionsListPlainArgs args) {
        return getAutoTagActionsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAutoTagActionsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoTagActionsListResult> getAutoTagActionsList(GetAutoTagActionsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getAutoTagActionsList:getAutoTagActionsList", TypeShape.of(GetAutoTagActionsListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetAutoTagActionsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getAutoTagActionsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoTagActionsListResult> getAutoTagActionsListPlain(GetAutoTagActionsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getAutoTagActionsList:getAutoTagActionsList", TypeShape.of(GetAutoTagActionsListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfile(GetCertificateProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateProfileResult> getCertificateProfile(GetCertificateProfileArgs args) {
        return getCertificateProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfile(GetCertificateProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateProfileResult> getCertificateProfilePlain(GetCertificateProfilePlainArgs args) {
        return getCertificateProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfile(GetCertificateProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateProfileResult> getCertificateProfile(GetCertificateProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getCertificateProfile:getCertificateProfile", TypeShape.of(GetCertificateProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfile(GetCertificateProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateProfileResult> getCertificateProfilePlain(GetCertificateProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getCertificateProfile:getCertificateProfile", TypeShape.of(GetCertificateProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfileList(GetCertificateProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateProfileListResult> getCertificateProfileList() {
        return getCertificateProfileList(GetCertificateProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfileList(GetCertificateProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateProfileListResult> getCertificateProfileListPlain() {
        return getCertificateProfileListPlain(GetCertificateProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfileList(GetCertificateProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateProfileListResult> getCertificateProfileList(GetCertificateProfileListArgs args) {
        return getCertificateProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfileList(GetCertificateProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateProfileListResult> getCertificateProfileListPlain(GetCertificateProfileListPlainArgs args) {
        return getCertificateProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfileList(GetCertificateProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateProfileListResult> getCertificateProfileList(GetCertificateProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getCertificateProfileList:getCertificateProfileList", TypeShape.of(GetCertificateProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetCertificateProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getCertificateProfileList(GetCertificateProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateProfileListResult> getCertificateProfileListPlain(GetCertificateProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getCertificateProfileList:getCertificateProfileList", TypeShape.of(GetCertificateProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionExclusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionExclusion(GetDecryptionExclusionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionExclusionResult> getDecryptionExclusion(GetDecryptionExclusionArgs args) {
        return getDecryptionExclusion(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionExclusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionExclusion(GetDecryptionExclusionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionExclusionResult> getDecryptionExclusionPlain(GetDecryptionExclusionPlainArgs args) {
        return getDecryptionExclusionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionExclusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionExclusion(GetDecryptionExclusionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionExclusionResult> getDecryptionExclusion(GetDecryptionExclusionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDecryptionExclusion:getDecryptionExclusion", TypeShape.of(GetDecryptionExclusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionExclusionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionExclusion(GetDecryptionExclusionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionExclusionResult> getDecryptionExclusionPlain(GetDecryptionExclusionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDecryptionExclusion:getDecryptionExclusion", TypeShape.of(GetDecryptionExclusionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfile(GetDecryptionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionProfileResult> getDecryptionProfile(GetDecryptionProfileArgs args) {
        return getDecryptionProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfile(GetDecryptionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionProfileResult> getDecryptionProfilePlain(GetDecryptionProfilePlainArgs args) {
        return getDecryptionProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfile(GetDecryptionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionProfileResult> getDecryptionProfile(GetDecryptionProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDecryptionProfile:getDecryptionProfile", TypeShape.of(GetDecryptionProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfile(GetDecryptionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionProfileResult> getDecryptionProfilePlain(GetDecryptionProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDecryptionProfile:getDecryptionProfile", TypeShape.of(GetDecryptionProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfileList(GetDecryptionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionProfileListResult> getDecryptionProfileList() {
        return getDecryptionProfileList(GetDecryptionProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfileList(GetDecryptionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionProfileListResult> getDecryptionProfileListPlain() {
        return getDecryptionProfileListPlain(GetDecryptionProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfileList(GetDecryptionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionProfileListResult> getDecryptionProfileList(GetDecryptionProfileListArgs args) {
        return getDecryptionProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfileList(GetDecryptionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionProfileListResult> getDecryptionProfileListPlain(GetDecryptionProfileListPlainArgs args) {
        return getDecryptionProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfileList(GetDecryptionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionProfileListResult> getDecryptionProfileList(GetDecryptionProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDecryptionProfileList:getDecryptionProfileList", TypeShape.of(GetDecryptionProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionProfileList(GetDecryptionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionProfileListResult> getDecryptionProfileListPlain(GetDecryptionProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDecryptionProfileList:getDecryptionProfileList", TypeShape.of(GetDecryptionProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRule(GetDecryptionRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionRuleResult> getDecryptionRule(GetDecryptionRuleArgs args) {
        return getDecryptionRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRule(GetDecryptionRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionRuleResult> getDecryptionRulePlain(GetDecryptionRulePlainArgs args) {
        return getDecryptionRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRule(GetDecryptionRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionRuleResult> getDecryptionRule(GetDecryptionRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDecryptionRule:getDecryptionRule", TypeShape.of(GetDecryptionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRule(GetDecryptionRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionRuleResult> getDecryptionRulePlain(GetDecryptionRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDecryptionRule:getDecryptionRule", TypeShape.of(GetDecryptionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRuleList(GetDecryptionRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionRuleListResult> getDecryptionRuleList() {
        return getDecryptionRuleList(GetDecryptionRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRuleList(GetDecryptionRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionRuleListResult> getDecryptionRuleListPlain() {
        return getDecryptionRuleListPlain(GetDecryptionRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRuleList(GetDecryptionRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionRuleListResult> getDecryptionRuleList(GetDecryptionRuleListArgs args) {
        return getDecryptionRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRuleList(GetDecryptionRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionRuleListResult> getDecryptionRuleListPlain(GetDecryptionRuleListPlainArgs args) {
        return getDecryptionRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRuleList(GetDecryptionRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDecryptionRuleListResult> getDecryptionRuleList(GetDecryptionRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDecryptionRuleList:getDecryptionRuleList", TypeShape.of(GetDecryptionRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDecryptionRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDecryptionRuleList(GetDecryptionRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDecryptionRuleListResult> getDecryptionRuleListPlain(GetDecryptionRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDecryptionRuleList:getDecryptionRuleList", TypeShape.of(GetDecryptionRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDevice(GetDeviceArgs.builder()
     *             .serial("12345")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDeviceResult> getDevice(GetDeviceArgs args) {
        return getDevice(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDevice(GetDeviceArgs.builder()
     *             .serial("12345")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDeviceResult> getDevicePlain(GetDevicePlainArgs args) {
        return getDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDevice(GetDeviceArgs.builder()
     *             .serial("12345")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDeviceResult> getDevice(GetDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDevice:getDevice", TypeShape.of(GetDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDevice(GetDeviceArgs.builder()
     *             .serial("12345")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDeviceResult> getDevicePlain(GetDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDevice:getDevice", TypeShape.of(GetDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDeviceList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDeviceListResult> getDeviceList() {
        return getDeviceList(GetDeviceListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDeviceList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDeviceListResult> getDeviceListPlain() {
        return getDeviceListPlain(GetDeviceListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDeviceList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDeviceListResult> getDeviceList(GetDeviceListArgs args) {
        return getDeviceList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDeviceList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDeviceListResult> getDeviceListPlain(GetDeviceListPlainArgs args) {
        return getDeviceListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDeviceList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDeviceListResult> getDeviceList(GetDeviceListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDeviceList:getDeviceList", TypeShape.of(GetDeviceListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDeviceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDeviceList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDeviceListResult> getDeviceListPlain(GetDeviceListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDeviceList:getDeviceList", TypeShape.of(GetDeviceListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfile(GetDnsSecurityProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsSecurityProfileResult> getDnsSecurityProfile(GetDnsSecurityProfileArgs args) {
        return getDnsSecurityProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfile(GetDnsSecurityProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsSecurityProfileResult> getDnsSecurityProfilePlain(GetDnsSecurityProfilePlainArgs args) {
        return getDnsSecurityProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfile(GetDnsSecurityProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsSecurityProfileResult> getDnsSecurityProfile(GetDnsSecurityProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDnsSecurityProfile:getDnsSecurityProfile", TypeShape.of(GetDnsSecurityProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfile(GetDnsSecurityProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsSecurityProfileResult> getDnsSecurityProfilePlain(GetDnsSecurityProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDnsSecurityProfile:getDnsSecurityProfile", TypeShape.of(GetDnsSecurityProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsSecurityProfileListResult> getDnsSecurityProfileList() {
        return getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsSecurityProfileListResult> getDnsSecurityProfileListPlain() {
        return getDnsSecurityProfileListPlain(GetDnsSecurityProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsSecurityProfileListResult> getDnsSecurityProfileList(GetDnsSecurityProfileListArgs args) {
        return getDnsSecurityProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsSecurityProfileListResult> getDnsSecurityProfileListPlain(GetDnsSecurityProfileListPlainArgs args) {
        return getDnsSecurityProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsSecurityProfileListResult> getDnsSecurityProfileList(GetDnsSecurityProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDnsSecurityProfileList:getDnsSecurityProfileList", TypeShape.of(GetDnsSecurityProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDnsSecurityProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDnsSecurityProfileList(GetDnsSecurityProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsSecurityProfileListResult> getDnsSecurityProfileListPlain(GetDnsSecurityProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDnsSecurityProfileList:getDnsSecurityProfileList", TypeShape.of(GetDnsSecurityProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroup(GetDynamicUserGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDynamicUserGroupResult> getDynamicUserGroup(GetDynamicUserGroupArgs args) {
        return getDynamicUserGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroup(GetDynamicUserGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDynamicUserGroupResult> getDynamicUserGroupPlain(GetDynamicUserGroupPlainArgs args) {
        return getDynamicUserGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroup(GetDynamicUserGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDynamicUserGroupResult> getDynamicUserGroup(GetDynamicUserGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDynamicUserGroup:getDynamicUserGroup", TypeShape.of(GetDynamicUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroup(GetDynamicUserGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDynamicUserGroupResult> getDynamicUserGroupPlain(GetDynamicUserGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDynamicUserGroup:getDynamicUserGroup", TypeShape.of(GetDynamicUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroupList(GetDynamicUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDynamicUserGroupListResult> getDynamicUserGroupList() {
        return getDynamicUserGroupList(GetDynamicUserGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroupList(GetDynamicUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDynamicUserGroupListResult> getDynamicUserGroupListPlain() {
        return getDynamicUserGroupListPlain(GetDynamicUserGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroupList(GetDynamicUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDynamicUserGroupListResult> getDynamicUserGroupList(GetDynamicUserGroupListArgs args) {
        return getDynamicUserGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroupList(GetDynamicUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDynamicUserGroupListResult> getDynamicUserGroupListPlain(GetDynamicUserGroupListPlainArgs args) {
        return getDynamicUserGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroupList(GetDynamicUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDynamicUserGroupListResult> getDynamicUserGroupList(GetDynamicUserGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getDynamicUserGroupList:getDynamicUserGroupList", TypeShape.of(GetDynamicUserGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetDynamicUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getDynamicUserGroupList(GetDynamicUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDynamicUserGroupListResult> getDynamicUserGroupListPlain(GetDynamicUserGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getDynamicUserGroupList:getDynamicUserGroupList", TypeShape.of(GetDynamicUserGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicList(GetExternalDynamicListArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalDynamicListResult> getExternalDynamicList(GetExternalDynamicListArgs args) {
        return getExternalDynamicList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicList(GetExternalDynamicListArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalDynamicListResult> getExternalDynamicListPlain(GetExternalDynamicListPlainArgs args) {
        return getExternalDynamicListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicList(GetExternalDynamicListArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalDynamicListResult> getExternalDynamicList(GetExternalDynamicListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getExternalDynamicList:getExternalDynamicList", TypeShape.of(GetExternalDynamicListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicList(GetExternalDynamicListArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalDynamicListResult> getExternalDynamicListPlain(GetExternalDynamicListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getExternalDynamicList:getExternalDynamicList", TypeShape.of(GetExternalDynamicListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicListList(GetExternalDynamicListListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalDynamicListListResult> getExternalDynamicListList() {
        return getExternalDynamicListList(GetExternalDynamicListListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicListList(GetExternalDynamicListListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalDynamicListListResult> getExternalDynamicListListPlain() {
        return getExternalDynamicListListPlain(GetExternalDynamicListListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicListList(GetExternalDynamicListListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalDynamicListListResult> getExternalDynamicListList(GetExternalDynamicListListArgs args) {
        return getExternalDynamicListList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicListList(GetExternalDynamicListListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalDynamicListListResult> getExternalDynamicListListPlain(GetExternalDynamicListListPlainArgs args) {
        return getExternalDynamicListListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicListList(GetExternalDynamicListListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalDynamicListListResult> getExternalDynamicListList(GetExternalDynamicListListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getExternalDynamicListList:getExternalDynamicListList", TypeShape.of(GetExternalDynamicListListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetExternalDynamicListListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getExternalDynamicListList(GetExternalDynamicListListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalDynamicListListResult> getExternalDynamicListListPlain(GetExternalDynamicListListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getExternalDynamicListList:getExternalDynamicListList", TypeShape.of(GetExternalDynamicListListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfile(GetFileBlockingProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileBlockingProfileResult> getFileBlockingProfile(GetFileBlockingProfileArgs args) {
        return getFileBlockingProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfile(GetFileBlockingProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileBlockingProfileResult> getFileBlockingProfilePlain(GetFileBlockingProfilePlainArgs args) {
        return getFileBlockingProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfile(GetFileBlockingProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileBlockingProfileResult> getFileBlockingProfile(GetFileBlockingProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getFileBlockingProfile:getFileBlockingProfile", TypeShape.of(GetFileBlockingProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfile(GetFileBlockingProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileBlockingProfileResult> getFileBlockingProfilePlain(GetFileBlockingProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getFileBlockingProfile:getFileBlockingProfile", TypeShape.of(GetFileBlockingProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfileList(GetFileBlockingProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileBlockingProfileListResult> getFileBlockingProfileList() {
        return getFileBlockingProfileList(GetFileBlockingProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfileList(GetFileBlockingProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileBlockingProfileListResult> getFileBlockingProfileListPlain() {
        return getFileBlockingProfileListPlain(GetFileBlockingProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfileList(GetFileBlockingProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileBlockingProfileListResult> getFileBlockingProfileList(GetFileBlockingProfileListArgs args) {
        return getFileBlockingProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfileList(GetFileBlockingProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileBlockingProfileListResult> getFileBlockingProfileListPlain(GetFileBlockingProfileListPlainArgs args) {
        return getFileBlockingProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfileList(GetFileBlockingProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileBlockingProfileListResult> getFileBlockingProfileList(GetFileBlockingProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getFileBlockingProfileList:getFileBlockingProfileList", TypeShape.of(GetFileBlockingProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetFileBlockingProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getFileBlockingProfileList(GetFileBlockingProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileBlockingProfileListResult> getFileBlockingProfileListPlain(GetFileBlockingProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getFileBlockingProfileList:getFileBlockingProfileList", TypeShape.of(GetFileBlockingProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObject(GetHipObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipObjectResult> getHipObject(GetHipObjectArgs args) {
        return getHipObject(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObject(GetHipObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipObjectResult> getHipObjectPlain(GetHipObjectPlainArgs args) {
        return getHipObjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObject(GetHipObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipObjectResult> getHipObject(GetHipObjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getHipObject:getHipObject", TypeShape.of(GetHipObjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObject(GetHipObjectArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipObjectResult> getHipObjectPlain(GetHipObjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getHipObject:getHipObject", TypeShape.of(GetHipObjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObjectList(GetHipObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipObjectListResult> getHipObjectList() {
        return getHipObjectList(GetHipObjectListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObjectList(GetHipObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipObjectListResult> getHipObjectListPlain() {
        return getHipObjectListPlain(GetHipObjectListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObjectList(GetHipObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipObjectListResult> getHipObjectList(GetHipObjectListArgs args) {
        return getHipObjectList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObjectList(GetHipObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipObjectListResult> getHipObjectListPlain(GetHipObjectListPlainArgs args) {
        return getHipObjectListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObjectList(GetHipObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipObjectListResult> getHipObjectList(GetHipObjectListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getHipObjectList:getHipObjectList", TypeShape.of(GetHipObjectListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipObjectListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipObjectList(GetHipObjectListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipObjectListResult> getHipObjectListPlain(GetHipObjectListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getHipObjectList:getHipObjectList", TypeShape.of(GetHipObjectListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfile(GetHipProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipProfileResult> getHipProfile(GetHipProfileArgs args) {
        return getHipProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfile(GetHipProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipProfileResult> getHipProfilePlain(GetHipProfilePlainArgs args) {
        return getHipProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfile(GetHipProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipProfileResult> getHipProfile(GetHipProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getHipProfile:getHipProfile", TypeShape.of(GetHipProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfile(GetHipProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipProfileResult> getHipProfilePlain(GetHipProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getHipProfile:getHipProfile", TypeShape.of(GetHipProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfileList(GetHipProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipProfileListResult> getHipProfileList() {
        return getHipProfileList(GetHipProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfileList(GetHipProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipProfileListResult> getHipProfileListPlain() {
        return getHipProfileListPlain(GetHipProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfileList(GetHipProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipProfileListResult> getHipProfileList(GetHipProfileListArgs args) {
        return getHipProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfileList(GetHipProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipProfileListResult> getHipProfileListPlain(GetHipProfileListPlainArgs args) {
        return getHipProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfileList(GetHipProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHipProfileListResult> getHipProfileList(GetHipProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getHipProfileList:getHipProfileList", TypeShape.of(GetHipProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHipProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHipProfileList(GetHipProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHipProfileListResult> getHipProfileListPlain(GetHipProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getHipProfileList:getHipProfileList", TypeShape.of(GetHipProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfile(GetHttpHeaderProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHttpHeaderProfileResult> getHttpHeaderProfile(GetHttpHeaderProfileArgs args) {
        return getHttpHeaderProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfile(GetHttpHeaderProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHttpHeaderProfileResult> getHttpHeaderProfilePlain(GetHttpHeaderProfilePlainArgs args) {
        return getHttpHeaderProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfile(GetHttpHeaderProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHttpHeaderProfileResult> getHttpHeaderProfile(GetHttpHeaderProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getHttpHeaderProfile:getHttpHeaderProfile", TypeShape.of(GetHttpHeaderProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfile(GetHttpHeaderProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHttpHeaderProfileResult> getHttpHeaderProfilePlain(GetHttpHeaderProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getHttpHeaderProfile:getHttpHeaderProfile", TypeShape.of(GetHttpHeaderProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHttpHeaderProfileListResult> getHttpHeaderProfileList() {
        return getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHttpHeaderProfileListResult> getHttpHeaderProfileListPlain() {
        return getHttpHeaderProfileListPlain(GetHttpHeaderProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHttpHeaderProfileListResult> getHttpHeaderProfileList(GetHttpHeaderProfileListArgs args) {
        return getHttpHeaderProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHttpHeaderProfileListResult> getHttpHeaderProfileListPlain(GetHttpHeaderProfileListPlainArgs args) {
        return getHttpHeaderProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHttpHeaderProfileListResult> getHttpHeaderProfileList(GetHttpHeaderProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getHttpHeaderProfileList:getHttpHeaderProfileList", TypeShape.of(GetHttpHeaderProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetHttpHeaderProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getHttpHeaderProfileList(GetHttpHeaderProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHttpHeaderProfileListResult> getHttpHeaderProfileListPlain(GetHttpHeaderProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getHttpHeaderProfileList:getHttpHeaderProfileList", TypeShape.of(GetHttpHeaderProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfile(GetIkeCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeCryptoProfileResult> getIkeCryptoProfile(GetIkeCryptoProfileArgs args) {
        return getIkeCryptoProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfile(GetIkeCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeCryptoProfileResult> getIkeCryptoProfilePlain(GetIkeCryptoProfilePlainArgs args) {
        return getIkeCryptoProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfile(GetIkeCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeCryptoProfileResult> getIkeCryptoProfile(GetIkeCryptoProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIkeCryptoProfile:getIkeCryptoProfile", TypeShape.of(GetIkeCryptoProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfile(GetIkeCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeCryptoProfileResult> getIkeCryptoProfilePlain(GetIkeCryptoProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIkeCryptoProfile:getIkeCryptoProfile", TypeShape.of(GetIkeCryptoProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeCryptoProfileListResult> getIkeCryptoProfileList() {
        return getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeCryptoProfileListResult> getIkeCryptoProfileListPlain() {
        return getIkeCryptoProfileListPlain(GetIkeCryptoProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeCryptoProfileListResult> getIkeCryptoProfileList(GetIkeCryptoProfileListArgs args) {
        return getIkeCryptoProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeCryptoProfileListResult> getIkeCryptoProfileListPlain(GetIkeCryptoProfileListPlainArgs args) {
        return getIkeCryptoProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeCryptoProfileListResult> getIkeCryptoProfileList(GetIkeCryptoProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIkeCryptoProfileList:getIkeCryptoProfileList", TypeShape.of(GetIkeCryptoProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeCryptoProfileList(GetIkeCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeCryptoProfileListResult> getIkeCryptoProfileListPlain(GetIkeCryptoProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIkeCryptoProfileList:getIkeCryptoProfileList", TypeShape.of(GetIkeCryptoProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGateway(GetIkeGatewayArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeGatewayResult> getIkeGateway(GetIkeGatewayArgs args) {
        return getIkeGateway(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGateway(GetIkeGatewayArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeGatewayResult> getIkeGatewayPlain(GetIkeGatewayPlainArgs args) {
        return getIkeGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGateway(GetIkeGatewayArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeGatewayResult> getIkeGateway(GetIkeGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIkeGateway:getIkeGateway", TypeShape.of(GetIkeGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGateway(GetIkeGatewayArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeGatewayResult> getIkeGatewayPlain(GetIkeGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIkeGateway:getIkeGateway", TypeShape.of(GetIkeGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGatewayList(GetIkeGatewayListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeGatewayListResult> getIkeGatewayList() {
        return getIkeGatewayList(GetIkeGatewayListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGatewayList(GetIkeGatewayListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeGatewayListResult> getIkeGatewayListPlain() {
        return getIkeGatewayListPlain(GetIkeGatewayListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGatewayList(GetIkeGatewayListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeGatewayListResult> getIkeGatewayList(GetIkeGatewayListArgs args) {
        return getIkeGatewayList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGatewayList(GetIkeGatewayListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeGatewayListResult> getIkeGatewayListPlain(GetIkeGatewayListPlainArgs args) {
        return getIkeGatewayListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGatewayList(GetIkeGatewayListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIkeGatewayListResult> getIkeGatewayList(GetIkeGatewayListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIkeGatewayList:getIkeGatewayList", TypeShape.of(GetIkeGatewayListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIkeGatewayListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIkeGatewayList(GetIkeGatewayListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIkeGatewayListResult> getIkeGatewayListPlain(GetIkeGatewayListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIkeGatewayList:getIkeGatewayList", TypeShape.of(GetIkeGatewayListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServer(GetInternalDnsServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInternalDnsServerResult> getInternalDnsServer(GetInternalDnsServerArgs args) {
        return getInternalDnsServer(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServer(GetInternalDnsServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInternalDnsServerResult> getInternalDnsServerPlain(GetInternalDnsServerPlainArgs args) {
        return getInternalDnsServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServer(GetInternalDnsServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInternalDnsServerResult> getInternalDnsServer(GetInternalDnsServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getInternalDnsServer:getInternalDnsServer", TypeShape.of(GetInternalDnsServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServer(GetInternalDnsServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInternalDnsServerResult> getInternalDnsServerPlain(GetInternalDnsServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getInternalDnsServer:getInternalDnsServer", TypeShape.of(GetInternalDnsServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServerList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInternalDnsServerListResult> getInternalDnsServerList() {
        return getInternalDnsServerList(GetInternalDnsServerListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServerList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInternalDnsServerListResult> getInternalDnsServerListPlain() {
        return getInternalDnsServerListPlain(GetInternalDnsServerListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServerList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInternalDnsServerListResult> getInternalDnsServerList(GetInternalDnsServerListArgs args) {
        return getInternalDnsServerList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServerList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInternalDnsServerListResult> getInternalDnsServerListPlain(GetInternalDnsServerListPlainArgs args) {
        return getInternalDnsServerListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServerList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInternalDnsServerListResult> getInternalDnsServerList(GetInternalDnsServerListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getInternalDnsServerList:getInternalDnsServerList", TypeShape.of(GetInternalDnsServerListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetInternalDnsServerListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getInternalDnsServerList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInternalDnsServerListResult> getInternalDnsServerListPlain(GetInternalDnsServerListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getInternalDnsServerList:getInternalDnsServerList", TypeShape.of(GetInternalDnsServerListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfile(GetIpsecCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecCryptoProfileResult> getIpsecCryptoProfile(GetIpsecCryptoProfileArgs args) {
        return getIpsecCryptoProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfile(GetIpsecCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecCryptoProfileResult> getIpsecCryptoProfilePlain(GetIpsecCryptoProfilePlainArgs args) {
        return getIpsecCryptoProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfile(GetIpsecCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecCryptoProfileResult> getIpsecCryptoProfile(GetIpsecCryptoProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIpsecCryptoProfile:getIpsecCryptoProfile", TypeShape.of(GetIpsecCryptoProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfile(GetIpsecCryptoProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecCryptoProfileResult> getIpsecCryptoProfilePlain(GetIpsecCryptoProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIpsecCryptoProfile:getIpsecCryptoProfile", TypeShape.of(GetIpsecCryptoProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecCryptoProfileListResult> getIpsecCryptoProfileList() {
        return getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecCryptoProfileListResult> getIpsecCryptoProfileListPlain() {
        return getIpsecCryptoProfileListPlain(GetIpsecCryptoProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecCryptoProfileListResult> getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs args) {
        return getIpsecCryptoProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecCryptoProfileListResult> getIpsecCryptoProfileListPlain(GetIpsecCryptoProfileListPlainArgs args) {
        return getIpsecCryptoProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecCryptoProfileListResult> getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIpsecCryptoProfileList:getIpsecCryptoProfileList", TypeShape.of(GetIpsecCryptoProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecCryptoProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecCryptoProfileList(GetIpsecCryptoProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecCryptoProfileListResult> getIpsecCryptoProfileListPlain(GetIpsecCryptoProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIpsecCryptoProfileList:getIpsecCryptoProfileList", TypeShape.of(GetIpsecCryptoProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecTunnelResult> getIpsecTunnel(GetIpsecTunnelArgs args) {
        return getIpsecTunnel(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecTunnelResult> getIpsecTunnelPlain(GetIpsecTunnelPlainArgs args) {
        return getIpsecTunnelPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecTunnelResult> getIpsecTunnel(GetIpsecTunnelArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIpsecTunnel:getIpsecTunnel", TypeShape.of(GetIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecTunnelResult> getIpsecTunnelPlain(GetIpsecTunnelPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIpsecTunnel:getIpsecTunnel", TypeShape.of(GetIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnelList(GetIpsecTunnelListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecTunnelListResult> getIpsecTunnelList() {
        return getIpsecTunnelList(GetIpsecTunnelListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnelList(GetIpsecTunnelListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecTunnelListResult> getIpsecTunnelListPlain() {
        return getIpsecTunnelListPlain(GetIpsecTunnelListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnelList(GetIpsecTunnelListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecTunnelListResult> getIpsecTunnelList(GetIpsecTunnelListArgs args) {
        return getIpsecTunnelList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnelList(GetIpsecTunnelListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecTunnelListResult> getIpsecTunnelListPlain(GetIpsecTunnelListPlainArgs args) {
        return getIpsecTunnelListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnelList(GetIpsecTunnelListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecTunnelListResult> getIpsecTunnelList(GetIpsecTunnelListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getIpsecTunnelList:getIpsecTunnelList", TypeShape.of(GetIpsecTunnelListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetIpsecTunnelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getIpsecTunnelList(GetIpsecTunnelListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecTunnelListResult> getIpsecTunnelListPlain(GetIpsecTunnelListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getIpsecTunnelList:getIpsecTunnelList", TypeShape.of(GetIpsecTunnelListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobs();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobsResult> getJobs(GetJobsArgs args) {
        return getJobs(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobs();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobsResult> getJobsPlain(GetJobsPlainArgs args) {
        return getJobsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobs();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobsResult> getJobs(GetJobsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getJobs:getJobs", TypeShape.of(GetJobsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobs();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobsResult> getJobsPlain(GetJobsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getJobs:getJobs", TypeShape.of(GetJobsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobsList(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobsListResult> getJobsList() {
        return getJobsList(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobsList(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobsListResult> getJobsListPlain() {
        return getJobsListPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobsList(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobsListResult> getJobsList(InvokeArgs args) {
        return getJobsList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobsList(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobsListResult> getJobsListPlain(InvokeArgs args) {
        return getJobsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobsList(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobsListResult> getJobsList(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getJobsList:getJobsList", TypeShape.of(GetJobsListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getJobsList(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobsListResult> getJobsListPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getJobsList:getJobsList", TypeShape.of(GetJobsListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfile(GetKerberosServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKerberosServerProfileResult> getKerberosServerProfile(GetKerberosServerProfileArgs args) {
        return getKerberosServerProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfile(GetKerberosServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKerberosServerProfileResult> getKerberosServerProfilePlain(GetKerberosServerProfilePlainArgs args) {
        return getKerberosServerProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfile(GetKerberosServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKerberosServerProfileResult> getKerberosServerProfile(GetKerberosServerProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getKerberosServerProfile:getKerberosServerProfile", TypeShape.of(GetKerberosServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfile(GetKerberosServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKerberosServerProfileResult> getKerberosServerProfilePlain(GetKerberosServerProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getKerberosServerProfile:getKerberosServerProfile", TypeShape.of(GetKerberosServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfileList(GetKerberosServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKerberosServerProfileListResult> getKerberosServerProfileList() {
        return getKerberosServerProfileList(GetKerberosServerProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfileList(GetKerberosServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKerberosServerProfileListResult> getKerberosServerProfileListPlain() {
        return getKerberosServerProfileListPlain(GetKerberosServerProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfileList(GetKerberosServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKerberosServerProfileListResult> getKerberosServerProfileList(GetKerberosServerProfileListArgs args) {
        return getKerberosServerProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfileList(GetKerberosServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKerberosServerProfileListResult> getKerberosServerProfileListPlain(GetKerberosServerProfileListPlainArgs args) {
        return getKerberosServerProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfileList(GetKerberosServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKerberosServerProfileListResult> getKerberosServerProfileList(GetKerberosServerProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getKerberosServerProfileList:getKerberosServerProfileList", TypeShape.of(GetKerberosServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetKerberosServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getKerberosServerProfileList(GetKerberosServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKerberosServerProfileListResult> getKerberosServerProfileListPlain(GetKerberosServerProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getKerberosServerProfileList:getKerberosServerProfileList", TypeShape.of(GetKerberosServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLabelListResult> getLabelList() {
        return getLabelList(GetLabelListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLabelListResult> getLabelListPlain() {
        return getLabelListPlain(GetLabelListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLabelListResult> getLabelList(GetLabelListArgs args) {
        return getLabelList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLabelListResult> getLabelListPlain(GetLabelListPlainArgs args) {
        return getLabelListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLabelListResult> getLabelList(GetLabelListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLabelList:getLabelList", TypeShape.of(GetLabelListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLabelListResult> getLabelListPlain(GetLabelListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLabelList:getLabelList", TypeShape.of(GetLabelListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelsGetbyidResponseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelsGetbyidResponse(GetLabelsGetbyidResponseArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLabelsGetbyidResponseResult> getLabelsGetbyidResponse(GetLabelsGetbyidResponseArgs args) {
        return getLabelsGetbyidResponse(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelsGetbyidResponseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelsGetbyidResponse(GetLabelsGetbyidResponseArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLabelsGetbyidResponseResult> getLabelsGetbyidResponsePlain(GetLabelsGetbyidResponsePlainArgs args) {
        return getLabelsGetbyidResponsePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelsGetbyidResponseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelsGetbyidResponse(GetLabelsGetbyidResponseArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLabelsGetbyidResponseResult> getLabelsGetbyidResponse(GetLabelsGetbyidResponseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLabelsGetbyidResponse:getLabelsGetbyidResponse", TypeShape.of(GetLabelsGetbyidResponseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLabelsGetbyidResponseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLabelsGetbyidResponse(GetLabelsGetbyidResponseArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLabelsGetbyidResponseResult> getLabelsGetbyidResponsePlain(GetLabelsGetbyidResponsePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLabelsGetbyidResponse:getLabelsGetbyidResponse", TypeShape.of(GetLabelsGetbyidResponseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfile(GetLdapServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLdapServerProfileResult> getLdapServerProfile(GetLdapServerProfileArgs args) {
        return getLdapServerProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfile(GetLdapServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLdapServerProfileResult> getLdapServerProfilePlain(GetLdapServerProfilePlainArgs args) {
        return getLdapServerProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfile(GetLdapServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLdapServerProfileResult> getLdapServerProfile(GetLdapServerProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLdapServerProfile:getLdapServerProfile", TypeShape.of(GetLdapServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfile(GetLdapServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLdapServerProfileResult> getLdapServerProfilePlain(GetLdapServerProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLdapServerProfile:getLdapServerProfile", TypeShape.of(GetLdapServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfileList(GetLdapServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLdapServerProfileListResult> getLdapServerProfileList() {
        return getLdapServerProfileList(GetLdapServerProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfileList(GetLdapServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLdapServerProfileListResult> getLdapServerProfileListPlain() {
        return getLdapServerProfileListPlain(GetLdapServerProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfileList(GetLdapServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLdapServerProfileListResult> getLdapServerProfileList(GetLdapServerProfileListArgs args) {
        return getLdapServerProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfileList(GetLdapServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLdapServerProfileListResult> getLdapServerProfileListPlain(GetLdapServerProfileListPlainArgs args) {
        return getLdapServerProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfileList(GetLdapServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLdapServerProfileListResult> getLdapServerProfileList(GetLdapServerProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLdapServerProfileList:getLdapServerProfileList", TypeShape.of(GetLdapServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLdapServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLdapServerProfileList(GetLdapServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLdapServerProfileListResult> getLdapServerProfileListPlain(GetLdapServerProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLdapServerProfileList:getLdapServerProfileList", TypeShape.of(GetLdapServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUser(GetLocalUserArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserResult> getLocalUser(GetLocalUserArgs args) {
        return getLocalUser(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUser(GetLocalUserArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserResult> getLocalUserPlain(GetLocalUserPlainArgs args) {
        return getLocalUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUser(GetLocalUserArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserResult> getLocalUser(GetLocalUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLocalUser:getLocalUser", TypeShape.of(GetLocalUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUser(GetLocalUserArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserResult> getLocalUserPlain(GetLocalUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLocalUser:getLocalUser", TypeShape.of(GetLocalUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserGroupList(GetLocalUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserGroupListResult> getLocalUserGroupList() {
        return getLocalUserGroupList(GetLocalUserGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserGroupList(GetLocalUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserGroupListResult> getLocalUserGroupListPlain() {
        return getLocalUserGroupListPlain(GetLocalUserGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserGroupList(GetLocalUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserGroupListResult> getLocalUserGroupList(GetLocalUserGroupListArgs args) {
        return getLocalUserGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserGroupList(GetLocalUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserGroupListResult> getLocalUserGroupListPlain(GetLocalUserGroupListPlainArgs args) {
        return getLocalUserGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserGroupList(GetLocalUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserGroupListResult> getLocalUserGroupList(GetLocalUserGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLocalUserGroupList:getLocalUserGroupList", TypeShape.of(GetLocalUserGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserGroupList(GetLocalUserGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserGroupListResult> getLocalUserGroupListPlain(GetLocalUserGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLocalUserGroupList:getLocalUserGroupList", TypeShape.of(GetLocalUserGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserList(GetLocalUserListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserListResult> getLocalUserList() {
        return getLocalUserList(GetLocalUserListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserList(GetLocalUserListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserListResult> getLocalUserListPlain() {
        return getLocalUserListPlain(GetLocalUserListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserList(GetLocalUserListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserListResult> getLocalUserList(GetLocalUserListArgs args) {
        return getLocalUserList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserList(GetLocalUserListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserListResult> getLocalUserListPlain(GetLocalUserListPlainArgs args) {
        return getLocalUserListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserList(GetLocalUserListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocalUserListResult> getLocalUserList(GetLocalUserListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getLocalUserList:getLocalUserList", TypeShape.of(GetLocalUserListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetLocalUserListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getLocalUserList(GetLocalUserListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocalUserListResult> getLocalUserListPlain(GetLocalUserListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getLocalUserList:getLocalUserList", TypeShape.of(GetLocalUserListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetMfaServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getMfaServer(GetMfaServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMfaServerResult> getMfaServer(GetMfaServerArgs args) {
        return getMfaServer(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetMfaServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getMfaServer(GetMfaServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMfaServerResult> getMfaServerPlain(GetMfaServerPlainArgs args) {
        return getMfaServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetMfaServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getMfaServer(GetMfaServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMfaServerResult> getMfaServer(GetMfaServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getMfaServer:getMfaServer", TypeShape.of(GetMfaServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetMfaServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getMfaServer(GetMfaServerArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMfaServerResult> getMfaServerPlain(GetMfaServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getMfaServer:getMfaServer", TypeShape.of(GetMfaServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRule(GetNatRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNatRuleResult> getNatRule(GetNatRuleArgs args) {
        return getNatRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRule(GetNatRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNatRuleResult> getNatRulePlain(GetNatRulePlainArgs args) {
        return getNatRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRule(GetNatRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNatRuleResult> getNatRule(GetNatRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getNatRule:getNatRule", TypeShape.of(GetNatRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRule(GetNatRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNatRuleResult> getNatRulePlain(GetNatRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getNatRule:getNatRule", TypeShape.of(GetNatRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRuleList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNatRuleListResult> getNatRuleList() {
        return getNatRuleList(GetNatRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRuleList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNatRuleListResult> getNatRuleListPlain() {
        return getNatRuleListPlain(GetNatRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRuleList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNatRuleListResult> getNatRuleList(GetNatRuleListArgs args) {
        return getNatRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRuleList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNatRuleListResult> getNatRuleListPlain(GetNatRuleListPlainArgs args) {
        return getNatRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRuleList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNatRuleListResult> getNatRuleList(GetNatRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getNatRuleList:getNatRuleList", TypeShape.of(GetNatRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetNatRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getNatRuleList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNatRuleListResult> getNatRuleListPlain(GetNatRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getNatRuleList:getNatRuleList", TypeShape.of(GetNatRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponder(GetOcspResponderArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOcspResponderResult> getOcspResponder(GetOcspResponderArgs args) {
        return getOcspResponder(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponder(GetOcspResponderArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOcspResponderResult> getOcspResponderPlain(GetOcspResponderPlainArgs args) {
        return getOcspResponderPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponder(GetOcspResponderArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOcspResponderResult> getOcspResponder(GetOcspResponderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getOcspResponder:getOcspResponder", TypeShape.of(GetOcspResponderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponder(GetOcspResponderArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOcspResponderResult> getOcspResponderPlain(GetOcspResponderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getOcspResponder:getOcspResponder", TypeShape.of(GetOcspResponderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponderList(GetOcspResponderListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOcspResponderListResult> getOcspResponderList() {
        return getOcspResponderList(GetOcspResponderListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponderList(GetOcspResponderListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOcspResponderListResult> getOcspResponderListPlain() {
        return getOcspResponderListPlain(GetOcspResponderListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponderList(GetOcspResponderListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOcspResponderListResult> getOcspResponderList(GetOcspResponderListArgs args) {
        return getOcspResponderList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponderList(GetOcspResponderListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOcspResponderListResult> getOcspResponderListPlain(GetOcspResponderListPlainArgs args) {
        return getOcspResponderListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponderList(GetOcspResponderListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOcspResponderListResult> getOcspResponderList(GetOcspResponderListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getOcspResponderList:getOcspResponderList", TypeShape.of(GetOcspResponderListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetOcspResponderListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getOcspResponderList(GetOcspResponderListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOcspResponderListResult> getOcspResponderListPlain(GetOcspResponderListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getOcspResponderList:getOcspResponderList", TypeShape.of(GetOcspResponderListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroup(GetProfileGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProfileGroupResult> getProfileGroup(GetProfileGroupArgs args) {
        return getProfileGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroup(GetProfileGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProfileGroupResult> getProfileGroupPlain(GetProfileGroupPlainArgs args) {
        return getProfileGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroup(GetProfileGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProfileGroupResult> getProfileGroup(GetProfileGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getProfileGroup:getProfileGroup", TypeShape.of(GetProfileGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroup(GetProfileGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProfileGroupResult> getProfileGroupPlain(GetProfileGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getProfileGroup:getProfileGroup", TypeShape.of(GetProfileGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroupList(GetProfileGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProfileGroupListResult> getProfileGroupList() {
        return getProfileGroupList(GetProfileGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroupList(GetProfileGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProfileGroupListResult> getProfileGroupListPlain() {
        return getProfileGroupListPlain(GetProfileGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroupList(GetProfileGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProfileGroupListResult> getProfileGroupList(GetProfileGroupListArgs args) {
        return getProfileGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroupList(GetProfileGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProfileGroupListResult> getProfileGroupListPlain(GetProfileGroupListPlainArgs args) {
        return getProfileGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroupList(GetProfileGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProfileGroupListResult> getProfileGroupList(GetProfileGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getProfileGroupList:getProfileGroupList", TypeShape.of(GetProfileGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetProfileGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getProfileGroupList(GetProfileGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProfileGroupListResult> getProfileGroupListPlain(GetProfileGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getProfileGroupList:getProfileGroupList", TypeShape.of(GetProfileGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRule(GetQosPolicyRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosPolicyRuleResult> getQosPolicyRule(GetQosPolicyRuleArgs args) {
        return getQosPolicyRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRule(GetQosPolicyRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosPolicyRuleResult> getQosPolicyRulePlain(GetQosPolicyRulePlainArgs args) {
        return getQosPolicyRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRule(GetQosPolicyRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosPolicyRuleResult> getQosPolicyRule(GetQosPolicyRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getQosPolicyRule:getQosPolicyRule", TypeShape.of(GetQosPolicyRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRule(GetQosPolicyRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosPolicyRuleResult> getQosPolicyRulePlain(GetQosPolicyRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getQosPolicyRule:getQosPolicyRule", TypeShape.of(GetQosPolicyRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRuleList(GetQosPolicyRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosPolicyRuleListResult> getQosPolicyRuleList() {
        return getQosPolicyRuleList(GetQosPolicyRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRuleList(GetQosPolicyRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosPolicyRuleListResult> getQosPolicyRuleListPlain() {
        return getQosPolicyRuleListPlain(GetQosPolicyRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRuleList(GetQosPolicyRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosPolicyRuleListResult> getQosPolicyRuleList(GetQosPolicyRuleListArgs args) {
        return getQosPolicyRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRuleList(GetQosPolicyRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosPolicyRuleListResult> getQosPolicyRuleListPlain(GetQosPolicyRuleListPlainArgs args) {
        return getQosPolicyRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRuleList(GetQosPolicyRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosPolicyRuleListResult> getQosPolicyRuleList(GetQosPolicyRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getQosPolicyRuleList:getQosPolicyRuleList", TypeShape.of(GetQosPolicyRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosPolicyRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosPolicyRuleList(GetQosPolicyRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosPolicyRuleListResult> getQosPolicyRuleListPlain(GetQosPolicyRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getQosPolicyRuleList:getQosPolicyRuleList", TypeShape.of(GetQosPolicyRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfile(GetQosProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosProfileResult> getQosProfile(GetQosProfileArgs args) {
        return getQosProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfile(GetQosProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosProfileResult> getQosProfilePlain(GetQosProfilePlainArgs args) {
        return getQosProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfile(GetQosProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosProfileResult> getQosProfile(GetQosProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getQosProfile:getQosProfile", TypeShape.of(GetQosProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfile(GetQosProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosProfileResult> getQosProfilePlain(GetQosProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getQosProfile:getQosProfile", TypeShape.of(GetQosProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfileList(GetQosProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosProfileListResult> getQosProfileList() {
        return getQosProfileList(GetQosProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfileList(GetQosProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosProfileListResult> getQosProfileListPlain() {
        return getQosProfileListPlain(GetQosProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfileList(GetQosProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosProfileListResult> getQosProfileList(GetQosProfileListArgs args) {
        return getQosProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfileList(GetQosProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosProfileListResult> getQosProfileListPlain(GetQosProfileListPlainArgs args) {
        return getQosProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfileList(GetQosProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQosProfileListResult> getQosProfileList(GetQosProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getQosProfileList:getQosProfileList", TypeShape.of(GetQosProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetQosProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getQosProfileList(GetQosProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQosProfileListResult> getQosProfileListPlain(GetQosProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getQosProfileList:getQosProfileList", TypeShape.of(GetQosProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfile(GetRadiusServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRadiusServerProfileResult> getRadiusServerProfile(GetRadiusServerProfileArgs args) {
        return getRadiusServerProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfile(GetRadiusServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRadiusServerProfileResult> getRadiusServerProfilePlain(GetRadiusServerProfilePlainArgs args) {
        return getRadiusServerProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfile(GetRadiusServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRadiusServerProfileResult> getRadiusServerProfile(GetRadiusServerProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getRadiusServerProfile:getRadiusServerProfile", TypeShape.of(GetRadiusServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfile(GetRadiusServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRadiusServerProfileResult> getRadiusServerProfilePlain(GetRadiusServerProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getRadiusServerProfile:getRadiusServerProfile", TypeShape.of(GetRadiusServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfileList(GetRadiusServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRadiusServerProfileListResult> getRadiusServerProfileList() {
        return getRadiusServerProfileList(GetRadiusServerProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfileList(GetRadiusServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRadiusServerProfileListResult> getRadiusServerProfileListPlain() {
        return getRadiusServerProfileListPlain(GetRadiusServerProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfileList(GetRadiusServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRadiusServerProfileListResult> getRadiusServerProfileList(GetRadiusServerProfileListArgs args) {
        return getRadiusServerProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfileList(GetRadiusServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRadiusServerProfileListResult> getRadiusServerProfileListPlain(GetRadiusServerProfileListPlainArgs args) {
        return getRadiusServerProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfileList(GetRadiusServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRadiusServerProfileListResult> getRadiusServerProfileList(GetRadiusServerProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getRadiusServerProfileList:getRadiusServerProfileList", TypeShape.of(GetRadiusServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRadiusServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRadiusServerProfileList(GetRadiusServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRadiusServerProfileListResult> getRadiusServerProfileListPlain(GetRadiusServerProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getRadiusServerProfileList:getRadiusServerProfileList", TypeShape.of(GetRadiusServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegion(GetRegionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionResult> getRegion(GetRegionArgs args) {
        return getRegion(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegion(GetRegionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionResult> getRegionPlain(GetRegionPlainArgs args) {
        return getRegionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegion(GetRegionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionResult> getRegion(GetRegionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getRegion:getRegion", TypeShape.of(GetRegionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegion(GetRegionArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionResult> getRegionPlain(GetRegionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getRegion:getRegion", TypeShape.of(GetRegionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegionList(GetRegionListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionListResult> getRegionList() {
        return getRegionList(GetRegionListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegionList(GetRegionListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionListResult> getRegionListPlain() {
        return getRegionListPlain(GetRegionListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegionList(GetRegionListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionListResult> getRegionList(GetRegionListArgs args) {
        return getRegionList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegionList(GetRegionListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionListResult> getRegionListPlain(GetRegionListPlainArgs args) {
        return getRegionListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegionList(GetRegionListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionListResult> getRegionList(GetRegionListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getRegionList:getRegionList", TypeShape.of(GetRegionListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRegionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRegionList(GetRegionListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionListResult> getRegionListPlain(GetRegionListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getRegionList:getRegionList", TypeShape.of(GetRegionListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetwork(GetRemoteNetworkArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRemoteNetworkResult> getRemoteNetwork(GetRemoteNetworkArgs args) {
        return getRemoteNetwork(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetwork(GetRemoteNetworkArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRemoteNetworkResult> getRemoteNetworkPlain(GetRemoteNetworkPlainArgs args) {
        return getRemoteNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetwork(GetRemoteNetworkArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRemoteNetworkResult> getRemoteNetwork(GetRemoteNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getRemoteNetwork:getRemoteNetwork", TypeShape.of(GetRemoteNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetwork(GetRemoteNetworkArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRemoteNetworkResult> getRemoteNetworkPlain(GetRemoteNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getRemoteNetwork:getRemoteNetwork", TypeShape.of(GetRemoteNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetworkList(GetRemoteNetworkListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRemoteNetworkListResult> getRemoteNetworkList() {
        return getRemoteNetworkList(GetRemoteNetworkListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetworkList(GetRemoteNetworkListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRemoteNetworkListResult> getRemoteNetworkListPlain() {
        return getRemoteNetworkListPlain(GetRemoteNetworkListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetworkList(GetRemoteNetworkListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRemoteNetworkListResult> getRemoteNetworkList(GetRemoteNetworkListArgs args) {
        return getRemoteNetworkList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetworkList(GetRemoteNetworkListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRemoteNetworkListResult> getRemoteNetworkListPlain(GetRemoteNetworkListPlainArgs args) {
        return getRemoteNetworkListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetworkList(GetRemoteNetworkListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRemoteNetworkListResult> getRemoteNetworkList(GetRemoteNetworkListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getRemoteNetworkList:getRemoteNetworkList", TypeShape.of(GetRemoteNetworkListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetRemoteNetworkListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getRemoteNetworkList(GetRemoteNetworkListArgs.builder()
     *             .folder("Remote Networks")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRemoteNetworkListResult> getRemoteNetworkListPlain(GetRemoteNetworkListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getRemoteNetworkList:getRemoteNetworkList", TypeShape.of(GetRemoteNetworkListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfile(GetSamlServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlServerProfileResult> getSamlServerProfile(GetSamlServerProfileArgs args) {
        return getSamlServerProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfile(GetSamlServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlServerProfileResult> getSamlServerProfilePlain(GetSamlServerProfilePlainArgs args) {
        return getSamlServerProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfile(GetSamlServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlServerProfileResult> getSamlServerProfile(GetSamlServerProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSamlServerProfile:getSamlServerProfile", TypeShape.of(GetSamlServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfile(GetSamlServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlServerProfileResult> getSamlServerProfilePlain(GetSamlServerProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSamlServerProfile:getSamlServerProfile", TypeShape.of(GetSamlServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfileList(GetSamlServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlServerProfileListResult> getSamlServerProfileList() {
        return getSamlServerProfileList(GetSamlServerProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfileList(GetSamlServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlServerProfileListResult> getSamlServerProfileListPlain() {
        return getSamlServerProfileListPlain(GetSamlServerProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfileList(GetSamlServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlServerProfileListResult> getSamlServerProfileList(GetSamlServerProfileListArgs args) {
        return getSamlServerProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfileList(GetSamlServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlServerProfileListResult> getSamlServerProfileListPlain(GetSamlServerProfileListPlainArgs args) {
        return getSamlServerProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfileList(GetSamlServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSamlServerProfileListResult> getSamlServerProfileList(GetSamlServerProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSamlServerProfileList:getSamlServerProfileList", TypeShape.of(GetSamlServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSamlServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSamlServerProfileList(GetSamlServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSamlServerProfileListResult> getSamlServerProfileListPlain(GetSamlServerProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSamlServerProfileList:getSamlServerProfileList", TypeShape.of(GetSamlServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfile(GetScepProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScepProfileResult> getScepProfile(GetScepProfileArgs args) {
        return getScepProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfile(GetScepProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScepProfileResult> getScepProfilePlain(GetScepProfilePlainArgs args) {
        return getScepProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfile(GetScepProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScepProfileResult> getScepProfile(GetScepProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getScepProfile:getScepProfile", TypeShape.of(GetScepProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfile(GetScepProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScepProfileResult> getScepProfilePlain(GetScepProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getScepProfile:getScepProfile", TypeShape.of(GetScepProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfileList(GetScepProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScepProfileListResult> getScepProfileList() {
        return getScepProfileList(GetScepProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfileList(GetScepProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScepProfileListResult> getScepProfileListPlain() {
        return getScepProfileListPlain(GetScepProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfileList(GetScepProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScepProfileListResult> getScepProfileList(GetScepProfileListArgs args) {
        return getScepProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfileList(GetScepProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScepProfileListResult> getScepProfileListPlain(GetScepProfileListPlainArgs args) {
        return getScepProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfileList(GetScepProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScepProfileListResult> getScepProfileList(GetScepProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getScepProfileList:getScepProfileList", TypeShape.of(GetScepProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScepProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScepProfileList(GetScepProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScepProfileListResult> getScepProfileListPlain(GetScepProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getScepProfileList:getScepProfileList", TypeShape.of(GetScepProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSchedule(GetScheduleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleResult> getSchedule(GetScheduleArgs args) {
        return getSchedule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSchedule(GetScheduleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleResult> getSchedulePlain(GetSchedulePlainArgs args) {
        return getSchedulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSchedule(GetScheduleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleResult> getSchedule(GetScheduleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSchedule:getSchedule", TypeShape.of(GetScheduleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSchedule(GetScheduleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleResult> getSchedulePlain(GetSchedulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSchedule:getSchedule", TypeShape.of(GetScheduleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScheduleList(GetScheduleListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleListResult> getScheduleList() {
        return getScheduleList(GetScheduleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScheduleList(GetScheduleListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleListResult> getScheduleListPlain() {
        return getScheduleListPlain(GetScheduleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScheduleList(GetScheduleListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleListResult> getScheduleList(GetScheduleListArgs args) {
        return getScheduleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScheduleList(GetScheduleListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleListResult> getScheduleListPlain(GetScheduleListPlainArgs args) {
        return getScheduleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScheduleList(GetScheduleListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleListResult> getScheduleList(GetScheduleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getScheduleList:getScheduleList", TypeShape.of(GetScheduleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetScheduleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getScheduleList(GetScheduleListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleListResult> getScheduleListPlain(GetScheduleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getScheduleList:getScheduleList", TypeShape.of(GetScheduleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRule(GetSecurityRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleResult> getSecurityRule(GetSecurityRuleArgs args) {
        return getSecurityRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRule(GetSecurityRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleResult> getSecurityRulePlain(GetSecurityRulePlainArgs args) {
        return getSecurityRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRule(GetSecurityRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleResult> getSecurityRule(GetSecurityRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSecurityRule:getSecurityRule", TypeShape.of(GetSecurityRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRule(GetSecurityRuleArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleResult> getSecurityRulePlain(GetSecurityRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSecurityRule:getSecurityRule", TypeShape.of(GetSecurityRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRuleList(GetSecurityRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleListResult> getSecurityRuleList() {
        return getSecurityRuleList(GetSecurityRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRuleList(GetSecurityRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleListResult> getSecurityRuleListPlain() {
        return getSecurityRuleListPlain(GetSecurityRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRuleList(GetSecurityRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleListResult> getSecurityRuleList(GetSecurityRuleListArgs args) {
        return getSecurityRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRuleList(GetSecurityRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleListResult> getSecurityRuleListPlain(GetSecurityRuleListPlainArgs args) {
        return getSecurityRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRuleList(GetSecurityRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityRuleListResult> getSecurityRuleList(GetSecurityRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSecurityRuleList:getSecurityRuleList", TypeShape.of(GetSecurityRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSecurityRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSecurityRuleList(GetSecurityRuleListArgs.builder()
     *             .folder("Shared")
     *             .position("pre")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityRuleListResult> getSecurityRuleListPlain(GetSecurityRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSecurityRuleList:getSecurityRuleList", TypeShape.of(GetSecurityRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getService(GetServiceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getService(GetServiceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getService(GetServiceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getService(GetServiceArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnection(GetServiceConnectionArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionResult> getServiceConnection(GetServiceConnectionArgs args) {
        return getServiceConnection(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnection(GetServiceConnectionArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionResult> getServiceConnectionPlain(GetServiceConnectionPlainArgs args) {
        return getServiceConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnection(GetServiceConnectionArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionResult> getServiceConnection(GetServiceConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceConnection:getServiceConnection", TypeShape.of(GetServiceConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnection(GetServiceConnectionArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionResult> getServiceConnectionPlain(GetServiceConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceConnection:getServiceConnection", TypeShape.of(GetServiceConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroup(GetServiceConnectionGroupArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionGroupResult> getServiceConnectionGroup(GetServiceConnectionGroupArgs args) {
        return getServiceConnectionGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroup(GetServiceConnectionGroupArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionGroupResult> getServiceConnectionGroupPlain(GetServiceConnectionGroupPlainArgs args) {
        return getServiceConnectionGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroup(GetServiceConnectionGroupArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionGroupResult> getServiceConnectionGroup(GetServiceConnectionGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceConnectionGroup:getServiceConnectionGroup", TypeShape.of(GetServiceConnectionGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroup(GetServiceConnectionGroupArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionGroupResult> getServiceConnectionGroupPlain(GetServiceConnectionGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceConnectionGroup:getServiceConnectionGroup", TypeShape.of(GetServiceConnectionGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionGroupListResult> getServiceConnectionGroupList() {
        return getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionGroupListResult> getServiceConnectionGroupListPlain() {
        return getServiceConnectionGroupListPlain(GetServiceConnectionGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionGroupListResult> getServiceConnectionGroupList(GetServiceConnectionGroupListArgs args) {
        return getServiceConnectionGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionGroupListResult> getServiceConnectionGroupListPlain(GetServiceConnectionGroupListPlainArgs args) {
        return getServiceConnectionGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionGroupListResult> getServiceConnectionGroupList(GetServiceConnectionGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceConnectionGroupList:getServiceConnectionGroupList", TypeShape.of(GetServiceConnectionGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionGroupList(GetServiceConnectionGroupListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionGroupListResult> getServiceConnectionGroupListPlain(GetServiceConnectionGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceConnectionGroupList:getServiceConnectionGroupList", TypeShape.of(GetServiceConnectionGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionList(GetServiceConnectionListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionListResult> getServiceConnectionList() {
        return getServiceConnectionList(GetServiceConnectionListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionList(GetServiceConnectionListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionListResult> getServiceConnectionListPlain() {
        return getServiceConnectionListPlain(GetServiceConnectionListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionList(GetServiceConnectionListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionListResult> getServiceConnectionList(GetServiceConnectionListArgs args) {
        return getServiceConnectionList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionList(GetServiceConnectionListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionListResult> getServiceConnectionListPlain(GetServiceConnectionListPlainArgs args) {
        return getServiceConnectionListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionList(GetServiceConnectionListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceConnectionListResult> getServiceConnectionList(GetServiceConnectionListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceConnectionList:getServiceConnectionList", TypeShape.of(GetServiceConnectionListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceConnectionListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceConnectionList(GetServiceConnectionListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceConnectionListResult> getServiceConnectionListPlain(GetServiceConnectionListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceConnectionList:getServiceConnectionList", TypeShape.of(GetServiceConnectionListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroup(GetServiceGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceGroupResult> getServiceGroup(GetServiceGroupArgs args) {
        return getServiceGroup(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroup(GetServiceGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceGroupResult> getServiceGroupPlain(GetServiceGroupPlainArgs args) {
        return getServiceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroup(GetServiceGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceGroupResult> getServiceGroup(GetServiceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceGroup:getServiceGroup", TypeShape.of(GetServiceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroup(GetServiceGroupArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceGroupResult> getServiceGroupPlain(GetServiceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceGroup:getServiceGroup", TypeShape.of(GetServiceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroupList(GetServiceGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceGroupListResult> getServiceGroupList() {
        return getServiceGroupList(GetServiceGroupListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroupList(GetServiceGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceGroupListResult> getServiceGroupListPlain() {
        return getServiceGroupListPlain(GetServiceGroupListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroupList(GetServiceGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceGroupListResult> getServiceGroupList(GetServiceGroupListArgs args) {
        return getServiceGroupList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroupList(GetServiceGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceGroupListResult> getServiceGroupListPlain(GetServiceGroupListPlainArgs args) {
        return getServiceGroupListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroupList(GetServiceGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceGroupListResult> getServiceGroupList(GetServiceGroupListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceGroupList:getServiceGroupList", TypeShape.of(GetServiceGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceGroupListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceGroupList(GetServiceGroupListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceGroupListResult> getServiceGroupListPlain(GetServiceGroupListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceGroupList:getServiceGroupList", TypeShape.of(GetServiceGroupListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceList(GetServiceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceListResult> getServiceList() {
        return getServiceList(GetServiceListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceList(GetServiceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceListResult> getServiceListPlain() {
        return getServiceListPlain(GetServiceListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceList(GetServiceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceListResult> getServiceList(GetServiceListArgs args) {
        return getServiceList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceList(GetServiceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceListResult> getServiceListPlain(GetServiceListPlainArgs args) {
        return getServiceListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceList(GetServiceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceListResult> getServiceList(GetServiceListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getServiceList:getServiceList", TypeShape.of(GetServiceListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetServiceListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getServiceList(GetServiceListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceListResult> getServiceListPlain(GetServiceListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getServiceList:getServiceList", TypeShape.of(GetServiceListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSharedInfrastructureSettingsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSharedInfrastructureSettingsListResult> getSharedInfrastructureSettingsList() {
        return getSharedInfrastructureSettingsList(GetSharedInfrastructureSettingsListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSharedInfrastructureSettingsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSharedInfrastructureSettingsListResult> getSharedInfrastructureSettingsListPlain() {
        return getSharedInfrastructureSettingsListPlain(GetSharedInfrastructureSettingsListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSharedInfrastructureSettingsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSharedInfrastructureSettingsListResult> getSharedInfrastructureSettingsList(GetSharedInfrastructureSettingsListArgs args) {
        return getSharedInfrastructureSettingsList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSharedInfrastructureSettingsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSharedInfrastructureSettingsListResult> getSharedInfrastructureSettingsListPlain(GetSharedInfrastructureSettingsListPlainArgs args) {
        return getSharedInfrastructureSettingsListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSharedInfrastructureSettingsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSharedInfrastructureSettingsListResult> getSharedInfrastructureSettingsList(GetSharedInfrastructureSettingsListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSharedInfrastructureSettingsList:getSharedInfrastructureSettingsList", TypeShape.of(GetSharedInfrastructureSettingsListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSharedInfrastructureSettingsListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSharedInfrastructureSettingsList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSharedInfrastructureSettingsListResult> getSharedInfrastructureSettingsListPlain(GetSharedInfrastructureSettingsListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSharedInfrastructureSettingsList:getSharedInfrastructureSettingsList", TypeShape.of(GetSharedInfrastructureSettingsListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippet(GetSnippetArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetResult> getSnippet(GetSnippetArgs args) {
        return getSnippet(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippet(GetSnippetArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetResult> getSnippetPlain(GetSnippetPlainArgs args) {
        return getSnippetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippet(GetSnippetArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetResult> getSnippet(GetSnippetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSnippet:getSnippet", TypeShape.of(GetSnippetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippet(GetSnippetArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetResult> getSnippetPlain(GetSnippetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSnippet:getSnippet", TypeShape.of(GetSnippetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippetList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetListResult> getSnippetList() {
        return getSnippetList(GetSnippetListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippetList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetListResult> getSnippetListPlain() {
        return getSnippetListPlain(GetSnippetListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippetList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetListResult> getSnippetList(GetSnippetListArgs args) {
        return getSnippetList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippetList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetListResult> getSnippetListPlain(GetSnippetListPlainArgs args) {
        return getSnippetListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippetList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnippetListResult> getSnippetList(GetSnippetListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getSnippetList:getSnippetList", TypeShape.of(GetSnippetListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetSnippetListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getSnippetList();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnippetListResult> getSnippetListPlain(GetSnippetListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getSnippetList:getSnippetList", TypeShape.of(GetSnippetListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfile(GetTacacsServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTacacsServerProfileResult> getTacacsServerProfile(GetTacacsServerProfileArgs args) {
        return getTacacsServerProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfile(GetTacacsServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTacacsServerProfileResult> getTacacsServerProfilePlain(GetTacacsServerProfilePlainArgs args) {
        return getTacacsServerProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfile(GetTacacsServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTacacsServerProfileResult> getTacacsServerProfile(GetTacacsServerProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTacacsServerProfile:getTacacsServerProfile", TypeShape.of(GetTacacsServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfile(GetTacacsServerProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTacacsServerProfileResult> getTacacsServerProfilePlain(GetTacacsServerProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTacacsServerProfile:getTacacsServerProfile", TypeShape.of(GetTacacsServerProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfileList(GetTacacsServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTacacsServerProfileListResult> getTacacsServerProfileList() {
        return getTacacsServerProfileList(GetTacacsServerProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfileList(GetTacacsServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTacacsServerProfileListResult> getTacacsServerProfileListPlain() {
        return getTacacsServerProfileListPlain(GetTacacsServerProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfileList(GetTacacsServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTacacsServerProfileListResult> getTacacsServerProfileList(GetTacacsServerProfileListArgs args) {
        return getTacacsServerProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfileList(GetTacacsServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTacacsServerProfileListResult> getTacacsServerProfileListPlain(GetTacacsServerProfileListPlainArgs args) {
        return getTacacsServerProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfileList(GetTacacsServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTacacsServerProfileListResult> getTacacsServerProfileList(GetTacacsServerProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTacacsServerProfileList:getTacacsServerProfileList", TypeShape.of(GetTacacsServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTacacsServerProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTacacsServerProfileList(GetTacacsServerProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTacacsServerProfileListResult> getTacacsServerProfileListPlain(GetTacacsServerProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTacacsServerProfileList:getTacacsServerProfileList", TypeShape.of(GetTacacsServerProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTag(GetTagArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTagResult> getTag(GetTagArgs args) {
        return getTag(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTag(GetTagArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTagResult> getTagPlain(GetTagPlainArgs args) {
        return getTagPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTag(GetTagArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTagResult> getTag(GetTagArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTag:getTag", TypeShape.of(GetTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTag(GetTagArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTagResult> getTagPlain(GetTagPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTag:getTag", TypeShape.of(GetTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTagList(GetTagListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTagListResult> getTagList() {
        return getTagList(GetTagListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTagList(GetTagListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTagListResult> getTagListPlain() {
        return getTagListPlain(GetTagListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTagList(GetTagListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTagListResult> getTagList(GetTagListArgs args) {
        return getTagList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTagList(GetTagListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTagListResult> getTagListPlain(GetTagListPlainArgs args) {
        return getTagListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTagList(GetTagListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTagListResult> getTagList(GetTagListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTagList:getTagList", TypeShape.of(GetTagListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTagListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTagList(GetTagListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTagListResult> getTagListPlain(GetTagListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTagList:getTagList", TypeShape.of(GetTagListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfile(GetTlsServiceProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTlsServiceProfileResult> getTlsServiceProfile(GetTlsServiceProfileArgs args) {
        return getTlsServiceProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfile(GetTlsServiceProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTlsServiceProfileResult> getTlsServiceProfilePlain(GetTlsServiceProfilePlainArgs args) {
        return getTlsServiceProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfile(GetTlsServiceProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTlsServiceProfileResult> getTlsServiceProfile(GetTlsServiceProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTlsServiceProfile:getTlsServiceProfile", TypeShape.of(GetTlsServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfile(GetTlsServiceProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTlsServiceProfileResult> getTlsServiceProfilePlain(GetTlsServiceProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTlsServiceProfile:getTlsServiceProfile", TypeShape.of(GetTlsServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfileList(GetTlsServiceProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTlsServiceProfileListResult> getTlsServiceProfileList() {
        return getTlsServiceProfileList(GetTlsServiceProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfileList(GetTlsServiceProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTlsServiceProfileListResult> getTlsServiceProfileListPlain() {
        return getTlsServiceProfileListPlain(GetTlsServiceProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfileList(GetTlsServiceProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTlsServiceProfileListResult> getTlsServiceProfileList(GetTlsServiceProfileListArgs args) {
        return getTlsServiceProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfileList(GetTlsServiceProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTlsServiceProfileListResult> getTlsServiceProfileListPlain(GetTlsServiceProfileListPlainArgs args) {
        return getTlsServiceProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfileList(GetTlsServiceProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTlsServiceProfileListResult> getTlsServiceProfileList(GetTlsServiceProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTlsServiceProfileList:getTlsServiceProfileList", TypeShape.of(GetTlsServiceProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTlsServiceProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTlsServiceProfileList(GetTlsServiceProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTlsServiceProfileListResult> getTlsServiceProfileListPlain(GetTlsServiceProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTlsServiceProfileList:getTlsServiceProfileList", TypeShape.of(GetTlsServiceProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRule(GetTrafficSteeringRuleArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrafficSteeringRuleResult> getTrafficSteeringRule(GetTrafficSteeringRuleArgs args) {
        return getTrafficSteeringRule(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRule(GetTrafficSteeringRuleArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrafficSteeringRuleResult> getTrafficSteeringRulePlain(GetTrafficSteeringRulePlainArgs args) {
        return getTrafficSteeringRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRule(GetTrafficSteeringRuleArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrafficSteeringRuleResult> getTrafficSteeringRule(GetTrafficSteeringRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTrafficSteeringRule:getTrafficSteeringRule", TypeShape.of(GetTrafficSteeringRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRule(GetTrafficSteeringRuleArgs.builder()
     *             .id("1234-56-789")
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrafficSteeringRuleResult> getTrafficSteeringRulePlain(GetTrafficSteeringRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTrafficSteeringRule:getTrafficSteeringRule", TypeShape.of(GetTrafficSteeringRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrafficSteeringRuleListResult> getTrafficSteeringRuleList() {
        return getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrafficSteeringRuleListResult> getTrafficSteeringRuleListPlain() {
        return getTrafficSteeringRuleListPlain(GetTrafficSteeringRuleListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrafficSteeringRuleListResult> getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs args) {
        return getTrafficSteeringRuleList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrafficSteeringRuleListResult> getTrafficSteeringRuleListPlain(GetTrafficSteeringRuleListPlainArgs args) {
        return getTrafficSteeringRuleListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrafficSteeringRuleListResult> getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTrafficSteeringRuleList:getTrafficSteeringRuleList", TypeShape.of(GetTrafficSteeringRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrafficSteeringRuleListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrafficSteeringRuleList(GetTrafficSteeringRuleListArgs.builder()
     *             .folder("Service Connections")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrafficSteeringRuleListResult> getTrafficSteeringRuleListPlain(GetTrafficSteeringRuleListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTrafficSteeringRuleList:getTrafficSteeringRuleList", TypeShape.of(GetTrafficSteeringRuleListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrustedCertificateAuthorityListResult> getTrustedCertificateAuthorityList() {
        return getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrustedCertificateAuthorityListResult> getTrustedCertificateAuthorityListPlain() {
        return getTrustedCertificateAuthorityListPlain(GetTrustedCertificateAuthorityListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrustedCertificateAuthorityListResult> getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs args) {
        return getTrustedCertificateAuthorityList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrustedCertificateAuthorityListResult> getTrustedCertificateAuthorityListPlain(GetTrustedCertificateAuthorityListPlainArgs args) {
        return getTrustedCertificateAuthorityListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTrustedCertificateAuthorityListResult> getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getTrustedCertificateAuthorityList:getTrustedCertificateAuthorityList", TypeShape.of(GetTrustedCertificateAuthorityListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetTrustedCertificateAuthorityListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getTrustedCertificateAuthorityList(GetTrustedCertificateAuthorityListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTrustedCertificateAuthorityListResult> getTrustedCertificateAuthorityListPlain(GetTrustedCertificateAuthorityListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getTrustedCertificateAuthorityList:getTrustedCertificateAuthorityList", TypeShape.of(GetTrustedCertificateAuthorityListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfile(GetUrlAccessProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlAccessProfileResult> getUrlAccessProfile(GetUrlAccessProfileArgs args) {
        return getUrlAccessProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfile(GetUrlAccessProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlAccessProfileResult> getUrlAccessProfilePlain(GetUrlAccessProfilePlainArgs args) {
        return getUrlAccessProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfile(GetUrlAccessProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlAccessProfileResult> getUrlAccessProfile(GetUrlAccessProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getUrlAccessProfile:getUrlAccessProfile", TypeShape.of(GetUrlAccessProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfile(GetUrlAccessProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlAccessProfileResult> getUrlAccessProfilePlain(GetUrlAccessProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getUrlAccessProfile:getUrlAccessProfile", TypeShape.of(GetUrlAccessProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfileList(GetUrlAccessProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlAccessProfileListResult> getUrlAccessProfileList() {
        return getUrlAccessProfileList(GetUrlAccessProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfileList(GetUrlAccessProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlAccessProfileListResult> getUrlAccessProfileListPlain() {
        return getUrlAccessProfileListPlain(GetUrlAccessProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfileList(GetUrlAccessProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlAccessProfileListResult> getUrlAccessProfileList(GetUrlAccessProfileListArgs args) {
        return getUrlAccessProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfileList(GetUrlAccessProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlAccessProfileListResult> getUrlAccessProfileListPlain(GetUrlAccessProfileListPlainArgs args) {
        return getUrlAccessProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfileList(GetUrlAccessProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlAccessProfileListResult> getUrlAccessProfileList(GetUrlAccessProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getUrlAccessProfileList:getUrlAccessProfileList", TypeShape.of(GetUrlAccessProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlAccessProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlAccessProfileList(GetUrlAccessProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlAccessProfileListResult> getUrlAccessProfileListPlain(GetUrlAccessProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getUrlAccessProfileList:getUrlAccessProfileList", TypeShape.of(GetUrlAccessProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     */
    public static Output<GetUrlCategoryResult> getUrlCategory(GetUrlCategoryArgs args) {
        return getUrlCategory(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     */
    public static CompletableFuture<GetUrlCategoryResult> getUrlCategoryPlain(GetUrlCategoryPlainArgs args) {
        return getUrlCategoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     */
    public static Output<GetUrlCategoryResult> getUrlCategory(GetUrlCategoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getUrlCategory:getUrlCategory", TypeShape.of(GetUrlCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     */
    public static CompletableFuture<GetUrlCategoryResult> getUrlCategoryPlain(GetUrlCategoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getUrlCategory:getUrlCategory", TypeShape.of(GetUrlCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlCategoryList(GetUrlCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlCategoryListResult> getUrlCategoryList() {
        return getUrlCategoryList(GetUrlCategoryListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlCategoryList(GetUrlCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlCategoryListResult> getUrlCategoryListPlain() {
        return getUrlCategoryListPlain(GetUrlCategoryListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlCategoryList(GetUrlCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlCategoryListResult> getUrlCategoryList(GetUrlCategoryListArgs args) {
        return getUrlCategoryList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlCategoryList(GetUrlCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlCategoryListResult> getUrlCategoryListPlain(GetUrlCategoryListPlainArgs args) {
        return getUrlCategoryListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlCategoryList(GetUrlCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlCategoryListResult> getUrlCategoryList(GetUrlCategoryListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getUrlCategoryList:getUrlCategoryList", TypeShape.of(GetUrlCategoryListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlCategoryList(GetUrlCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlCategoryListResult> getUrlCategoryListPlain(GetUrlCategoryListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getUrlCategoryList:getUrlCategoryList", TypeShape.of(GetUrlCategoryListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlFilteringCategoryListResult> getUrlFilteringCategoryList() {
        return getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlFilteringCategoryListResult> getUrlFilteringCategoryListPlain() {
        return getUrlFilteringCategoryListPlain(GetUrlFilteringCategoryListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlFilteringCategoryListResult> getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs args) {
        return getUrlFilteringCategoryList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlFilteringCategoryListResult> getUrlFilteringCategoryListPlain(GetUrlFilteringCategoryListPlainArgs args) {
        return getUrlFilteringCategoryListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUrlFilteringCategoryListResult> getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getUrlFilteringCategoryList:getUrlFilteringCategoryList", TypeShape.of(GetUrlFilteringCategoryListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetUrlFilteringCategoryListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getUrlFilteringCategoryList(GetUrlFilteringCategoryListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUrlFilteringCategoryListResult> getUrlFilteringCategoryListPlain(GetUrlFilteringCategoryListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getUrlFilteringCategoryList:getUrlFilteringCategoryList", TypeShape.of(GetUrlFilteringCategoryListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariable(GetVariableArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVariableResult> getVariable(GetVariableArgs args) {
        return getVariable(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariable(GetVariableArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVariableResult> getVariablePlain(GetVariablePlainArgs args) {
        return getVariablePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariable(GetVariableArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVariableResult> getVariable(GetVariableArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getVariable:getVariable", TypeShape.of(GetVariableResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariable(GetVariableArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVariableResult> getVariablePlain(GetVariablePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getVariable:getVariable", TypeShape.of(GetVariableResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariableList(GetVariableListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVariableListResult> getVariableList() {
        return getVariableList(GetVariableListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariableList(GetVariableListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVariableListResult> getVariableListPlain() {
        return getVariableListPlain(GetVariableListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariableList(GetVariableListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVariableListResult> getVariableList(GetVariableListArgs args) {
        return getVariableList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariableList(GetVariableListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVariableListResult> getVariableListPlain(GetVariableListPlainArgs args) {
        return getVariableListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariableList(GetVariableListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVariableListResult> getVariableList(GetVariableListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getVariableList:getVariableList", TypeShape.of(GetVariableListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVariableListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVariableList(GetVariableListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVariableListResult> getVariableListPlain(GetVariableListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getVariableList:getVariableList", TypeShape.of(GetVariableListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfile(GetVulnerabilityProtectionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionProfileResult> getVulnerabilityProtectionProfile(GetVulnerabilityProtectionProfileArgs args) {
        return getVulnerabilityProtectionProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfile(GetVulnerabilityProtectionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionProfileResult> getVulnerabilityProtectionProfilePlain(GetVulnerabilityProtectionProfilePlainArgs args) {
        return getVulnerabilityProtectionProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfile(GetVulnerabilityProtectionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionProfileResult> getVulnerabilityProtectionProfile(GetVulnerabilityProtectionProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getVulnerabilityProtectionProfile:getVulnerabilityProtectionProfile", TypeShape.of(GetVulnerabilityProtectionProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfile(GetVulnerabilityProtectionProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionProfileResult> getVulnerabilityProtectionProfilePlain(GetVulnerabilityProtectionProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getVulnerabilityProtectionProfile:getVulnerabilityProtectionProfile", TypeShape.of(GetVulnerabilityProtectionProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionProfileListResult> getVulnerabilityProtectionProfileList() {
        return getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionProfileListResult> getVulnerabilityProtectionProfileListPlain() {
        return getVulnerabilityProtectionProfileListPlain(GetVulnerabilityProtectionProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionProfileListResult> getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs args) {
        return getVulnerabilityProtectionProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionProfileListResult> getVulnerabilityProtectionProfileListPlain(GetVulnerabilityProtectionProfileListPlainArgs args) {
        return getVulnerabilityProtectionProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionProfileListResult> getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getVulnerabilityProtectionProfileList:getVulnerabilityProtectionProfileList", TypeShape.of(GetVulnerabilityProtectionProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionProfileList(GetVulnerabilityProtectionProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionProfileListResult> getVulnerabilityProtectionProfileListPlain(GetVulnerabilityProtectionProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getVulnerabilityProtectionProfileList:getVulnerabilityProtectionProfileList", TypeShape.of(GetVulnerabilityProtectionProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignatures(GetVulnerabilityProtectionSignaturesArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionSignaturesResult> getVulnerabilityProtectionSignatures(GetVulnerabilityProtectionSignaturesArgs args) {
        return getVulnerabilityProtectionSignatures(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignatures(GetVulnerabilityProtectionSignaturesArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionSignaturesResult> getVulnerabilityProtectionSignaturesPlain(GetVulnerabilityProtectionSignaturesPlainArgs args) {
        return getVulnerabilityProtectionSignaturesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignatures(GetVulnerabilityProtectionSignaturesArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionSignaturesResult> getVulnerabilityProtectionSignatures(GetVulnerabilityProtectionSignaturesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getVulnerabilityProtectionSignatures:getVulnerabilityProtectionSignatures", TypeShape.of(GetVulnerabilityProtectionSignaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignatures(GetVulnerabilityProtectionSignaturesArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionSignaturesResult> getVulnerabilityProtectionSignaturesPlain(GetVulnerabilityProtectionSignaturesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getVulnerabilityProtectionSignatures:getVulnerabilityProtectionSignatures", TypeShape.of(GetVulnerabilityProtectionSignaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionSignaturesListResult> getVulnerabilityProtectionSignaturesList() {
        return getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionSignaturesListResult> getVulnerabilityProtectionSignaturesListPlain() {
        return getVulnerabilityProtectionSignaturesListPlain(GetVulnerabilityProtectionSignaturesListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionSignaturesListResult> getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs args) {
        return getVulnerabilityProtectionSignaturesList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionSignaturesListResult> getVulnerabilityProtectionSignaturesListPlain(GetVulnerabilityProtectionSignaturesListPlainArgs args) {
        return getVulnerabilityProtectionSignaturesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVulnerabilityProtectionSignaturesListResult> getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getVulnerabilityProtectionSignaturesList:getVulnerabilityProtectionSignaturesList", TypeShape.of(GetVulnerabilityProtectionSignaturesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetVulnerabilityProtectionSignaturesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getVulnerabilityProtectionSignaturesList(GetVulnerabilityProtectionSignaturesListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVulnerabilityProtectionSignaturesListResult> getVulnerabilityProtectionSignaturesListPlain(GetVulnerabilityProtectionSignaturesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getVulnerabilityProtectionSignaturesList:getVulnerabilityProtectionSignaturesList", TypeShape.of(GetVulnerabilityProtectionSignaturesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfile(GetWildfireAntiVirusProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWildfireAntiVirusProfileResult> getWildfireAntiVirusProfile(GetWildfireAntiVirusProfileArgs args) {
        return getWildfireAntiVirusProfile(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfile(GetWildfireAntiVirusProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWildfireAntiVirusProfileResult> getWildfireAntiVirusProfilePlain(GetWildfireAntiVirusProfilePlainArgs args) {
        return getWildfireAntiVirusProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfile(GetWildfireAntiVirusProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWildfireAntiVirusProfileResult> getWildfireAntiVirusProfile(GetWildfireAntiVirusProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getWildfireAntiVirusProfile:getWildfireAntiVirusProfile", TypeShape.of(GetWildfireAntiVirusProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a config item.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfile(GetWildfireAntiVirusProfileArgs.builder()
     *             .id("1234-56-789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWildfireAntiVirusProfileResult> getWildfireAntiVirusProfilePlain(GetWildfireAntiVirusProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getWildfireAntiVirusProfile:getWildfireAntiVirusProfile", TypeShape.of(GetWildfireAntiVirusProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWildfireAntiVirusProfileListResult> getWildfireAntiVirusProfileList() {
        return getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWildfireAntiVirusProfileListResult> getWildfireAntiVirusProfileListPlain() {
        return getWildfireAntiVirusProfileListPlain(GetWildfireAntiVirusProfileListPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWildfireAntiVirusProfileListResult> getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs args) {
        return getWildfireAntiVirusProfileList(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWildfireAntiVirusProfileListResult> getWildfireAntiVirusProfileListPlain(GetWildfireAntiVirusProfileListPlainArgs args) {
        return getWildfireAntiVirusProfileListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWildfireAntiVirusProfileListResult> getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scm:index/getWildfireAntiVirusProfileList:getWildfireAntiVirusProfileList", TypeShape.of(GetWildfireAntiVirusProfileListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves a listing of config items.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scm.ScmFunctions;
     * import com.pulumi.scm.inputs.GetWildfireAntiVirusProfileListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ScmFunctions.getWildfireAntiVirusProfileList(GetWildfireAntiVirusProfileListArgs.builder()
     *             .folder("Shared")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWildfireAntiVirusProfileListResult> getWildfireAntiVirusProfileListPlain(GetWildfireAntiVirusProfileListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scm:index/getWildfireAntiVirusProfileList:getWildfireAntiVirusProfileList", TypeShape.of(GetWildfireAntiVirusProfileListResult.class), args, Utilities.withVersion(options));
    }
}
