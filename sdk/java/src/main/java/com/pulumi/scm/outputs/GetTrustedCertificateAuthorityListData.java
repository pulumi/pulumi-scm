// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTrustedCertificateAuthorityListData {
    /**
     * @return The CommonName param. String length must not exceed 255 characters.
     * 
     */
    private String commonName;
    /**
     * @return The ExpiryEpoch param.
     * 
     */
    private String expiryEpoch;
    /**
     * @return The Filename param.
     * 
     */
    private String filename;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return The Issuer param.
     * 
     */
    private String issuer;
    /**
     * @return The Name param. String length must not exceed 63 characters.
     * 
     */
    private String name;
    /**
     * @return The NotValidAfter param.
     * 
     */
    private String notValidAfter;
    /**
     * @return The NotValidBefore param.
     * 
     */
    private String notValidBefore;
    /**
     * @return The SerialNumber param.
     * 
     */
    private String serialNumber;
    /**
     * @return The Subject param.
     * 
     */
    private String subject;

    private GetTrustedCertificateAuthorityListData() {}
    /**
     * @return The CommonName param. String length must not exceed 255 characters.
     * 
     */
    public String commonName() {
        return this.commonName;
    }
    /**
     * @return The ExpiryEpoch param.
     * 
     */
    public String expiryEpoch() {
        return this.expiryEpoch;
    }
    /**
     * @return The Filename param.
     * 
     */
    public String filename() {
        return this.filename;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Issuer param.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return The Name param. String length must not exceed 63 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The NotValidAfter param.
     * 
     */
    public String notValidAfter() {
        return this.notValidAfter;
    }
    /**
     * @return The NotValidBefore param.
     * 
     */
    public String notValidBefore() {
        return this.notValidBefore;
    }
    /**
     * @return The SerialNumber param.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return The Subject param.
     * 
     */
    public String subject() {
        return this.subject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrustedCertificateAuthorityListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commonName;
        private String expiryEpoch;
        private String filename;
        private String id;
        private String issuer;
        private String name;
        private String notValidAfter;
        private String notValidBefore;
        private String serialNumber;
        private String subject;
        public Builder() {}
        public Builder(GetTrustedCertificateAuthorityListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.expiryEpoch = defaults.expiryEpoch;
    	      this.filename = defaults.filename;
    	      this.id = defaults.id;
    	      this.issuer = defaults.issuer;
    	      this.name = defaults.name;
    	      this.notValidAfter = defaults.notValidAfter;
    	      this.notValidBefore = defaults.notValidBefore;
    	      this.serialNumber = defaults.serialNumber;
    	      this.subject = defaults.subject;
        }

        @CustomType.Setter
        public Builder commonName(String commonName) {
            if (commonName == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "commonName");
            }
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder expiryEpoch(String expiryEpoch) {
            if (expiryEpoch == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "expiryEpoch");
            }
            this.expiryEpoch = expiryEpoch;
            return this;
        }
        @CustomType.Setter
        public Builder filename(String filename) {
            if (filename == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "filename");
            }
            this.filename = filename;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            if (issuer == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "issuer");
            }
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notValidAfter(String notValidAfter) {
            if (notValidAfter == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "notValidAfter");
            }
            this.notValidAfter = notValidAfter;
            return this;
        }
        @CustomType.Setter
        public Builder notValidBefore(String notValidBefore) {
            if (notValidBefore == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "notValidBefore");
            }
            this.notValidBefore = notValidBefore;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            if (subject == null) {
              throw new MissingRequiredPropertyException("GetTrustedCertificateAuthorityListData", "subject");
            }
            this.subject = subject;
            return this;
        }
        public GetTrustedCertificateAuthorityListData build() {
            final var _resultValue = new GetTrustedCertificateAuthorityListData();
            _resultValue.commonName = commonName;
            _resultValue.expiryEpoch = expiryEpoch;
            _resultValue.filename = filename;
            _resultValue.id = id;
            _resultValue.issuer = issuer;
            _resultValue.name = name;
            _resultValue.notValidAfter = notValidAfter;
            _resultValue.notValidBefore = notValidBefore;
            _resultValue.serialNumber = serialNumber;
            _resultValue.subject = subject;
            return _resultValue;
        }
    }
}
