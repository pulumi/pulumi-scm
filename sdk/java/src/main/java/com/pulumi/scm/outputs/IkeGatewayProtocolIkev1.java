// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scm.outputs.IkeGatewayProtocolIkev1Dpd;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IkeGatewayProtocolIkev1 {
    /**
     * @return The Dpd param.
     * 
     */
    private @Nullable IkeGatewayProtocolIkev1Dpd dpd;
    /**
     * @return The IkeCryptoProfile param.
     * 
     */
    private @Nullable String ikeCryptoProfile;

    private IkeGatewayProtocolIkev1() {}
    /**
     * @return The Dpd param.
     * 
     */
    public Optional<IkeGatewayProtocolIkev1Dpd> dpd() {
        return Optional.ofNullable(this.dpd);
    }
    /**
     * @return The IkeCryptoProfile param.
     * 
     */
    public Optional<String> ikeCryptoProfile() {
        return Optional.ofNullable(this.ikeCryptoProfile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IkeGatewayProtocolIkev1 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable IkeGatewayProtocolIkev1Dpd dpd;
        private @Nullable String ikeCryptoProfile;
        public Builder() {}
        public Builder(IkeGatewayProtocolIkev1 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dpd = defaults.dpd;
    	      this.ikeCryptoProfile = defaults.ikeCryptoProfile;
        }

        @CustomType.Setter
        public Builder dpd(@Nullable IkeGatewayProtocolIkev1Dpd dpd) {

            this.dpd = dpd;
            return this;
        }
        @CustomType.Setter
        public Builder ikeCryptoProfile(@Nullable String ikeCryptoProfile) {

            this.ikeCryptoProfile = ikeCryptoProfile;
            return this;
        }
        public IkeGatewayProtocolIkev1 build() {
            final var _resultValue = new IkeGatewayProtocolIkev1();
            _resultValue.dpd = dpd;
            _resultValue.ikeCryptoProfile = ikeCryptoProfile;
            return _resultValue;
        }
    }
}
