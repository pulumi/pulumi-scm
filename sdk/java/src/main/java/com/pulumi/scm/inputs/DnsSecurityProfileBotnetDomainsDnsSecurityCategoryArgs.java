// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs Empty = new DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs();

    /**
     * The Action param. String must be one of these: `&#34;default&#34;`, `&#34;allow&#34;`, `&#34;block&#34;`, `&#34;sinkhole&#34;`. Default: `&#34;default&#34;`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return The Action param. String must be one of these: `&#34;default&#34;`, `&#34;allow&#34;`, `&#34;block&#34;`, `&#34;sinkhole&#34;`. Default: `&#34;default&#34;`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The LogLevel param. String must be one of these: `&#34;default&#34;`, `&#34;none&#34;`, `&#34;low&#34;`, `&#34;informational&#34;`, `&#34;medium&#34;`, `&#34;high&#34;`, `&#34;critical&#34;`. Default: `&#34;default&#34;`.
     * 
     */
    @Import(name="logLevel")
    private @Nullable Output<String> logLevel;

    /**
     * @return The LogLevel param. String must be one of these: `&#34;default&#34;`, `&#34;none&#34;`, `&#34;low&#34;`, `&#34;informational&#34;`, `&#34;medium&#34;`, `&#34;high&#34;`, `&#34;critical&#34;`. Default: `&#34;default&#34;`.
     * 
     */
    public Optional<Output<String>> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
     * 
     */
    @Import(name="packetCapture")
    private @Nullable Output<String> packetCapture;

    /**
     * @return The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
     * 
     */
    public Optional<Output<String>> packetCapture() {
        return Optional.ofNullable(this.packetCapture);
    }

    private DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs() {}

    private DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs(DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs $) {
        this.action = $.action;
        this.logLevel = $.logLevel;
        this.name = $.name;
        this.packetCapture = $.packetCapture;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs $;

        public Builder() {
            $ = new DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs();
        }

        public Builder(DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs defaults) {
            $ = new DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The Action param. String must be one of these: `&#34;default&#34;`, `&#34;allow&#34;`, `&#34;block&#34;`, `&#34;sinkhole&#34;`. Default: `&#34;default&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The Action param. String must be one of these: `&#34;default&#34;`, `&#34;allow&#34;`, `&#34;block&#34;`, `&#34;sinkhole&#34;`. Default: `&#34;default&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param logLevel The LogLevel param. String must be one of these: `&#34;default&#34;`, `&#34;none&#34;`, `&#34;low&#34;`, `&#34;informational&#34;`, `&#34;medium&#34;`, `&#34;high&#34;`, `&#34;critical&#34;`. Default: `&#34;default&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(@Nullable Output<String> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel The LogLevel param. String must be one of these: `&#34;default&#34;`, `&#34;none&#34;`, `&#34;low&#34;`, `&#34;informational&#34;`, `&#34;medium&#34;`, `&#34;high&#34;`, `&#34;critical&#34;`. Default: `&#34;default&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(String logLevel) {
            return logLevel(Output.of(logLevel));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param packetCapture The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder packetCapture(@Nullable Output<String> packetCapture) {
            $.packetCapture = packetCapture;
            return this;
        }

        /**
         * @param packetCapture The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder packetCapture(String packetCapture) {
            return packetCapture(Output.of(packetCapture));
        }

        public DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs build() {
            return $;
        }
    }

}
