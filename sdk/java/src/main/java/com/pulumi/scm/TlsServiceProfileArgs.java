// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.TlsServiceProfileProtocolSettingsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TlsServiceProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlsServiceProfileArgs Empty = new TlsServiceProfileArgs();

    /**
     * SSL certificate file name. String length must not exceed 255 characters.
     * 
     */
    @Import(name="certificate", required=true)
    private Output<String> certificate;

    /**
     * @return SSL certificate file name. String length must not exceed 255 characters.
     * 
     */
    public Output<String> certificate() {
        return this.certificate;
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ProtocolSettings param.
     * 
     */
    @Import(name="protocolSettings", required=true)
    private Output<TlsServiceProfileProtocolSettingsArgs> protocolSettings;

    /**
     * @return The ProtocolSettings param.
     * 
     */
    public Output<TlsServiceProfileProtocolSettingsArgs> protocolSettings() {
        return this.protocolSettings;
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    private TlsServiceProfileArgs() {}

    private TlsServiceProfileArgs(TlsServiceProfileArgs $) {
        this.certificate = $.certificate;
        this.device = $.device;
        this.folder = $.folder;
        this.name = $.name;
        this.protocolSettings = $.protocolSettings;
        this.snippet = $.snippet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsServiceProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsServiceProfileArgs $;

        public Builder() {
            $ = new TlsServiceProfileArgs();
        }

        public Builder(TlsServiceProfileArgs defaults) {
            $ = new TlsServiceProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate SSL certificate file name. String length must not exceed 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder certificate(Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate SSL certificate file name. String length must not exceed 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param name SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocolSettings The ProtocolSettings param.
         * 
         * @return builder
         * 
         */
        public Builder protocolSettings(Output<TlsServiceProfileProtocolSettingsArgs> protocolSettings) {
            $.protocolSettings = protocolSettings;
            return this;
        }

        /**
         * @param protocolSettings The ProtocolSettings param.
         * 
         * @return builder
         * 
         */
        public Builder protocolSettings(TlsServiceProfileProtocolSettingsArgs protocolSettings) {
            return protocolSettings(Output.of(protocolSettings));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        public TlsServiceProfileArgs build() {
            if ($.certificate == null) {
                throw new MissingRequiredPropertyException("TlsServiceProfileArgs", "certificate");
            }
            if ($.protocolSettings == null) {
                throw new MissingRequiredPropertyException("TlsServiceProfileArgs", "protocolSettings");
            }
            return $;
        }
    }

}
