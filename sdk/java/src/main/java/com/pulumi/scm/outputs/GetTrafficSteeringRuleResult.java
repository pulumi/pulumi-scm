// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetTrafficSteeringRuleAction;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTrafficSteeringRuleResult {
    /**
     * @return The Action param.
     * 
     */
    private GetTrafficSteeringRuleAction action;
    /**
     * @return The Category param.
     * 
     */
    private List<String> categories;
    /**
     * @return The Destination param.
     * 
     */
    private List<String> destinations;
    /**
     * @return The Id param.
     * 
     */
    private String id;
    /**
     * @return The Name param.
     * 
     */
    private String name;
    /**
     * @return The Service param.
     * 
     */
    private List<String> services;
    /**
     * @return The SourceUser param.
     * 
     */
    private List<String> sourceUsers;
    /**
     * @return The Source param.
     * 
     */
    private List<String> sources;
    private String tfid;

    private GetTrafficSteeringRuleResult() {}
    /**
     * @return The Action param.
     * 
     */
    public GetTrafficSteeringRuleAction action() {
        return this.action;
    }
    /**
     * @return The Category param.
     * 
     */
    public List<String> categories() {
        return this.categories;
    }
    /**
     * @return The Destination param.
     * 
     */
    public List<String> destinations() {
        return this.destinations;
    }
    /**
     * @return The Id param.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Name param.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Service param.
     * 
     */
    public List<String> services() {
        return this.services;
    }
    /**
     * @return The SourceUser param.
     * 
     */
    public List<String> sourceUsers() {
        return this.sourceUsers;
    }
    /**
     * @return The Source param.
     * 
     */
    public List<String> sources() {
        return this.sources;
    }
    public String tfid() {
        return this.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrafficSteeringRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetTrafficSteeringRuleAction action;
        private List<String> categories;
        private List<String> destinations;
        private String id;
        private String name;
        private List<String> services;
        private List<String> sourceUsers;
        private List<String> sources;
        private String tfid;
        public Builder() {}
        public Builder(GetTrafficSteeringRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.categories = defaults.categories;
    	      this.destinations = defaults.destinations;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.services = defaults.services;
    	      this.sourceUsers = defaults.sourceUsers;
    	      this.sources = defaults.sources;
    	      this.tfid = defaults.tfid;
        }

        @CustomType.Setter
        public Builder action(GetTrafficSteeringRuleAction action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder categories(List<String> categories) {
            if (categories == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "categories");
            }
            this.categories = categories;
            return this;
        }
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }
        @CustomType.Setter
        public Builder destinations(List<String> destinations) {
            if (destinations == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "destinations");
            }
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder services(List<String> services) {
            if (services == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "services");
            }
            this.services = services;
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        @CustomType.Setter
        public Builder sourceUsers(List<String> sourceUsers) {
            if (sourceUsers == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "sourceUsers");
            }
            this.sourceUsers = sourceUsers;
            return this;
        }
        public Builder sourceUsers(String... sourceUsers) {
            return sourceUsers(List.of(sourceUsers));
        }
        @CustomType.Setter
        public Builder sources(List<String> sources) {
            if (sources == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "sources");
            }
            this.sources = sources;
            return this;
        }
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder tfid(String tfid) {
            if (tfid == null) {
              throw new MissingRequiredPropertyException("GetTrafficSteeringRuleResult", "tfid");
            }
            this.tfid = tfid;
            return this;
        }
        public GetTrafficSteeringRuleResult build() {
            final var _resultValue = new GetTrafficSteeringRuleResult();
            _resultValue.action = action;
            _resultValue.categories = categories;
            _resultValue.destinations = destinations;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.services = services;
            _resultValue.sourceUsers = sourceUsers;
            _resultValue.sources = sources;
            _resultValue.tfid = tfid;
            return _resultValue;
        }
    }
}
