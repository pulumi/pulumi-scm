// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetDecryptionProfileListDataSslNoProxy {
    /**
     * @return The BlockExpiredCertificate param. Default: `false`.
     * 
     */
    private Boolean blockExpiredCertificate;
    /**
     * @return The BlockUntrustedIssuer param. Default: `false`.
     * 
     */
    private Boolean blockUntrustedIssuer;

    private GetDecryptionProfileListDataSslNoProxy() {}
    /**
     * @return The BlockExpiredCertificate param. Default: `false`.
     * 
     */
    public Boolean blockExpiredCertificate() {
        return this.blockExpiredCertificate;
    }
    /**
     * @return The BlockUntrustedIssuer param. Default: `false`.
     * 
     */
    public Boolean blockUntrustedIssuer() {
        return this.blockUntrustedIssuer;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDecryptionProfileListDataSslNoProxy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean blockExpiredCertificate;
        private Boolean blockUntrustedIssuer;
        public Builder() {}
        public Builder(GetDecryptionProfileListDataSslNoProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockExpiredCertificate = defaults.blockExpiredCertificate;
    	      this.blockUntrustedIssuer = defaults.blockUntrustedIssuer;
        }

        @CustomType.Setter
        public Builder blockExpiredCertificate(Boolean blockExpiredCertificate) {
            if (blockExpiredCertificate == null) {
              throw new MissingRequiredPropertyException("GetDecryptionProfileListDataSslNoProxy", "blockExpiredCertificate");
            }
            this.blockExpiredCertificate = blockExpiredCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder blockUntrustedIssuer(Boolean blockUntrustedIssuer) {
            if (blockUntrustedIssuer == null) {
              throw new MissingRequiredPropertyException("GetDecryptionProfileListDataSslNoProxy", "blockUntrustedIssuer");
            }
            this.blockUntrustedIssuer = blockUntrustedIssuer;
            return this;
        }
        public GetDecryptionProfileListDataSslNoProxy build() {
            final var _resultValue = new GetDecryptionProfileListDataSslNoProxy();
            _resultValue.blockExpiredCertificate = blockExpiredCertificate;
            _resultValue.blockUntrustedIssuer = blockUntrustedIssuer;
            return _resultValue;
        }
    }
}
