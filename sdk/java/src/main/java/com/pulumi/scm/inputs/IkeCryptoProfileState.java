// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.IkeCryptoProfileLifetimeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IkeCryptoProfileState extends com.pulumi.resources.ResourceArgs {

    public static final IkeCryptoProfileState Empty = new IkeCryptoProfileState();

    /**
     * IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
     * 
     */
    @Import(name="authenticationMultiple")
    private @Nullable Output<Integer> authenticationMultiple;

    /**
     * @return IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
     * 
     */
    public Optional<Output<Integer>> authenticationMultiple() {
        return Optional.ofNullable(this.authenticationMultiple);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`.
     * 
     */
    @Import(name="dhGroups")
    private @Nullable Output<List<String>> dhGroups;

    /**
     * @return The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`.
     * 
     */
    public Optional<Output<List<String>>> dhGroups() {
        return Optional.ofNullable(this.dhGroups);
    }

    /**
     * Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;des&#34;`, `&#34;3des&#34;`, `&#34;aes-128-cbc&#34;`, `&#34;aes-192-cbc&#34;`, `&#34;aes-256-cbc&#34;`, `&#34;aes-128-gcm&#34;`, `&#34;aes-256-gcm&#34;`.
     * 
     */
    @Import(name="encryptions")
    private @Nullable Output<List<String>> encryptions;

    /**
     * @return Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;des&#34;`, `&#34;3des&#34;`, `&#34;aes-128-cbc&#34;`, `&#34;aes-192-cbc&#34;`, `&#34;aes-256-cbc&#34;`, `&#34;aes-128-gcm&#34;`, `&#34;aes-256-gcm&#34;`.
     * 
     */
    public Optional<Output<List<String>>> encryptions() {
        return Optional.ofNullable(this.encryptions);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;md5&#34;`, `&#34;sha1&#34;`, `&#34;sha256&#34;`, `&#34;sha384&#34;`, `&#34;sha512&#34;`.
     * 
     */
    @Import(name="hashes")
    private @Nullable Output<List<String>> hashes;

    /**
     * @return The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;md5&#34;`, `&#34;sha1&#34;`, `&#34;sha256&#34;`, `&#34;sha384&#34;`, `&#34;sha512&#34;`.
     * 
     */
    public Optional<Output<List<String>>> hashes() {
        return Optional.ofNullable(this.hashes);
    }

    /**
     * The Lifetime param.
     * 
     */
    @Import(name="lifetime")
    private @Nullable Output<IkeCryptoProfileLifetimeArgs> lifetime;

    /**
     * @return The Lifetime param.
     * 
     */
    public Optional<Output<IkeCryptoProfileLifetimeArgs>> lifetime() {
        return Optional.ofNullable(this.lifetime);
    }

    /**
     * Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    @Import(name="tfid")
    private @Nullable Output<String> tfid;

    public Optional<Output<String>> tfid() {
        return Optional.ofNullable(this.tfid);
    }

    private IkeCryptoProfileState() {}

    private IkeCryptoProfileState(IkeCryptoProfileState $) {
        this.authenticationMultiple = $.authenticationMultiple;
        this.device = $.device;
        this.dhGroups = $.dhGroups;
        this.encryptions = $.encryptions;
        this.folder = $.folder;
        this.hashes = $.hashes;
        this.lifetime = $.lifetime;
        this.name = $.name;
        this.snippet = $.snippet;
        this.tfid = $.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IkeCryptoProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IkeCryptoProfileState $;

        public Builder() {
            $ = new IkeCryptoProfileState();
        }

        public Builder(IkeCryptoProfileState defaults) {
            $ = new IkeCryptoProfileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationMultiple IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMultiple(@Nullable Output<Integer> authenticationMultiple) {
            $.authenticationMultiple = authenticationMultiple;
            return this;
        }

        /**
         * @param authenticationMultiple IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMultiple(Integer authenticationMultiple) {
            return authenticationMultiple(Output.of(authenticationMultiple));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param dhGroups The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dhGroups(@Nullable Output<List<String>> dhGroups) {
            $.dhGroups = dhGroups;
            return this;
        }

        /**
         * @param dhGroups The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dhGroups(List<String> dhGroups) {
            return dhGroups(Output.of(dhGroups));
        }

        /**
         * @param dhGroups The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder dhGroups(String... dhGroups) {
            return dhGroups(List.of(dhGroups));
        }

        /**
         * @param encryptions Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;des&#34;`, `&#34;3des&#34;`, `&#34;aes-128-cbc&#34;`, `&#34;aes-192-cbc&#34;`, `&#34;aes-256-cbc&#34;`, `&#34;aes-128-gcm&#34;`, `&#34;aes-256-gcm&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder encryptions(@Nullable Output<List<String>> encryptions) {
            $.encryptions = encryptions;
            return this;
        }

        /**
         * @param encryptions Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;des&#34;`, `&#34;3des&#34;`, `&#34;aes-128-cbc&#34;`, `&#34;aes-192-cbc&#34;`, `&#34;aes-256-cbc&#34;`, `&#34;aes-128-gcm&#34;`, `&#34;aes-256-gcm&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder encryptions(List<String> encryptions) {
            return encryptions(Output.of(encryptions));
        }

        /**
         * @param encryptions Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;des&#34;`, `&#34;3des&#34;`, `&#34;aes-128-cbc&#34;`, `&#34;aes-192-cbc&#34;`, `&#34;aes-256-cbc&#34;`, `&#34;aes-128-gcm&#34;`, `&#34;aes-256-gcm&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder encryptions(String... encryptions) {
            return encryptions(List.of(encryptions));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param hashes The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;md5&#34;`, `&#34;sha1&#34;`, `&#34;sha256&#34;`, `&#34;sha384&#34;`, `&#34;sha512&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder hashes(@Nullable Output<List<String>> hashes) {
            $.hashes = hashes;
            return this;
        }

        /**
         * @param hashes The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;md5&#34;`, `&#34;sha1&#34;`, `&#34;sha256&#34;`, `&#34;sha384&#34;`, `&#34;sha512&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder hashes(List<String> hashes) {
            return hashes(Output.of(hashes));
        }

        /**
         * @param hashes The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `&#34;md5&#34;`, `&#34;sha1&#34;`, `&#34;sha256&#34;`, `&#34;sha384&#34;`, `&#34;sha512&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder hashes(String... hashes) {
            return hashes(List.of(hashes));
        }

        /**
         * @param lifetime The Lifetime param.
         * 
         * @return builder
         * 
         */
        public Builder lifetime(@Nullable Output<IkeCryptoProfileLifetimeArgs> lifetime) {
            $.lifetime = lifetime;
            return this;
        }

        /**
         * @param lifetime The Lifetime param.
         * 
         * @return builder
         * 
         */
        public Builder lifetime(IkeCryptoProfileLifetimeArgs lifetime) {
            return lifetime(Output.of(lifetime));
        }

        /**
         * @param name Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        public Builder tfid(@Nullable Output<String> tfid) {
            $.tfid = tfid;
            return this;
        }

        public Builder tfid(String tfid) {
            return tfid(Output.of(tfid));
        }

        public IkeCryptoProfileState build() {
            return $;
        }
    }

}
