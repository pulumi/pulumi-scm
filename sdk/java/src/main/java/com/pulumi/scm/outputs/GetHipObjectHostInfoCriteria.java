// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectHostInfoCriteriaClientVersion;
import com.pulumi.scm.outputs.GetHipObjectHostInfoCriteriaDomain;
import com.pulumi.scm.outputs.GetHipObjectHostInfoCriteriaHostId;
import com.pulumi.scm.outputs.GetHipObjectHostInfoCriteriaHostName;
import com.pulumi.scm.outputs.GetHipObjectHostInfoCriteriaOs;
import com.pulumi.scm.outputs.GetHipObjectHostInfoCriteriaSerialNumber;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetHipObjectHostInfoCriteria {
    /**
     * @return The ClientVersion param.
     * 
     */
    private GetHipObjectHostInfoCriteriaClientVersion clientVersion;
    /**
     * @return The Domain param.
     * 
     */
    private GetHipObjectHostInfoCriteriaDomain domain;
    /**
     * @return The HostId param.
     * 
     */
    private GetHipObjectHostInfoCriteriaHostId hostId;
    /**
     * @return The HostName param.
     * 
     */
    private GetHipObjectHostInfoCriteriaHostName hostName;
    /**
     * @return If device is managed.
     * 
     */
    private Boolean managed;
    /**
     * @return The Os param.
     * 
     */
    private GetHipObjectHostInfoCriteriaOs os;
    /**
     * @return The SerialNumber param.
     * 
     */
    private GetHipObjectHostInfoCriteriaSerialNumber serialNumber;

    private GetHipObjectHostInfoCriteria() {}
    /**
     * @return The ClientVersion param.
     * 
     */
    public GetHipObjectHostInfoCriteriaClientVersion clientVersion() {
        return this.clientVersion;
    }
    /**
     * @return The Domain param.
     * 
     */
    public GetHipObjectHostInfoCriteriaDomain domain() {
        return this.domain;
    }
    /**
     * @return The HostId param.
     * 
     */
    public GetHipObjectHostInfoCriteriaHostId hostId() {
        return this.hostId;
    }
    /**
     * @return The HostName param.
     * 
     */
    public GetHipObjectHostInfoCriteriaHostName hostName() {
        return this.hostName;
    }
    /**
     * @return If device is managed.
     * 
     */
    public Boolean managed() {
        return this.managed;
    }
    /**
     * @return The Os param.
     * 
     */
    public GetHipObjectHostInfoCriteriaOs os() {
        return this.os;
    }
    /**
     * @return The SerialNumber param.
     * 
     */
    public GetHipObjectHostInfoCriteriaSerialNumber serialNumber() {
        return this.serialNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectHostInfoCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetHipObjectHostInfoCriteriaClientVersion clientVersion;
        private GetHipObjectHostInfoCriteriaDomain domain;
        private GetHipObjectHostInfoCriteriaHostId hostId;
        private GetHipObjectHostInfoCriteriaHostName hostName;
        private Boolean managed;
        private GetHipObjectHostInfoCriteriaOs os;
        private GetHipObjectHostInfoCriteriaSerialNumber serialNumber;
        public Builder() {}
        public Builder(GetHipObjectHostInfoCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientVersion = defaults.clientVersion;
    	      this.domain = defaults.domain;
    	      this.hostId = defaults.hostId;
    	      this.hostName = defaults.hostName;
    	      this.managed = defaults.managed;
    	      this.os = defaults.os;
    	      this.serialNumber = defaults.serialNumber;
        }

        @CustomType.Setter
        public Builder clientVersion(GetHipObjectHostInfoCriteriaClientVersion clientVersion) {
            if (clientVersion == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "clientVersion");
            }
            this.clientVersion = clientVersion;
            return this;
        }
        @CustomType.Setter
        public Builder domain(GetHipObjectHostInfoCriteriaDomain domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(GetHipObjectHostInfoCriteriaHostId hostId) {
            if (hostId == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "hostId");
            }
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(GetHipObjectHostInfoCriteriaHostName hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder managed(Boolean managed) {
            if (managed == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "managed");
            }
            this.managed = managed;
            return this;
        }
        @CustomType.Setter
        public Builder os(GetHipObjectHostInfoCriteriaOs os) {
            if (os == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "os");
            }
            this.os = os;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(GetHipObjectHostInfoCriteriaSerialNumber serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetHipObjectHostInfoCriteria", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        public GetHipObjectHostInfoCriteria build() {
            final var _resultValue = new GetHipObjectHostInfoCriteria();
            _resultValue.clientVersion = clientVersion;
            _resultValue.domain = domain;
            _resultValue.hostId = hostId;
            _resultValue.hostName = hostName;
            _resultValue.managed = managed;
            _resultValue.os = os;
            _resultValue.serialNumber = serialNumber;
            return _resultValue;
        }
    }
}
