// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.AntiSpywareSignatureDefaultActionArgs;
import com.pulumi.scm.inputs.AntiSpywareSignatureSignatureArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AntiSpywareSignatureState extends com.pulumi.resources.ResourceArgs {

    public static final AntiSpywareSignatureState Empty = new AntiSpywareSignatureState();

    /**
     * The Bugtraqs param.
     * 
     */
    @Import(name="bugtraqs")
    private @Nullable Output<List<String>> bugtraqs;

    /**
     * @return The Bugtraqs param.
     * 
     */
    public Optional<Output<List<String>>> bugtraqs() {
        return Optional.ofNullable(this.bugtraqs);
    }

    /**
     * The Comment param. String length must not exceed 256 characters.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return The Comment param. String length must not exceed 256 characters.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The Cves param.
     * 
     */
    @Import(name="cves")
    private @Nullable Output<List<String>> cves;

    /**
     * @return The Cves param.
     * 
     */
    public Optional<Output<List<String>>> cves() {
        return Optional.ofNullable(this.cves);
    }

    /**
     * The DefaultAction param.
     * 
     */
    @Import(name="defaultAction")
    private @Nullable Output<AntiSpywareSignatureDefaultActionArgs> defaultAction;

    /**
     * @return The DefaultAction param.
     * 
     */
    public Optional<Output<AntiSpywareSignatureDefaultActionArgs>> defaultAction() {
        return Optional.ofNullable(this.defaultAction);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The Direction param. String must be one of these: `&#34;client2server&#34;`, `&#34;server2client&#34;`, `&#34;both&#34;`.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The Direction param. String must be one of these: `&#34;client2server&#34;`, `&#34;server2client&#34;`, `&#34;both&#34;`.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The References param.
     * 
     */
    @Import(name="references")
    private @Nullable Output<List<String>> references;

    /**
     * @return The References param.
     * 
     */
    public Optional<Output<List<String>>> references() {
        return Optional.ofNullable(this.references);
    }

    /**
     * The Severity param. String must be one of these: `&#34;critical&#34;`, `&#34;low&#34;`, `&#34;high&#34;`, `&#34;medium&#34;`, `&#34;informational&#34;`.
     * 
     */
    @Import(name="severity")
    private @Nullable Output<String> severity;

    /**
     * @return The Severity param. String must be one of these: `&#34;critical&#34;`, `&#34;low&#34;`, `&#34;high&#34;`, `&#34;medium&#34;`, `&#34;informational&#34;`.
     * 
     */
    public Optional<Output<String>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * The Signature param.
     * 
     */
    @Import(name="signature")
    private @Nullable Output<AntiSpywareSignatureSignatureArgs> signature;

    /**
     * @return The Signature param.
     * 
     */
    public Optional<Output<AntiSpywareSignatureSignatureArgs>> signature() {
        return Optional.ofNullable(this.signature);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    @Import(name="tfid")
    private @Nullable Output<String> tfid;

    public Optional<Output<String>> tfid() {
        return Optional.ofNullable(this.tfid);
    }

    /**
     * threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
     * 
     */
    @Import(name="threatId")
    private @Nullable Output<Integer> threatId;

    /**
     * @return threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
     * 
     */
    public Optional<Output<Integer>> threatId() {
        return Optional.ofNullable(this.threatId);
    }

    /**
     * The Threatname param. String length must not exceed 1024 characters.
     * 
     */
    @Import(name="threatname")
    private @Nullable Output<String> threatname;

    /**
     * @return The Threatname param. String length must not exceed 1024 characters.
     * 
     */
    public Optional<Output<String>> threatname() {
        return Optional.ofNullable(this.threatname);
    }

    /**
     * The Vendors param.
     * 
     */
    @Import(name="vendors")
    private @Nullable Output<List<String>> vendors;

    /**
     * @return The Vendors param.
     * 
     */
    public Optional<Output<List<String>>> vendors() {
        return Optional.ofNullable(this.vendors);
    }

    private AntiSpywareSignatureState() {}

    private AntiSpywareSignatureState(AntiSpywareSignatureState $) {
        this.bugtraqs = $.bugtraqs;
        this.comment = $.comment;
        this.cves = $.cves;
        this.defaultAction = $.defaultAction;
        this.device = $.device;
        this.direction = $.direction;
        this.folder = $.folder;
        this.references = $.references;
        this.severity = $.severity;
        this.signature = $.signature;
        this.snippet = $.snippet;
        this.tfid = $.tfid;
        this.threatId = $.threatId;
        this.threatname = $.threatname;
        this.vendors = $.vendors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AntiSpywareSignatureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AntiSpywareSignatureState $;

        public Builder() {
            $ = new AntiSpywareSignatureState();
        }

        public Builder(AntiSpywareSignatureState defaults) {
            $ = new AntiSpywareSignatureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bugtraqs The Bugtraqs param.
         * 
         * @return builder
         * 
         */
        public Builder bugtraqs(@Nullable Output<List<String>> bugtraqs) {
            $.bugtraqs = bugtraqs;
            return this;
        }

        /**
         * @param bugtraqs The Bugtraqs param.
         * 
         * @return builder
         * 
         */
        public Builder bugtraqs(List<String> bugtraqs) {
            return bugtraqs(Output.of(bugtraqs));
        }

        /**
         * @param bugtraqs The Bugtraqs param.
         * 
         * @return builder
         * 
         */
        public Builder bugtraqs(String... bugtraqs) {
            return bugtraqs(List.of(bugtraqs));
        }

        /**
         * @param comment The Comment param. String length must not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment The Comment param. String length must not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param cves The Cves param.
         * 
         * @return builder
         * 
         */
        public Builder cves(@Nullable Output<List<String>> cves) {
            $.cves = cves;
            return this;
        }

        /**
         * @param cves The Cves param.
         * 
         * @return builder
         * 
         */
        public Builder cves(List<String> cves) {
            return cves(Output.of(cves));
        }

        /**
         * @param cves The Cves param.
         * 
         * @return builder
         * 
         */
        public Builder cves(String... cves) {
            return cves(List.of(cves));
        }

        /**
         * @param defaultAction The DefaultAction param.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(@Nullable Output<AntiSpywareSignatureDefaultActionArgs> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction The DefaultAction param.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(AntiSpywareSignatureDefaultActionArgs defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param direction The Direction param. String must be one of these: `&#34;client2server&#34;`, `&#34;server2client&#34;`, `&#34;both&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The Direction param. String must be one of these: `&#34;client2server&#34;`, `&#34;server2client&#34;`, `&#34;both&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param references The References param.
         * 
         * @return builder
         * 
         */
        public Builder references(@Nullable Output<List<String>> references) {
            $.references = references;
            return this;
        }

        /**
         * @param references The References param.
         * 
         * @return builder
         * 
         */
        public Builder references(List<String> references) {
            return references(Output.of(references));
        }

        /**
         * @param references The References param.
         * 
         * @return builder
         * 
         */
        public Builder references(String... references) {
            return references(List.of(references));
        }

        /**
         * @param severity The Severity param. String must be one of these: `&#34;critical&#34;`, `&#34;low&#34;`, `&#34;high&#34;`, `&#34;medium&#34;`, `&#34;informational&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<String> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity The Severity param. String must be one of these: `&#34;critical&#34;`, `&#34;low&#34;`, `&#34;high&#34;`, `&#34;medium&#34;`, `&#34;informational&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param signature The Signature param.
         * 
         * @return builder
         * 
         */
        public Builder signature(@Nullable Output<AntiSpywareSignatureSignatureArgs> signature) {
            $.signature = signature;
            return this;
        }

        /**
         * @param signature The Signature param.
         * 
         * @return builder
         * 
         */
        public Builder signature(AntiSpywareSignatureSignatureArgs signature) {
            return signature(Output.of(signature));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        public Builder tfid(@Nullable Output<String> tfid) {
            $.tfid = tfid;
            return this;
        }

        public Builder tfid(String tfid) {
            return tfid(Output.of(tfid));
        }

        /**
         * @param threatId threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
         * 
         * @return builder
         * 
         */
        public Builder threatId(@Nullable Output<Integer> threatId) {
            $.threatId = threatId;
            return this;
        }

        /**
         * @param threatId threat id range \n\n and \n\n. Value must be between 15000 and 70000000.
         * 
         * @return builder
         * 
         */
        public Builder threatId(Integer threatId) {
            return threatId(Output.of(threatId));
        }

        /**
         * @param threatname The Threatname param. String length must not exceed 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder threatname(@Nullable Output<String> threatname) {
            $.threatname = threatname;
            return this;
        }

        /**
         * @param threatname The Threatname param. String length must not exceed 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder threatname(String threatname) {
            return threatname(Output.of(threatname));
        }

        /**
         * @param vendors The Vendors param.
         * 
         * @return builder
         * 
         */
        public Builder vendors(@Nullable Output<List<String>> vendors) {
            $.vendors = vendors;
            return this;
        }

        /**
         * @param vendors The Vendors param.
         * 
         * @return builder
         * 
         */
        public Builder vendors(List<String> vendors) {
            return vendors(Output.of(vendors));
        }

        /**
         * @param vendors The Vendors param.
         * 
         * @return builder
         * 
         */
        public Builder vendors(String... vendors) {
            return vendors(List.of(vendors));
        }

        public AntiSpywareSignatureState build() {
            return $;
        }
    }

}
