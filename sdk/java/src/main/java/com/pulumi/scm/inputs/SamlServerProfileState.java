// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SamlServerProfileState extends com.pulumi.resources.ResourceArgs {

    public static final SamlServerProfileState Empty = new SamlServerProfileState();

    /**
     * The Certificate param. String length must not exceed 63 characters.
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    /**
     * @return The Certificate param. String length must not exceed 63 characters.
     * 
     */
    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The EntityId param. String length must be between 1 and 1024 characters.
     * 
     */
    @Import(name="entityId")
    private @Nullable Output<String> entityId;

    /**
     * @return The EntityId param. String length must be between 1 and 1024 characters.
     * 
     */
    public Optional<Output<String>> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The MaxClockSkew param. Value must be between 1 and 900.
     * 
     */
    @Import(name="maxClockSkew")
    private @Nullable Output<Integer> maxClockSkew;

    /**
     * @return The MaxClockSkew param. Value must be between 1 and 900.
     * 
     */
    public Optional<Output<Integer>> maxClockSkew() {
        return Optional.ofNullable(this.maxClockSkew);
    }

    /**
     * The SloBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
     * 
     */
    @Import(name="sloBindings")
    private @Nullable Output<String> sloBindings;

    /**
     * @return The SloBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
     * 
     */
    public Optional<Output<String>> sloBindings() {
        return Optional.ofNullable(this.sloBindings);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The SsoBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
     * 
     */
    @Import(name="ssoBindings")
    private @Nullable Output<String> ssoBindings;

    /**
     * @return The SsoBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
     * 
     */
    public Optional<Output<String>> ssoBindings() {
        return Optional.ofNullable(this.ssoBindings);
    }

    /**
     * The SsoUrl param. String length must be between 1 and 255 characters.
     * 
     */
    @Import(name="ssoUrl")
    private @Nullable Output<String> ssoUrl;

    /**
     * @return The SsoUrl param. String length must be between 1 and 255 characters.
     * 
     */
    public Optional<Output<String>> ssoUrl() {
        return Optional.ofNullable(this.ssoUrl);
    }

    @Import(name="tfid")
    private @Nullable Output<String> tfid;

    public Optional<Output<String>> tfid() {
        return Optional.ofNullable(this.tfid);
    }

    /**
     * The ValidateIdpCertificate param.
     * 
     */
    @Import(name="validateIdpCertificate")
    private @Nullable Output<Boolean> validateIdpCertificate;

    /**
     * @return The ValidateIdpCertificate param.
     * 
     */
    public Optional<Output<Boolean>> validateIdpCertificate() {
        return Optional.ofNullable(this.validateIdpCertificate);
    }

    /**
     * The WantAuthRequestsSigned param.
     * 
     */
    @Import(name="wantAuthRequestsSigned")
    private @Nullable Output<Boolean> wantAuthRequestsSigned;

    /**
     * @return The WantAuthRequestsSigned param.
     * 
     */
    public Optional<Output<Boolean>> wantAuthRequestsSigned() {
        return Optional.ofNullable(this.wantAuthRequestsSigned);
    }

    private SamlServerProfileState() {}

    private SamlServerProfileState(SamlServerProfileState $) {
        this.certificate = $.certificate;
        this.device = $.device;
        this.entityId = $.entityId;
        this.folder = $.folder;
        this.maxClockSkew = $.maxClockSkew;
        this.sloBindings = $.sloBindings;
        this.snippet = $.snippet;
        this.ssoBindings = $.ssoBindings;
        this.ssoUrl = $.ssoUrl;
        this.tfid = $.tfid;
        this.validateIdpCertificate = $.validateIdpCertificate;
        this.wantAuthRequestsSigned = $.wantAuthRequestsSigned;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SamlServerProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SamlServerProfileState $;

        public Builder() {
            $ = new SamlServerProfileState();
        }

        public Builder(SamlServerProfileState defaults) {
            $ = new SamlServerProfileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate The Certificate param. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate The Certificate param. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param entityId The EntityId param. String length must be between 1 and 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder entityId(@Nullable Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityId The EntityId param. String length must be between 1 and 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param maxClockSkew The MaxClockSkew param. Value must be between 1 and 900.
         * 
         * @return builder
         * 
         */
        public Builder maxClockSkew(@Nullable Output<Integer> maxClockSkew) {
            $.maxClockSkew = maxClockSkew;
            return this;
        }

        /**
         * @param maxClockSkew The MaxClockSkew param. Value must be between 1 and 900.
         * 
         * @return builder
         * 
         */
        public Builder maxClockSkew(Integer maxClockSkew) {
            return maxClockSkew(Output.of(maxClockSkew));
        }

        /**
         * @param sloBindings The SloBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder sloBindings(@Nullable Output<String> sloBindings) {
            $.sloBindings = sloBindings;
            return this;
        }

        /**
         * @param sloBindings The SloBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder sloBindings(String sloBindings) {
            return sloBindings(Output.of(sloBindings));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param ssoBindings The SsoBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder ssoBindings(@Nullable Output<String> ssoBindings) {
            $.ssoBindings = ssoBindings;
            return this;
        }

        /**
         * @param ssoBindings The SsoBindings param. String must be one of these: `&#34;post&#34;`, `&#34;redirect&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder ssoBindings(String ssoBindings) {
            return ssoBindings(Output.of(ssoBindings));
        }

        /**
         * @param ssoUrl The SsoUrl param. String length must be between 1 and 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder ssoUrl(@Nullable Output<String> ssoUrl) {
            $.ssoUrl = ssoUrl;
            return this;
        }

        /**
         * @param ssoUrl The SsoUrl param. String length must be between 1 and 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder ssoUrl(String ssoUrl) {
            return ssoUrl(Output.of(ssoUrl));
        }

        public Builder tfid(@Nullable Output<String> tfid) {
            $.tfid = tfid;
            return this;
        }

        public Builder tfid(String tfid) {
            return tfid(Output.of(tfid));
        }

        /**
         * @param validateIdpCertificate The ValidateIdpCertificate param.
         * 
         * @return builder
         * 
         */
        public Builder validateIdpCertificate(@Nullable Output<Boolean> validateIdpCertificate) {
            $.validateIdpCertificate = validateIdpCertificate;
            return this;
        }

        /**
         * @param validateIdpCertificate The ValidateIdpCertificate param.
         * 
         * @return builder
         * 
         */
        public Builder validateIdpCertificate(Boolean validateIdpCertificate) {
            return validateIdpCertificate(Output.of(validateIdpCertificate));
        }

        /**
         * @param wantAuthRequestsSigned The WantAuthRequestsSigned param.
         * 
         * @return builder
         * 
         */
        public Builder wantAuthRequestsSigned(@Nullable Output<Boolean> wantAuthRequestsSigned) {
            $.wantAuthRequestsSigned = wantAuthRequestsSigned;
            return this;
        }

        /**
         * @param wantAuthRequestsSigned The WantAuthRequestsSigned param.
         * 
         * @return builder
         * 
         */
        public Builder wantAuthRequestsSigned(Boolean wantAuthRequestsSigned) {
            return wantAuthRequestsSigned(Output.of(wantAuthRequestsSigned));
        }

        public SamlServerProfileState build() {
            return $;
        }
    }

}
