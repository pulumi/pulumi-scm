// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.NatRuleDestinationTranslationArgs;
import com.pulumi.scm.inputs.NatRuleDynamicDestinationTranslationArgs;
import com.pulumi.scm.inputs.NatRuleSourceTranslationArgs;
import com.pulumi.scm.inputs.NatRuleTargetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NatRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final NatRuleArgs Empty = new NatRuleArgs();

    /**
     * The ActiveActiveDeviceBinding param. String must be one of these: `&#34;primary&#34;`, `&#34;both&#34;`, `&#34;0&#34;`, `&#34;1&#34;`.
     * 
     */
    @Import(name="activeActiveDeviceBinding")
    private @Nullable Output<String> activeActiveDeviceBinding;

    /**
     * @return The ActiveActiveDeviceBinding param. String must be one of these: `&#34;primary&#34;`, `&#34;both&#34;`, `&#34;0&#34;`, `&#34;1&#34;`.
     * 
     */
    public Optional<Output<String>> activeActiveDeviceBinding() {
        return Optional.ofNullable(this.activeActiveDeviceBinding);
    }

    /**
     * The Description param.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Description param.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Static destination translation parameter.
     * 
     */
    @Import(name="destinationTranslation")
    private @Nullable Output<NatRuleDestinationTranslationArgs> destinationTranslation;

    /**
     * @return Static destination translation parameter.
     * 
     */
    public Optional<Output<NatRuleDestinationTranslationArgs>> destinationTranslation() {
        return Optional.ofNullable(this.destinationTranslation);
    }

    /**
     * The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
     * 
     */
    @Import(name="destinations", required=true)
    private Output<List<String>> destinations;

    /**
     * @return The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
     * 
     */
    public Output<List<String>> destinations() {
        return this.destinations;
    }

    /**
     * The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The Disabled param.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return The Disabled param.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Dynamic destination translation parameter.
     * 
     */
    @Import(name="dynamicDestinationTranslation")
    private @Nullable Output<NatRuleDynamicDestinationTranslationArgs> dynamicDestinationTranslation;

    /**
     * @return Dynamic destination translation parameter.
     * 
     */
    public Optional<Output<NatRuleDynamicDestinationTranslationArgs>> dynamicDestinationTranslation() {
        return Optional.ofNullable(this.dynamicDestinationTranslation);
    }

    /**
     * The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
     * 
     */
    @Import(name="froms", required=true)
    private Output<List<String>> froms;

    /**
     * @return The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
     * 
     */
    public Output<List<String>> froms() {
        return this.froms;
    }

    /**
     * The GroupTag param.
     * 
     */
    @Import(name="groupTag")
    private @Nullable Output<String> groupTag;

    /**
     * @return The GroupTag param.
     * 
     */
    public Optional<Output<String>> groupTag() {
        return Optional.ofNullable(this.groupTag);
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The NatType param. String must be one of these: `&#34;ipv4&#34;`, `&#34;nat64&#34;`, `&#34;nptv6&#34;`.
     * 
     */
    @Import(name="natType")
    private @Nullable Output<String> natType;

    /**
     * @return The NatType param. String must be one of these: `&#34;ipv4&#34;`, `&#34;nat64&#34;`, `&#34;nptv6&#34;`.
     * 
     */
    public Optional<Output<String>> natType() {
        return Optional.ofNullable(this.natType);
    }

    /**
     * The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
     * 
     */
    @Import(name="position")
    private @Nullable Output<String> position;

    /**
     * @return The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
     * 
     */
    public Optional<Output<String>> position() {
        return Optional.ofNullable(this.position);
    }

    /**
     * The Service param.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return The Service param.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    /**
     * The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The SourceTranslation param.
     * 
     */
    @Import(name="sourceTranslation")
    private @Nullable Output<NatRuleSourceTranslationArgs> sourceTranslation;

    /**
     * @return The SourceTranslation param.
     * 
     */
    public Optional<Output<NatRuleSourceTranslationArgs>> sourceTranslation() {
        return Optional.ofNullable(this.sourceTranslation);
    }

    /**
     * The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
     * 
     */
    @Import(name="sources", required=true)
    private Output<List<String>> sources;

    /**
     * @return The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
     * 
     */
    public Output<List<String>> sources() {
        return this.sources;
    }

    /**
     * The Tags param.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The Tags param.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The Target param.
     * 
     */
    @Import(name="target")
    private @Nullable Output<NatRuleTargetArgs> target;

    /**
     * @return The Target param.
     * 
     */
    public Optional<Output<NatRuleTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * The ToInterface param. String must be one of these: `&#34;any&#34;`.
     * 
     */
    @Import(name="toInterface")
    private @Nullable Output<String> toInterface;

    /**
     * @return The ToInterface param. String must be one of these: `&#34;any&#34;`.
     * 
     */
    public Optional<Output<String>> toInterface() {
        return Optional.ofNullable(this.toInterface);
    }

    /**
     * The destination security zone(s).
     * 
     */
    @Import(name="tos", required=true)
    private Output<List<String>> tos;

    /**
     * @return The destination security zone(s).
     * 
     */
    public Output<List<String>> tos() {
        return this.tos;
    }

    private NatRuleArgs() {}

    private NatRuleArgs(NatRuleArgs $) {
        this.activeActiveDeviceBinding = $.activeActiveDeviceBinding;
        this.description = $.description;
        this.destinationTranslation = $.destinationTranslation;
        this.destinations = $.destinations;
        this.device = $.device;
        this.disabled = $.disabled;
        this.dynamicDestinationTranslation = $.dynamicDestinationTranslation;
        this.folder = $.folder;
        this.froms = $.froms;
        this.groupTag = $.groupTag;
        this.name = $.name;
        this.natType = $.natType;
        this.position = $.position;
        this.service = $.service;
        this.snippet = $.snippet;
        this.sourceTranslation = $.sourceTranslation;
        this.sources = $.sources;
        this.tags = $.tags;
        this.target = $.target;
        this.toInterface = $.toInterface;
        this.tos = $.tos;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatRuleArgs $;

        public Builder() {
            $ = new NatRuleArgs();
        }

        public Builder(NatRuleArgs defaults) {
            $ = new NatRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeActiveDeviceBinding The ActiveActiveDeviceBinding param. String must be one of these: `&#34;primary&#34;`, `&#34;both&#34;`, `&#34;0&#34;`, `&#34;1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder activeActiveDeviceBinding(@Nullable Output<String> activeActiveDeviceBinding) {
            $.activeActiveDeviceBinding = activeActiveDeviceBinding;
            return this;
        }

        /**
         * @param activeActiveDeviceBinding The ActiveActiveDeviceBinding param. String must be one of these: `&#34;primary&#34;`, `&#34;both&#34;`, `&#34;0&#34;`, `&#34;1&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder activeActiveDeviceBinding(String activeActiveDeviceBinding) {
            return activeActiveDeviceBinding(Output.of(activeActiveDeviceBinding));
        }

        /**
         * @param description The Description param.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Description param.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationTranslation Static destination translation parameter.
         * 
         * @return builder
         * 
         */
        public Builder destinationTranslation(@Nullable Output<NatRuleDestinationTranslationArgs> destinationTranslation) {
            $.destinationTranslation = destinationTranslation;
            return this;
        }

        /**
         * @param destinationTranslation Static destination translation parameter.
         * 
         * @return builder
         * 
         */
        public Builder destinationTranslation(NatRuleDestinationTranslationArgs destinationTranslation) {
            return destinationTranslation(Output.of(destinationTranslation));
        }

        /**
         * @param destinations The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(Output<List<String>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations The destination address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param device The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param disabled The Disabled param.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled The Disabled param.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param dynamicDestinationTranslation Dynamic destination translation parameter.
         * 
         * @return builder
         * 
         */
        public Builder dynamicDestinationTranslation(@Nullable Output<NatRuleDynamicDestinationTranslationArgs> dynamicDestinationTranslation) {
            $.dynamicDestinationTranslation = dynamicDestinationTranslation;
            return this;
        }

        /**
         * @param dynamicDestinationTranslation Dynamic destination translation parameter.
         * 
         * @return builder
         * 
         */
        public Builder dynamicDestinationTranslation(NatRuleDynamicDestinationTranslationArgs dynamicDestinationTranslation) {
            return dynamicDestinationTranslation(Output.of(dynamicDestinationTranslation));
        }

        /**
         * @param folder The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param froms The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder froms(Output<List<String>> froms) {
            $.froms = froms;
            return this;
        }

        /**
         * @param froms The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder froms(List<String> froms) {
            return froms(Output.of(froms));
        }

        /**
         * @param froms The source security zone(s). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder froms(String... froms) {
            return froms(List.of(froms));
        }

        /**
         * @param groupTag The GroupTag param.
         * 
         * @return builder
         * 
         */
        public Builder groupTag(@Nullable Output<String> groupTag) {
            $.groupTag = groupTag;
            return this;
        }

        /**
         * @param groupTag The GroupTag param.
         * 
         * @return builder
         * 
         */
        public Builder groupTag(String groupTag) {
            return groupTag(Output.of(groupTag));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param natType The NatType param. String must be one of these: `&#34;ipv4&#34;`, `&#34;nat64&#34;`, `&#34;nptv6&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder natType(@Nullable Output<String> natType) {
            $.natType = natType;
            return this;
        }

        /**
         * @param natType The NatType param. String must be one of these: `&#34;ipv4&#34;`, `&#34;nat64&#34;`, `&#34;nptv6&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder natType(String natType) {
            return natType(Output.of(natType));
        }

        /**
         * @param position The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder position(@Nullable Output<String> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder position(String position) {
            return position(Output.of(position));
        }

        /**
         * @param service The Service param.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The Service param.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param snippet The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\d-_\. ]+$`.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param sourceTranslation The SourceTranslation param.
         * 
         * @return builder
         * 
         */
        public Builder sourceTranslation(@Nullable Output<NatRuleSourceTranslationArgs> sourceTranslation) {
            $.sourceTranslation = sourceTranslation;
            return this;
        }

        /**
         * @param sourceTranslation The SourceTranslation param.
         * 
         * @return builder
         * 
         */
        public Builder sourceTranslation(NatRuleSourceTranslationArgs sourceTranslation) {
            return sourceTranslation(Output.of(sourceTranslation));
        }

        /**
         * @param sources The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder sources(Output<List<String>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<String> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources The source address(es). Individual elements in this list are subject to additional validation. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param target The Target param.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<NatRuleTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target The Target param.
         * 
         * @return builder
         * 
         */
        public Builder target(NatRuleTargetArgs target) {
            return target(Output.of(target));
        }

        /**
         * @param toInterface The ToInterface param. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder toInterface(@Nullable Output<String> toInterface) {
            $.toInterface = toInterface;
            return this;
        }

        /**
         * @param toInterface The ToInterface param. String must be one of these: `&#34;any&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder toInterface(String toInterface) {
            return toInterface(Output.of(toInterface));
        }

        /**
         * @param tos The destination security zone(s).
         * 
         * @return builder
         * 
         */
        public Builder tos(Output<List<String>> tos) {
            $.tos = tos;
            return this;
        }

        /**
         * @param tos The destination security zone(s).
         * 
         * @return builder
         * 
         */
        public Builder tos(List<String> tos) {
            return tos(Output.of(tos));
        }

        /**
         * @param tos The destination security zone(s).
         * 
         * @return builder
         * 
         */
        public Builder tos(String... tos) {
            return tos(List.of(tos));
        }

        public NatRuleArgs build() {
            if ($.destinations == null) {
                throw new MissingRequiredPropertyException("NatRuleArgs", "destinations");
            }
            if ($.froms == null) {
                throw new MissingRequiredPropertyException("NatRuleArgs", "froms");
            }
            if ($.service == null) {
                throw new MissingRequiredPropertyException("NatRuleArgs", "service");
            }
            if ($.sources == null) {
                throw new MissingRequiredPropertyException("NatRuleArgs", "sources");
            }
            if ($.tos == null) {
                throw new MissingRequiredPropertyException("NatRuleArgs", "tos");
            }
            return $;
        }
    }

}
