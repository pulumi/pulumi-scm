// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceConnectionGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceConnectionGroupArgs Empty = new ServiceConnectionGroupArgs();

    /**
     * The DisableSnat param.
     * 
     */
    @Import(name="disableSnat")
    private @Nullable Output<Boolean> disableSnat;

    /**
     * @return The DisableSnat param.
     * 
     */
    public Optional<Output<Boolean>> disableSnat() {
        return Optional.ofNullable(this.disableSnat);
    }

    /**
     * The Folder param. String can either be a specific string(`&#34;Service Connections&#34;`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `&#34;Service Connections&#34;`.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param. String can either be a specific string(`&#34;Service Connections&#34;`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `&#34;Service Connections&#34;`.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The PbfOnly param.
     * 
     */
    @Import(name="pbfOnly")
    private @Nullable Output<Boolean> pbfOnly;

    /**
     * @return The PbfOnly param.
     * 
     */
    public Optional<Output<Boolean>> pbfOnly() {
        return Optional.ofNullable(this.pbfOnly);
    }

    /**
     * The Targets param.
     * 
     */
    @Import(name="targets", required=true)
    private Output<List<String>> targets;

    /**
     * @return The Targets param.
     * 
     */
    public Output<List<String>> targets() {
        return this.targets;
    }

    private ServiceConnectionGroupArgs() {}

    private ServiceConnectionGroupArgs(ServiceConnectionGroupArgs $) {
        this.disableSnat = $.disableSnat;
        this.folder = $.folder;
        this.name = $.name;
        this.pbfOnly = $.pbfOnly;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceConnectionGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceConnectionGroupArgs $;

        public Builder() {
            $ = new ServiceConnectionGroupArgs();
        }

        public Builder(ServiceConnectionGroupArgs defaults) {
            $ = new ServiceConnectionGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableSnat The DisableSnat param.
         * 
         * @return builder
         * 
         */
        public Builder disableSnat(@Nullable Output<Boolean> disableSnat) {
            $.disableSnat = disableSnat;
            return this;
        }

        /**
         * @param disableSnat The DisableSnat param.
         * 
         * @return builder
         * 
         */
        public Builder disableSnat(Boolean disableSnat) {
            return disableSnat(Output.of(disableSnat));
        }

        /**
         * @param folder The Folder param. String can either be a specific string(`&#34;Service Connections&#34;`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `&#34;Service Connections&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param. String can either be a specific string(`&#34;Service Connections&#34;`) or match this regex: `^[0-9a-zA-Z._\s-]{1,}$`. Default: `&#34;Service Connections&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pbfOnly The PbfOnly param.
         * 
         * @return builder
         * 
         */
        public Builder pbfOnly(@Nullable Output<Boolean> pbfOnly) {
            $.pbfOnly = pbfOnly;
            return this;
        }

        /**
         * @param pbfOnly The PbfOnly param.
         * 
         * @return builder
         * 
         */
        public Builder pbfOnly(Boolean pbfOnly) {
            return pbfOnly(Output.of(pbfOnly));
        }

        /**
         * @param targets The Targets param.
         * 
         * @return builder
         * 
         */
        public Builder targets(Output<List<String>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets The Targets param.
         * 
         * @return builder
         * 
         */
        public Builder targets(List<String> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets The Targets param.
         * 
         * @return builder
         * 
         */
        public Builder targets(String... targets) {
            return targets(List.of(targets));
        }

        public ServiceConnectionGroupArgs build() {
            if ($.targets == null) {
                throw new MissingRequiredPropertyException("ServiceConnectionGroupArgs", "targets");
            }
            return $;
        }
    }

}
