// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMfaServerMfaVendorTypeRsaSecuridAccessV1 {
    /**
     * @return The RsaAccessid param.
     * 
     */
    private String rsaAccessid;
    /**
     * @return The RsaAccesskey param.
     * 
     */
    private String rsaAccesskey;
    /**
     * @return The RsaApiHost param.
     * 
     */
    private String rsaApiHost;
    /**
     * @return The RsaAssurancepolicyid param.
     * 
     */
    private String rsaAssurancepolicyid;
    /**
     * @return The RsaBaseuri param.
     * 
     */
    private String rsaBaseuri;
    /**
     * @return The RsaTimeout param.
     * 
     */
    private String rsaTimeout;

    private GetMfaServerMfaVendorTypeRsaSecuridAccessV1() {}
    /**
     * @return The RsaAccessid param.
     * 
     */
    public String rsaAccessid() {
        return this.rsaAccessid;
    }
    /**
     * @return The RsaAccesskey param.
     * 
     */
    public String rsaAccesskey() {
        return this.rsaAccesskey;
    }
    /**
     * @return The RsaApiHost param.
     * 
     */
    public String rsaApiHost() {
        return this.rsaApiHost;
    }
    /**
     * @return The RsaAssurancepolicyid param.
     * 
     */
    public String rsaAssurancepolicyid() {
        return this.rsaAssurancepolicyid;
    }
    /**
     * @return The RsaBaseuri param.
     * 
     */
    public String rsaBaseuri() {
        return this.rsaBaseuri;
    }
    /**
     * @return The RsaTimeout param.
     * 
     */
    public String rsaTimeout() {
        return this.rsaTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMfaServerMfaVendorTypeRsaSecuridAccessV1 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String rsaAccessid;
        private String rsaAccesskey;
        private String rsaApiHost;
        private String rsaAssurancepolicyid;
        private String rsaBaseuri;
        private String rsaTimeout;
        public Builder() {}
        public Builder(GetMfaServerMfaVendorTypeRsaSecuridAccessV1 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rsaAccessid = defaults.rsaAccessid;
    	      this.rsaAccesskey = defaults.rsaAccesskey;
    	      this.rsaApiHost = defaults.rsaApiHost;
    	      this.rsaAssurancepolicyid = defaults.rsaAssurancepolicyid;
    	      this.rsaBaseuri = defaults.rsaBaseuri;
    	      this.rsaTimeout = defaults.rsaTimeout;
        }

        @CustomType.Setter
        public Builder rsaAccessid(String rsaAccessid) {
            if (rsaAccessid == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeRsaSecuridAccessV1", "rsaAccessid");
            }
            this.rsaAccessid = rsaAccessid;
            return this;
        }
        @CustomType.Setter
        public Builder rsaAccesskey(String rsaAccesskey) {
            if (rsaAccesskey == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeRsaSecuridAccessV1", "rsaAccesskey");
            }
            this.rsaAccesskey = rsaAccesskey;
            return this;
        }
        @CustomType.Setter
        public Builder rsaApiHost(String rsaApiHost) {
            if (rsaApiHost == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeRsaSecuridAccessV1", "rsaApiHost");
            }
            this.rsaApiHost = rsaApiHost;
            return this;
        }
        @CustomType.Setter
        public Builder rsaAssurancepolicyid(String rsaAssurancepolicyid) {
            if (rsaAssurancepolicyid == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeRsaSecuridAccessV1", "rsaAssurancepolicyid");
            }
            this.rsaAssurancepolicyid = rsaAssurancepolicyid;
            return this;
        }
        @CustomType.Setter
        public Builder rsaBaseuri(String rsaBaseuri) {
            if (rsaBaseuri == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeRsaSecuridAccessV1", "rsaBaseuri");
            }
            this.rsaBaseuri = rsaBaseuri;
            return this;
        }
        @CustomType.Setter
        public Builder rsaTimeout(String rsaTimeout) {
            if (rsaTimeout == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeRsaSecuridAccessV1", "rsaTimeout");
            }
            this.rsaTimeout = rsaTimeout;
            return this;
        }
        public GetMfaServerMfaVendorTypeRsaSecuridAccessV1 build() {
            final var _resultValue = new GetMfaServerMfaVendorTypeRsaSecuridAccessV1();
            _resultValue.rsaAccessid = rsaAccessid;
            _resultValue.rsaAccesskey = rsaAccesskey;
            _resultValue.rsaApiHost = rsaApiHost;
            _resultValue.rsaAssurancepolicyid = rsaAssurancepolicyid;
            _resultValue.rsaBaseuri = rsaBaseuri;
            _resultValue.rsaTimeout = rsaTimeout;
            return _resultValue;
        }
    }
}
