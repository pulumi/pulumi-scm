// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RemoteNetworkEcmpTunnelProtocolBgp {
    /**
     * @return The DoNotExportRoutes param.
     * 
     */
    private @Nullable Boolean doNotExportRoutes;
    /**
     * @return to setup bgp protocol, enable need to set as true.
     * 
     */
    private @Nullable Boolean enable;
    /**
     * @return The LocalIpAddress param.
     * 
     */
    private @Nullable String localIpAddress;
    /**
     * @return The OriginateDefaultRoute param.
     * 
     */
    private @Nullable Boolean originateDefaultRoute;
    /**
     * @return The PeerAs param.
     * 
     */
    private @Nullable String peerAs;
    /**
     * @return The PeerIpAddress param.
     * 
     */
    private @Nullable String peerIpAddress;
    /**
     * @return Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `&#34;exchange-v4-over-v4&#34;`, `&#34;exchange-v4-v6-over-v4&#34;`, `&#34;exchange-v4-over-v4-v6-over-v6&#34;`, `&#34;exchange-v6-over-v6&#34;`.
     * 
     */
    private @Nullable String peeringType;
    /**
     * @return The Secret param.
     * 
     */
    private @Nullable String secret;
    /**
     * @return The SummarizeMobileUserRoutes param.
     * 
     */
    private @Nullable Boolean summarizeMobileUserRoutes;

    private RemoteNetworkEcmpTunnelProtocolBgp() {}
    /**
     * @return The DoNotExportRoutes param.
     * 
     */
    public Optional<Boolean> doNotExportRoutes() {
        return Optional.ofNullable(this.doNotExportRoutes);
    }
    /**
     * @return to setup bgp protocol, enable need to set as true.
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return The LocalIpAddress param.
     * 
     */
    public Optional<String> localIpAddress() {
        return Optional.ofNullable(this.localIpAddress);
    }
    /**
     * @return The OriginateDefaultRoute param.
     * 
     */
    public Optional<Boolean> originateDefaultRoute() {
        return Optional.ofNullable(this.originateDefaultRoute);
    }
    /**
     * @return The PeerAs param.
     * 
     */
    public Optional<String> peerAs() {
        return Optional.ofNullable(this.peerAs);
    }
    /**
     * @return The PeerIpAddress param.
     * 
     */
    public Optional<String> peerIpAddress() {
        return Optional.ofNullable(this.peerIpAddress);
    }
    /**
     * @return Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `&#34;exchange-v4-over-v4&#34;`, `&#34;exchange-v4-v6-over-v4&#34;`, `&#34;exchange-v4-over-v4-v6-over-v6&#34;`, `&#34;exchange-v6-over-v6&#34;`.
     * 
     */
    public Optional<String> peeringType() {
        return Optional.ofNullable(this.peeringType);
    }
    /**
     * @return The Secret param.
     * 
     */
    public Optional<String> secret() {
        return Optional.ofNullable(this.secret);
    }
    /**
     * @return The SummarizeMobileUserRoutes param.
     * 
     */
    public Optional<Boolean> summarizeMobileUserRoutes() {
        return Optional.ofNullable(this.summarizeMobileUserRoutes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RemoteNetworkEcmpTunnelProtocolBgp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean doNotExportRoutes;
        private @Nullable Boolean enable;
        private @Nullable String localIpAddress;
        private @Nullable Boolean originateDefaultRoute;
        private @Nullable String peerAs;
        private @Nullable String peerIpAddress;
        private @Nullable String peeringType;
        private @Nullable String secret;
        private @Nullable Boolean summarizeMobileUserRoutes;
        public Builder() {}
        public Builder(RemoteNetworkEcmpTunnelProtocolBgp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doNotExportRoutes = defaults.doNotExportRoutes;
    	      this.enable = defaults.enable;
    	      this.localIpAddress = defaults.localIpAddress;
    	      this.originateDefaultRoute = defaults.originateDefaultRoute;
    	      this.peerAs = defaults.peerAs;
    	      this.peerIpAddress = defaults.peerIpAddress;
    	      this.peeringType = defaults.peeringType;
    	      this.secret = defaults.secret;
    	      this.summarizeMobileUserRoutes = defaults.summarizeMobileUserRoutes;
        }

        @CustomType.Setter
        public Builder doNotExportRoutes(@Nullable Boolean doNotExportRoutes) {

            this.doNotExportRoutes = doNotExportRoutes;
            return this;
        }
        @CustomType.Setter
        public Builder enable(@Nullable Boolean enable) {

            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder localIpAddress(@Nullable String localIpAddress) {

            this.localIpAddress = localIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder originateDefaultRoute(@Nullable Boolean originateDefaultRoute) {

            this.originateDefaultRoute = originateDefaultRoute;
            return this;
        }
        @CustomType.Setter
        public Builder peerAs(@Nullable String peerAs) {

            this.peerAs = peerAs;
            return this;
        }
        @CustomType.Setter
        public Builder peerIpAddress(@Nullable String peerIpAddress) {

            this.peerIpAddress = peerIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder peeringType(@Nullable String peeringType) {

            this.peeringType = peeringType;
            return this;
        }
        @CustomType.Setter
        public Builder secret(@Nullable String secret) {

            this.secret = secret;
            return this;
        }
        @CustomType.Setter
        public Builder summarizeMobileUserRoutes(@Nullable Boolean summarizeMobileUserRoutes) {

            this.summarizeMobileUserRoutes = summarizeMobileUserRoutes;
            return this;
        }
        public RemoteNetworkEcmpTunnelProtocolBgp build() {
            final var _resultValue = new RemoteNetworkEcmpTunnelProtocolBgp();
            _resultValue.doNotExportRoutes = doNotExportRoutes;
            _resultValue.enable = enable;
            _resultValue.localIpAddress = localIpAddress;
            _resultValue.originateDefaultRoute = originateDefaultRoute;
            _resultValue.peerAs = peerAs;
            _resultValue.peerIpAddress = peerIpAddress;
            _resultValue.peeringType = peeringType;
            _resultValue.secret = secret;
            _resultValue.summarizeMobileUserRoutes = summarizeMobileUserRoutes;
            return _resultValue;
        }
    }
}
