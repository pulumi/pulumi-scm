// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scm.outputs.IkeGatewayAuthenticationCertificateLocalCertificate;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IkeGatewayAuthenticationCertificate {
    /**
     * @return The AllowIdPayloadMismatch param.
     * 
     */
    private @Nullable Boolean allowIdPayloadMismatch;
    /**
     * @return The CertificateProfile param.
     * 
     */
    private @Nullable String certificateProfile;
    /**
     * @return The LocalCertificate param.
     * 
     */
    private @Nullable IkeGatewayAuthenticationCertificateLocalCertificate localCertificate;
    /**
     * @return The StrictValidationRevocation param.
     * 
     */
    private @Nullable Boolean strictValidationRevocation;
    /**
     * @return The UseManagementAsSource param.
     * 
     */
    private @Nullable Boolean useManagementAsSource;

    private IkeGatewayAuthenticationCertificate() {}
    /**
     * @return The AllowIdPayloadMismatch param.
     * 
     */
    public Optional<Boolean> allowIdPayloadMismatch() {
        return Optional.ofNullable(this.allowIdPayloadMismatch);
    }
    /**
     * @return The CertificateProfile param.
     * 
     */
    public Optional<String> certificateProfile() {
        return Optional.ofNullable(this.certificateProfile);
    }
    /**
     * @return The LocalCertificate param.
     * 
     */
    public Optional<IkeGatewayAuthenticationCertificateLocalCertificate> localCertificate() {
        return Optional.ofNullable(this.localCertificate);
    }
    /**
     * @return The StrictValidationRevocation param.
     * 
     */
    public Optional<Boolean> strictValidationRevocation() {
        return Optional.ofNullable(this.strictValidationRevocation);
    }
    /**
     * @return The UseManagementAsSource param.
     * 
     */
    public Optional<Boolean> useManagementAsSource() {
        return Optional.ofNullable(this.useManagementAsSource);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IkeGatewayAuthenticationCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowIdPayloadMismatch;
        private @Nullable String certificateProfile;
        private @Nullable IkeGatewayAuthenticationCertificateLocalCertificate localCertificate;
        private @Nullable Boolean strictValidationRevocation;
        private @Nullable Boolean useManagementAsSource;
        public Builder() {}
        public Builder(IkeGatewayAuthenticationCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowIdPayloadMismatch = defaults.allowIdPayloadMismatch;
    	      this.certificateProfile = defaults.certificateProfile;
    	      this.localCertificate = defaults.localCertificate;
    	      this.strictValidationRevocation = defaults.strictValidationRevocation;
    	      this.useManagementAsSource = defaults.useManagementAsSource;
        }

        @CustomType.Setter
        public Builder allowIdPayloadMismatch(@Nullable Boolean allowIdPayloadMismatch) {

            this.allowIdPayloadMismatch = allowIdPayloadMismatch;
            return this;
        }
        @CustomType.Setter
        public Builder certificateProfile(@Nullable String certificateProfile) {

            this.certificateProfile = certificateProfile;
            return this;
        }
        @CustomType.Setter
        public Builder localCertificate(@Nullable IkeGatewayAuthenticationCertificateLocalCertificate localCertificate) {

            this.localCertificate = localCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder strictValidationRevocation(@Nullable Boolean strictValidationRevocation) {

            this.strictValidationRevocation = strictValidationRevocation;
            return this;
        }
        @CustomType.Setter
        public Builder useManagementAsSource(@Nullable Boolean useManagementAsSource) {

            this.useManagementAsSource = useManagementAsSource;
            return this;
        }
        public IkeGatewayAuthenticationCertificate build() {
            final var _resultValue = new IkeGatewayAuthenticationCertificate();
            _resultValue.allowIdPayloadMismatch = allowIdPayloadMismatch;
            _resultValue.certificateProfile = certificateProfile;
            _resultValue.localCertificate = localCertificate;
            _resultValue.strictValidationRevocation = strictValidationRevocation;
            _resultValue.useManagementAsSource = useManagementAsSource;
            return _resultValue;
        }
    }
}
