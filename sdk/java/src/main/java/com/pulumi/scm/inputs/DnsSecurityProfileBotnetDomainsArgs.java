// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs;
import com.pulumi.scm.inputs.DnsSecurityProfileBotnetDomainsListArgs;
import com.pulumi.scm.inputs.DnsSecurityProfileBotnetDomainsSinkholeArgs;
import com.pulumi.scm.inputs.DnsSecurityProfileBotnetDomainsWhitelistArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DnsSecurityProfileBotnetDomainsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsSecurityProfileBotnetDomainsArgs Empty = new DnsSecurityProfileBotnetDomainsArgs();

    /**
     * The DnsSecurityCategories param.
     * 
     */
    @Import(name="dnsSecurityCategories")
    private @Nullable Output<List<DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs>> dnsSecurityCategories;

    /**
     * @return The DnsSecurityCategories param.
     * 
     */
    public Optional<Output<List<DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs>>> dnsSecurityCategories() {
        return Optional.ofNullable(this.dnsSecurityCategories);
    }

    /**
     * The Lists param.
     * 
     */
    @Import(name="lists")
    private @Nullable Output<List<DnsSecurityProfileBotnetDomainsListArgs>> lists;

    /**
     * @return The Lists param.
     * 
     */
    public Optional<Output<List<DnsSecurityProfileBotnetDomainsListArgs>>> lists() {
        return Optional.ofNullable(this.lists);
    }

    /**
     * The Sinkhole param.
     * 
     */
    @Import(name="sinkhole")
    private @Nullable Output<DnsSecurityProfileBotnetDomainsSinkholeArgs> sinkhole;

    /**
     * @return The Sinkhole param.
     * 
     */
    public Optional<Output<DnsSecurityProfileBotnetDomainsSinkholeArgs>> sinkhole() {
        return Optional.ofNullable(this.sinkhole);
    }

    /**
     * The Whitelists param.
     * 
     */
    @Import(name="whitelists")
    private @Nullable Output<List<DnsSecurityProfileBotnetDomainsWhitelistArgs>> whitelists;

    /**
     * @return The Whitelists param.
     * 
     */
    public Optional<Output<List<DnsSecurityProfileBotnetDomainsWhitelistArgs>>> whitelists() {
        return Optional.ofNullable(this.whitelists);
    }

    private DnsSecurityProfileBotnetDomainsArgs() {}

    private DnsSecurityProfileBotnetDomainsArgs(DnsSecurityProfileBotnetDomainsArgs $) {
        this.dnsSecurityCategories = $.dnsSecurityCategories;
        this.lists = $.lists;
        this.sinkhole = $.sinkhole;
        this.whitelists = $.whitelists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsSecurityProfileBotnetDomainsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsSecurityProfileBotnetDomainsArgs $;

        public Builder() {
            $ = new DnsSecurityProfileBotnetDomainsArgs();
        }

        public Builder(DnsSecurityProfileBotnetDomainsArgs defaults) {
            $ = new DnsSecurityProfileBotnetDomainsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsSecurityCategories The DnsSecurityCategories param.
         * 
         * @return builder
         * 
         */
        public Builder dnsSecurityCategories(@Nullable Output<List<DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs>> dnsSecurityCategories) {
            $.dnsSecurityCategories = dnsSecurityCategories;
            return this;
        }

        /**
         * @param dnsSecurityCategories The DnsSecurityCategories param.
         * 
         * @return builder
         * 
         */
        public Builder dnsSecurityCategories(List<DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs> dnsSecurityCategories) {
            return dnsSecurityCategories(Output.of(dnsSecurityCategories));
        }

        /**
         * @param dnsSecurityCategories The DnsSecurityCategories param.
         * 
         * @return builder
         * 
         */
        public Builder dnsSecurityCategories(DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs... dnsSecurityCategories) {
            return dnsSecurityCategories(List.of(dnsSecurityCategories));
        }

        /**
         * @param lists The Lists param.
         * 
         * @return builder
         * 
         */
        public Builder lists(@Nullable Output<List<DnsSecurityProfileBotnetDomainsListArgs>> lists) {
            $.lists = lists;
            return this;
        }

        /**
         * @param lists The Lists param.
         * 
         * @return builder
         * 
         */
        public Builder lists(List<DnsSecurityProfileBotnetDomainsListArgs> lists) {
            return lists(Output.of(lists));
        }

        /**
         * @param lists The Lists param.
         * 
         * @return builder
         * 
         */
        public Builder lists(DnsSecurityProfileBotnetDomainsListArgs... lists) {
            return lists(List.of(lists));
        }

        /**
         * @param sinkhole The Sinkhole param.
         * 
         * @return builder
         * 
         */
        public Builder sinkhole(@Nullable Output<DnsSecurityProfileBotnetDomainsSinkholeArgs> sinkhole) {
            $.sinkhole = sinkhole;
            return this;
        }

        /**
         * @param sinkhole The Sinkhole param.
         * 
         * @return builder
         * 
         */
        public Builder sinkhole(DnsSecurityProfileBotnetDomainsSinkholeArgs sinkhole) {
            return sinkhole(Output.of(sinkhole));
        }

        /**
         * @param whitelists The Whitelists param.
         * 
         * @return builder
         * 
         */
        public Builder whitelists(@Nullable Output<List<DnsSecurityProfileBotnetDomainsWhitelistArgs>> whitelists) {
            $.whitelists = whitelists;
            return this;
        }

        /**
         * @param whitelists The Whitelists param.
         * 
         * @return builder
         * 
         */
        public Builder whitelists(List<DnsSecurityProfileBotnetDomainsWhitelistArgs> whitelists) {
            return whitelists(Output.of(whitelists));
        }

        /**
         * @param whitelists The Whitelists param.
         * 
         * @return builder
         * 
         */
        public Builder whitelists(DnsSecurityProfileBotnetDomainsWhitelistArgs... whitelists) {
            return whitelists(List.of(whitelists));
        }

        public DnsSecurityProfileBotnetDomainsArgs build() {
            return $;
        }
    }

}
