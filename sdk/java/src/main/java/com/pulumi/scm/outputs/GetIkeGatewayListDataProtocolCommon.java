// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetIkeGatewayListDataProtocolCommonFragmentation;
import com.pulumi.scm.outputs.GetIkeGatewayListDataProtocolCommonNatTraversal;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetIkeGatewayListDataProtocolCommon {
    /**
     * @return The Fragmentation param.
     * 
     */
    private GetIkeGatewayListDataProtocolCommonFragmentation fragmentation;
    /**
     * @return The NatTraversal param.
     * 
     */
    private GetIkeGatewayListDataProtocolCommonNatTraversal natTraversal;
    /**
     * @return The PassiveMode param.
     * 
     */
    private Boolean passiveMode;

    private GetIkeGatewayListDataProtocolCommon() {}
    /**
     * @return The Fragmentation param.
     * 
     */
    public GetIkeGatewayListDataProtocolCommonFragmentation fragmentation() {
        return this.fragmentation;
    }
    /**
     * @return The NatTraversal param.
     * 
     */
    public GetIkeGatewayListDataProtocolCommonNatTraversal natTraversal() {
        return this.natTraversal;
    }
    /**
     * @return The PassiveMode param.
     * 
     */
    public Boolean passiveMode() {
        return this.passiveMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIkeGatewayListDataProtocolCommon defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetIkeGatewayListDataProtocolCommonFragmentation fragmentation;
        private GetIkeGatewayListDataProtocolCommonNatTraversal natTraversal;
        private Boolean passiveMode;
        public Builder() {}
        public Builder(GetIkeGatewayListDataProtocolCommon defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fragmentation = defaults.fragmentation;
    	      this.natTraversal = defaults.natTraversal;
    	      this.passiveMode = defaults.passiveMode;
        }

        @CustomType.Setter
        public Builder fragmentation(GetIkeGatewayListDataProtocolCommonFragmentation fragmentation) {
            if (fragmentation == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListDataProtocolCommon", "fragmentation");
            }
            this.fragmentation = fragmentation;
            return this;
        }
        @CustomType.Setter
        public Builder natTraversal(GetIkeGatewayListDataProtocolCommonNatTraversal natTraversal) {
            if (natTraversal == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListDataProtocolCommon", "natTraversal");
            }
            this.natTraversal = natTraversal;
            return this;
        }
        @CustomType.Setter
        public Builder passiveMode(Boolean passiveMode) {
            if (passiveMode == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListDataProtocolCommon", "passiveMode");
            }
            this.passiveMode = passiveMode;
            return this;
        }
        public GetIkeGatewayListDataProtocolCommon build() {
            final var _resultValue = new GetIkeGatewayListDataProtocolCommon();
            _resultValue.fragmentation = fragmentation;
            _resultValue.natTraversal = natTraversal;
            _resultValue.passiveMode = passiveMode;
            return _resultValue;
        }
    }
}
