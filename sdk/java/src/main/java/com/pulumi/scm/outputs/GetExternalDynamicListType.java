// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetExternalDynamicListTypeDomain;
import com.pulumi.scm.outputs.GetExternalDynamicListTypeImei;
import com.pulumi.scm.outputs.GetExternalDynamicListTypeImsi;
import com.pulumi.scm.outputs.GetExternalDynamicListTypeIp;
import com.pulumi.scm.outputs.GetExternalDynamicListTypePredefinedIp;
import com.pulumi.scm.outputs.GetExternalDynamicListTypePredefinedUrl;
import com.pulumi.scm.outputs.GetExternalDynamicListTypeUrl;
import java.util.Objects;

@CustomType
public final class GetExternalDynamicListType {
    /**
     * @return The Domain param.
     * 
     */
    private GetExternalDynamicListTypeDomain domain;
    /**
     * @return The Imei param.
     * 
     */
    private GetExternalDynamicListTypeImei imei;
    /**
     * @return The Imsi param.
     * 
     */
    private GetExternalDynamicListTypeImsi imsi;
    /**
     * @return The Ip param.
     * 
     */
    private GetExternalDynamicListTypeIp ip;
    /**
     * @return The PredefinedIp param.
     * 
     */
    private GetExternalDynamicListTypePredefinedIp predefinedIp;
    /**
     * @return The PredefinedUrl param.
     * 
     */
    private GetExternalDynamicListTypePredefinedUrl predefinedUrl;
    /**
     * @return The Url param.
     * 
     */
    private GetExternalDynamicListTypeUrl url;

    private GetExternalDynamicListType() {}
    /**
     * @return The Domain param.
     * 
     */
    public GetExternalDynamicListTypeDomain domain() {
        return this.domain;
    }
    /**
     * @return The Imei param.
     * 
     */
    public GetExternalDynamicListTypeImei imei() {
        return this.imei;
    }
    /**
     * @return The Imsi param.
     * 
     */
    public GetExternalDynamicListTypeImsi imsi() {
        return this.imsi;
    }
    /**
     * @return The Ip param.
     * 
     */
    public GetExternalDynamicListTypeIp ip() {
        return this.ip;
    }
    /**
     * @return The PredefinedIp param.
     * 
     */
    public GetExternalDynamicListTypePredefinedIp predefinedIp() {
        return this.predefinedIp;
    }
    /**
     * @return The PredefinedUrl param.
     * 
     */
    public GetExternalDynamicListTypePredefinedUrl predefinedUrl() {
        return this.predefinedUrl;
    }
    /**
     * @return The Url param.
     * 
     */
    public GetExternalDynamicListTypeUrl url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDynamicListType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetExternalDynamicListTypeDomain domain;
        private GetExternalDynamicListTypeImei imei;
        private GetExternalDynamicListTypeImsi imsi;
        private GetExternalDynamicListTypeIp ip;
        private GetExternalDynamicListTypePredefinedIp predefinedIp;
        private GetExternalDynamicListTypePredefinedUrl predefinedUrl;
        private GetExternalDynamicListTypeUrl url;
        public Builder() {}
        public Builder(GetExternalDynamicListType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.imei = defaults.imei;
    	      this.imsi = defaults.imsi;
    	      this.ip = defaults.ip;
    	      this.predefinedIp = defaults.predefinedIp;
    	      this.predefinedUrl = defaults.predefinedUrl;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder domain(GetExternalDynamicListTypeDomain domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder imei(GetExternalDynamicListTypeImei imei) {
            if (imei == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "imei");
            }
            this.imei = imei;
            return this;
        }
        @CustomType.Setter
        public Builder imsi(GetExternalDynamicListTypeImsi imsi) {
            if (imsi == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "imsi");
            }
            this.imsi = imsi;
            return this;
        }
        @CustomType.Setter
        public Builder ip(GetExternalDynamicListTypeIp ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder predefinedIp(GetExternalDynamicListTypePredefinedIp predefinedIp) {
            if (predefinedIp == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "predefinedIp");
            }
            this.predefinedIp = predefinedIp;
            return this;
        }
        @CustomType.Setter
        public Builder predefinedUrl(GetExternalDynamicListTypePredefinedUrl predefinedUrl) {
            if (predefinedUrl == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "predefinedUrl");
            }
            this.predefinedUrl = predefinedUrl;
            return this;
        }
        @CustomType.Setter
        public Builder url(GetExternalDynamicListTypeUrl url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetExternalDynamicListType", "url");
            }
            this.url = url;
            return this;
        }
        public GetExternalDynamicListType build() {
            final var _resultValue = new GetExternalDynamicListType();
            _resultValue.domain = domain;
            _resultValue.imei = imei;
            _resultValue.imsi = imsi;
            _resultValue.ip = ip;
            _resultValue.predefinedIp = predefinedIp;
            _resultValue.predefinedUrl = predefinedUrl;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
