// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.ApplicationFilterTaggingArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationFilterArgs Empty = new ApplicationFilterArgs();

    /**
     * The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     * 
     */
    @Import(name="categories")
    private @Nullable Output<List<String>> categories;

    /**
     * @return The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     * 
     */
    public Optional<Output<List<String>>> categories() {
        return Optional.ofNullable(this.categories);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="evasive")
    private @Nullable Output<Boolean> evasive;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> evasive() {
        return Optional.ofNullable(this.evasive);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="excessiveBandwidthUse")
    private @Nullable Output<Boolean> excessiveBandwidthUse;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> excessiveBandwidthUse() {
        return Optional.ofNullable(this.excessiveBandwidthUse);
    }

    /**
     * The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     * 
     */
    @Import(name="excludes")
    private @Nullable Output<List<String>> excludes;

    /**
     * @return The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
     * 
     */
    public Optional<Output<List<String>>> excludes() {
        return Optional.ofNullable(this.excludes);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="hasKnownVulnerabilities")
    private @Nullable Output<Boolean> hasKnownVulnerabilities;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> hasKnownVulnerabilities() {
        return Optional.ofNullable(this.hasKnownVulnerabilities);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="isSaas")
    private @Nullable Output<Boolean> isSaas;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> isSaas() {
        return Optional.ofNullable(this.isSaas);
    }

    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="newAppid")
    private @Nullable Output<Boolean> newAppid;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> newAppid() {
        return Optional.ofNullable(this.newAppid);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="pervasive")
    private @Nullable Output<Boolean> pervasive;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> pervasive() {
        return Optional.ofNullable(this.pervasive);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="proneToMisuse")
    private @Nullable Output<Boolean> proneToMisuse;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> proneToMisuse() {
        return Optional.ofNullable(this.proneToMisuse);
    }

    /**
     * The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
     * 
     */
    @Import(name="risks")
    private @Nullable Output<List<Integer>> risks;

    /**
     * @return The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
     * 
     */
    public Optional<Output<List<Integer>>> risks() {
        return Optional.ofNullable(this.risks);
    }

    /**
     * The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     * 
     */
    @Import(name="saasCertifications")
    private @Nullable Output<List<String>> saasCertifications;

    /**
     * @return The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     * 
     */
    public Optional<Output<List<String>>> saasCertifications() {
        return Optional.ofNullable(this.saasCertifications);
    }

    /**
     * The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     * 
     */
    @Import(name="saasRisks")
    private @Nullable Output<List<String>> saasRisks;

    /**
     * @return The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
     * 
     */
    public Optional<Output<List<String>>> saasRisks() {
        return Optional.ofNullable(this.saasRisks);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     * 
     */
    @Import(name="subcategories")
    private @Nullable Output<List<String>> subcategories;

    /**
     * @return The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     * 
     */
    public Optional<Output<List<String>>> subcategories() {
        return Optional.ofNullable(this.subcategories);
    }

    /**
     * The Tagging param.
     * 
     */
    @Import(name="tagging")
    private @Nullable Output<ApplicationFilterTaggingArgs> tagging;

    /**
     * @return The Tagging param.
     * 
     */
    public Optional<Output<ApplicationFilterTaggingArgs>> tagging() {
        return Optional.ofNullable(this.tagging);
    }

    /**
     * The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     * 
     */
    @Import(name="technologies")
    private @Nullable Output<List<String>> technologies;

    /**
     * @return The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
     * 
     */
    public Optional<Output<List<String>>> technologies() {
        return Optional.ofNullable(this.technologies);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="transfersFiles")
    private @Nullable Output<Boolean> transfersFiles;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> transfersFiles() {
        return Optional.ofNullable(this.transfersFiles);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="tunnelsOtherApps")
    private @Nullable Output<Boolean> tunnelsOtherApps;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> tunnelsOtherApps() {
        return Optional.ofNullable(this.tunnelsOtherApps);
    }

    /**
     * only True is a valid value.
     * 
     */
    @Import(name="usedByMalware")
    private @Nullable Output<Boolean> usedByMalware;

    /**
     * @return only True is a valid value.
     * 
     */
    public Optional<Output<Boolean>> usedByMalware() {
        return Optional.ofNullable(this.usedByMalware);
    }

    private ApplicationFilterArgs() {}

    private ApplicationFilterArgs(ApplicationFilterArgs $) {
        this.categories = $.categories;
        this.device = $.device;
        this.evasive = $.evasive;
        this.excessiveBandwidthUse = $.excessiveBandwidthUse;
        this.excludes = $.excludes;
        this.folder = $.folder;
        this.hasKnownVulnerabilities = $.hasKnownVulnerabilities;
        this.isSaas = $.isSaas;
        this.name = $.name;
        this.newAppid = $.newAppid;
        this.pervasive = $.pervasive;
        this.proneToMisuse = $.proneToMisuse;
        this.risks = $.risks;
        this.saasCertifications = $.saasCertifications;
        this.saasRisks = $.saasRisks;
        this.snippet = $.snippet;
        this.subcategories = $.subcategories;
        this.tagging = $.tagging;
        this.technologies = $.technologies;
        this.transfersFiles = $.transfersFiles;
        this.tunnelsOtherApps = $.tunnelsOtherApps;
        this.usedByMalware = $.usedByMalware;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationFilterArgs $;

        public Builder() {
            $ = new ApplicationFilterArgs();
        }

        public Builder(ApplicationFilterArgs defaults) {
            $ = new ApplicationFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param categories The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder categories(@Nullable Output<List<String>> categories) {
            $.categories = categories;
            return this;
        }

        /**
         * @param categories The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder categories(List<String> categories) {
            return categories(Output.of(categories));
        }

        /**
         * @param categories The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param evasive only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder evasive(@Nullable Output<Boolean> evasive) {
            $.evasive = evasive;
            return this;
        }

        /**
         * @param evasive only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder evasive(Boolean evasive) {
            return evasive(Output.of(evasive));
        }

        /**
         * @param excessiveBandwidthUse only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder excessiveBandwidthUse(@Nullable Output<Boolean> excessiveBandwidthUse) {
            $.excessiveBandwidthUse = excessiveBandwidthUse;
            return this;
        }

        /**
         * @param excessiveBandwidthUse only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder excessiveBandwidthUse(Boolean excessiveBandwidthUse) {
            return excessiveBandwidthUse(Output.of(excessiveBandwidthUse));
        }

        /**
         * @param excludes The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder excludes(@Nullable Output<List<String>> excludes) {
            $.excludes = excludes;
            return this;
        }

        /**
         * @param excludes The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder excludes(List<String> excludes) {
            return excludes(Output.of(excludes));
        }

        /**
         * @param excludes The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder excludes(String... excludes) {
            return excludes(List.of(excludes));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param hasKnownVulnerabilities only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder hasKnownVulnerabilities(@Nullable Output<Boolean> hasKnownVulnerabilities) {
            $.hasKnownVulnerabilities = hasKnownVulnerabilities;
            return this;
        }

        /**
         * @param hasKnownVulnerabilities only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder hasKnownVulnerabilities(Boolean hasKnownVulnerabilities) {
            return hasKnownVulnerabilities(Output.of(hasKnownVulnerabilities));
        }

        /**
         * @param isSaas only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder isSaas(@Nullable Output<Boolean> isSaas) {
            $.isSaas = isSaas;
            return this;
        }

        /**
         * @param isSaas only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder isSaas(Boolean isSaas) {
            return isSaas(Output.of(isSaas));
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param newAppid only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder newAppid(@Nullable Output<Boolean> newAppid) {
            $.newAppid = newAppid;
            return this;
        }

        /**
         * @param newAppid only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder newAppid(Boolean newAppid) {
            return newAppid(Output.of(newAppid));
        }

        /**
         * @param pervasive only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder pervasive(@Nullable Output<Boolean> pervasive) {
            $.pervasive = pervasive;
            return this;
        }

        /**
         * @param pervasive only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder pervasive(Boolean pervasive) {
            return pervasive(Output.of(pervasive));
        }

        /**
         * @param proneToMisuse only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder proneToMisuse(@Nullable Output<Boolean> proneToMisuse) {
            $.proneToMisuse = proneToMisuse;
            return this;
        }

        /**
         * @param proneToMisuse only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder proneToMisuse(Boolean proneToMisuse) {
            return proneToMisuse(Output.of(proneToMisuse));
        }

        /**
         * @param risks The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder risks(@Nullable Output<List<Integer>> risks) {
            $.risks = risks;
            return this;
        }

        /**
         * @param risks The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder risks(List<Integer> risks) {
            return risks(Output.of(risks));
        }

        /**
         * @param risks The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder risks(Integer... risks) {
            return risks(List.of(risks));
        }

        /**
         * @param saasCertifications The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder saasCertifications(@Nullable Output<List<String>> saasCertifications) {
            $.saasCertifications = saasCertifications;
            return this;
        }

        /**
         * @param saasCertifications The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder saasCertifications(List<String> saasCertifications) {
            return saasCertifications(Output.of(saasCertifications));
        }

        /**
         * @param saasCertifications The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder saasCertifications(String... saasCertifications) {
            return saasCertifications(List.of(saasCertifications));
        }

        /**
         * @param saasRisks The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder saasRisks(@Nullable Output<List<String>> saasRisks) {
            $.saasRisks = saasRisks;
            return this;
        }

        /**
         * @param saasRisks The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder saasRisks(List<String> saasRisks) {
            return saasRisks(Output.of(saasRisks));
        }

        /**
         * @param saasRisks The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder saasRisks(String... saasRisks) {
            return saasRisks(List.of(saasRisks));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param subcategories The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder subcategories(@Nullable Output<List<String>> subcategories) {
            $.subcategories = subcategories;
            return this;
        }

        /**
         * @param subcategories The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder subcategories(List<String> subcategories) {
            return subcategories(Output.of(subcategories));
        }

        /**
         * @param subcategories The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder subcategories(String... subcategories) {
            return subcategories(List.of(subcategories));
        }

        /**
         * @param tagging The Tagging param.
         * 
         * @return builder
         * 
         */
        public Builder tagging(@Nullable Output<ApplicationFilterTaggingArgs> tagging) {
            $.tagging = tagging;
            return this;
        }

        /**
         * @param tagging The Tagging param.
         * 
         * @return builder
         * 
         */
        public Builder tagging(ApplicationFilterTaggingArgs tagging) {
            return tagging(Output.of(tagging));
        }

        /**
         * @param technologies The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder technologies(@Nullable Output<List<String>> technologies) {
            $.technologies = technologies;
            return this;
        }

        /**
         * @param technologies The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder technologies(List<String> technologies) {
            return technologies(Output.of(technologies));
        }

        /**
         * @param technologies The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder technologies(String... technologies) {
            return technologies(List.of(technologies));
        }

        /**
         * @param transfersFiles only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder transfersFiles(@Nullable Output<Boolean> transfersFiles) {
            $.transfersFiles = transfersFiles;
            return this;
        }

        /**
         * @param transfersFiles only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder transfersFiles(Boolean transfersFiles) {
            return transfersFiles(Output.of(transfersFiles));
        }

        /**
         * @param tunnelsOtherApps only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder tunnelsOtherApps(@Nullable Output<Boolean> tunnelsOtherApps) {
            $.tunnelsOtherApps = tunnelsOtherApps;
            return this;
        }

        /**
         * @param tunnelsOtherApps only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder tunnelsOtherApps(Boolean tunnelsOtherApps) {
            return tunnelsOtherApps(Output.of(tunnelsOtherApps));
        }

        /**
         * @param usedByMalware only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder usedByMalware(@Nullable Output<Boolean> usedByMalware) {
            $.usedByMalware = usedByMalware;
            return this;
        }

        /**
         * @param usedByMalware only True is a valid value.
         * 
         * @return builder
         * 
         */
        public Builder usedByMalware(Boolean usedByMalware) {
            return usedByMalware(Output.of(usedByMalware));
        }

        public ApplicationFilterArgs build() {
            return $;
        }
    }

}
