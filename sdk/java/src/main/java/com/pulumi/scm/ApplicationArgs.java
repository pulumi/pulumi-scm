// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.ApplicationDefaultArgs;
import com.pulumi.scm.inputs.ApplicationSignatureArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationArgs Empty = new ApplicationArgs();

    /**
     * The AbleToTransferFile param.
     * 
     */
    @Import(name="ableToTransferFile")
    private @Nullable Output<Boolean> ableToTransferFile;

    /**
     * @return The AbleToTransferFile param.
     * 
     */
    public Optional<Output<Boolean>> ableToTransferFile() {
        return Optional.ofNullable(this.ableToTransferFile);
    }

    /**
     * The AlgDisableCapability param. String length must not exceed 127 characters.
     * 
     */
    @Import(name="algDisableCapability")
    private @Nullable Output<String> algDisableCapability;

    /**
     * @return The AlgDisableCapability param. String length must not exceed 127 characters.
     * 
     */
    public Optional<Output<String>> algDisableCapability() {
        return Optional.ofNullable(this.algDisableCapability);
    }

    /**
     * The Category param.
     * 
     */
    @Import(name="category", required=true)
    private Output<String> category;

    /**
     * @return The Category param.
     * 
     */
    public Output<String> category() {
        return this.category;
    }

    /**
     * The ConsumeBigBandwidth param.
     * 
     */
    @Import(name="consumeBigBandwidth")
    private @Nullable Output<Boolean> consumeBigBandwidth;

    /**
     * @return The ConsumeBigBandwidth param.
     * 
     */
    public Optional<Output<Boolean>> consumeBigBandwidth() {
        return Optional.ofNullable(this.consumeBigBandwidth);
    }

    /**
     * The DataIdent param.
     * 
     */
    @Import(name="dataIdent")
    private @Nullable Output<Boolean> dataIdent;

    /**
     * @return The DataIdent param.
     * 
     */
    public Optional<Output<Boolean>> dataIdent() {
        return Optional.ofNullable(this.dataIdent);
    }

    /**
     * The Default param.
     * 
     */
    @Import(name="default")
    private @Nullable Output<ApplicationDefaultArgs> default_;

    /**
     * @return The Default param.
     * 
     */
    public Optional<Output<ApplicationDefaultArgs>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * The Description param. String length must not exceed 1023 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Description param. String length must not exceed 1023 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The EvasiveBehavior param.
     * 
     */
    @Import(name="evasiveBehavior")
    private @Nullable Output<Boolean> evasiveBehavior;

    /**
     * @return The EvasiveBehavior param.
     * 
     */
    public Optional<Output<Boolean>> evasiveBehavior() {
        return Optional.ofNullable(this.evasiveBehavior);
    }

    /**
     * The FileTypeIdent param.
     * 
     */
    @Import(name="fileTypeIdent")
    private @Nullable Output<Boolean> fileTypeIdent;

    /**
     * @return The FileTypeIdent param.
     * 
     */
    public Optional<Output<Boolean>> fileTypeIdent() {
        return Optional.ofNullable(this.fileTypeIdent);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The HasKnownVulnerability param.
     * 
     */
    @Import(name="hasKnownVulnerability")
    private @Nullable Output<Boolean> hasKnownVulnerability;

    /**
     * @return The HasKnownVulnerability param.
     * 
     */
    public Optional<Output<Boolean>> hasKnownVulnerability() {
        return Optional.ofNullable(this.hasKnownVulnerability);
    }

    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The NoAppidCaching param.
     * 
     */
    @Import(name="noAppidCaching")
    private @Nullable Output<Boolean> noAppidCaching;

    /**
     * @return The NoAppidCaching param.
     * 
     */
    public Optional<Output<Boolean>> noAppidCaching() {
        return Optional.ofNullable(this.noAppidCaching);
    }

    /**
     * The ParentApp param. String length must not exceed 127 characters.
     * 
     */
    @Import(name="parentApp")
    private @Nullable Output<String> parentApp;

    /**
     * @return The ParentApp param. String length must not exceed 127 characters.
     * 
     */
    public Optional<Output<String>> parentApp() {
        return Optional.ofNullable(this.parentApp);
    }

    /**
     * The PervasiveUse param.
     * 
     */
    @Import(name="pervasiveUse")
    private @Nullable Output<Boolean> pervasiveUse;

    /**
     * @return The PervasiveUse param.
     * 
     */
    public Optional<Output<Boolean>> pervasiveUse() {
        return Optional.ofNullable(this.pervasiveUse);
    }

    /**
     * The ProneToMisuse param.
     * 
     */
    @Import(name="proneToMisuse")
    private @Nullable Output<Boolean> proneToMisuse;

    /**
     * @return The ProneToMisuse param.
     * 
     */
    public Optional<Output<Boolean>> proneToMisuse() {
        return Optional.ofNullable(this.proneToMisuse);
    }

    /**
     * The Risk param. Value must be between 1 and 5.
     * 
     */
    @Import(name="risk", required=true)
    private Output<Integer> risk;

    /**
     * @return The Risk param. Value must be between 1 and 5.
     * 
     */
    public Output<Integer> risk() {
        return this.risk;
    }

    /**
     * The Signatures param.
     * 
     */
    @Import(name="signatures")
    private @Nullable Output<List<ApplicationSignatureArgs>> signatures;

    /**
     * @return The Signatures param.
     * 
     */
    public Optional<Output<List<ApplicationSignatureArgs>>> signatures() {
        return Optional.ofNullable(this.signatures);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The Subcategory param. String length must not exceed 63 characters.
     * 
     */
    @Import(name="subcategory", required=true)
    private Output<String> subcategory;

    /**
     * @return The Subcategory param. String length must not exceed 63 characters.
     * 
     */
    public Output<String> subcategory() {
        return this.subcategory;
    }

    /**
     * timeout for half-close session in seconds. Value must be between 1 and 604800.
     * 
     */
    @Import(name="tcpHalfClosedTimeout")
    private @Nullable Output<Integer> tcpHalfClosedTimeout;

    /**
     * @return timeout for half-close session in seconds. Value must be between 1 and 604800.
     * 
     */
    public Optional<Output<Integer>> tcpHalfClosedTimeout() {
        return Optional.ofNullable(this.tcpHalfClosedTimeout);
    }

    /**
     * timeout for session in time_wait state in seconds. Value must be between 1 and 600.
     * 
     */
    @Import(name="tcpTimeWaitTimeout")
    private @Nullable Output<Integer> tcpTimeWaitTimeout;

    /**
     * @return timeout for session in time_wait state in seconds. Value must be between 1 and 600.
     * 
     */
    public Optional<Output<Integer>> tcpTimeWaitTimeout() {
        return Optional.ofNullable(this.tcpTimeWaitTimeout);
    }

    /**
     * timeout in seconds. Value must be between 0 and 604800.
     * 
     */
    @Import(name="tcpTimeout")
    private @Nullable Output<Integer> tcpTimeout;

    /**
     * @return timeout in seconds. Value must be between 0 and 604800.
     * 
     */
    public Optional<Output<Integer>> tcpTimeout() {
        return Optional.ofNullable(this.tcpTimeout);
    }

    /**
     * The Technology param. String length must not exceed 63 characters.
     * 
     */
    @Import(name="technology", required=true)
    private Output<String> technology;

    /**
     * @return The Technology param. String length must not exceed 63 characters.
     * 
     */
    public Output<String> technology() {
        return this.technology;
    }

    /**
     * timeout in seconds. Value must be between 0 and 604800.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return timeout in seconds. Value must be between 0 and 604800.
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * The TunnelApplications param.
     * 
     */
    @Import(name="tunnelApplications")
    private @Nullable Output<Boolean> tunnelApplications;

    /**
     * @return The TunnelApplications param.
     * 
     */
    public Optional<Output<Boolean>> tunnelApplications() {
        return Optional.ofNullable(this.tunnelApplications);
    }

    /**
     * The TunnelOtherApplication param.
     * 
     */
    @Import(name="tunnelOtherApplication")
    private @Nullable Output<Boolean> tunnelOtherApplication;

    /**
     * @return The TunnelOtherApplication param.
     * 
     */
    public Optional<Output<Boolean>> tunnelOtherApplication() {
        return Optional.ofNullable(this.tunnelOtherApplication);
    }

    /**
     * timeout in seconds. Value must be between 0 and 604800.
     * 
     */
    @Import(name="udpTimeout")
    private @Nullable Output<Integer> udpTimeout;

    /**
     * @return timeout in seconds. Value must be between 0 and 604800.
     * 
     */
    public Optional<Output<Integer>> udpTimeout() {
        return Optional.ofNullable(this.udpTimeout);
    }

    /**
     * The UsedByMalware param.
     * 
     */
    @Import(name="usedByMalware")
    private @Nullable Output<Boolean> usedByMalware;

    /**
     * @return The UsedByMalware param.
     * 
     */
    public Optional<Output<Boolean>> usedByMalware() {
        return Optional.ofNullable(this.usedByMalware);
    }

    /**
     * The VirusIdent param.
     * 
     */
    @Import(name="virusIdent")
    private @Nullable Output<Boolean> virusIdent;

    /**
     * @return The VirusIdent param.
     * 
     */
    public Optional<Output<Boolean>> virusIdent() {
        return Optional.ofNullable(this.virusIdent);
    }

    private ApplicationArgs() {}

    private ApplicationArgs(ApplicationArgs $) {
        this.ableToTransferFile = $.ableToTransferFile;
        this.algDisableCapability = $.algDisableCapability;
        this.category = $.category;
        this.consumeBigBandwidth = $.consumeBigBandwidth;
        this.dataIdent = $.dataIdent;
        this.default_ = $.default_;
        this.description = $.description;
        this.device = $.device;
        this.evasiveBehavior = $.evasiveBehavior;
        this.fileTypeIdent = $.fileTypeIdent;
        this.folder = $.folder;
        this.hasKnownVulnerability = $.hasKnownVulnerability;
        this.name = $.name;
        this.noAppidCaching = $.noAppidCaching;
        this.parentApp = $.parentApp;
        this.pervasiveUse = $.pervasiveUse;
        this.proneToMisuse = $.proneToMisuse;
        this.risk = $.risk;
        this.signatures = $.signatures;
        this.snippet = $.snippet;
        this.subcategory = $.subcategory;
        this.tcpHalfClosedTimeout = $.tcpHalfClosedTimeout;
        this.tcpTimeWaitTimeout = $.tcpTimeWaitTimeout;
        this.tcpTimeout = $.tcpTimeout;
        this.technology = $.technology;
        this.timeout = $.timeout;
        this.tunnelApplications = $.tunnelApplications;
        this.tunnelOtherApplication = $.tunnelOtherApplication;
        this.udpTimeout = $.udpTimeout;
        this.usedByMalware = $.usedByMalware;
        this.virusIdent = $.virusIdent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationArgs $;

        public Builder() {
            $ = new ApplicationArgs();
        }

        public Builder(ApplicationArgs defaults) {
            $ = new ApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ableToTransferFile The AbleToTransferFile param.
         * 
         * @return builder
         * 
         */
        public Builder ableToTransferFile(@Nullable Output<Boolean> ableToTransferFile) {
            $.ableToTransferFile = ableToTransferFile;
            return this;
        }

        /**
         * @param ableToTransferFile The AbleToTransferFile param.
         * 
         * @return builder
         * 
         */
        public Builder ableToTransferFile(Boolean ableToTransferFile) {
            return ableToTransferFile(Output.of(ableToTransferFile));
        }

        /**
         * @param algDisableCapability The AlgDisableCapability param. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder algDisableCapability(@Nullable Output<String> algDisableCapability) {
            $.algDisableCapability = algDisableCapability;
            return this;
        }

        /**
         * @param algDisableCapability The AlgDisableCapability param. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder algDisableCapability(String algDisableCapability) {
            return algDisableCapability(Output.of(algDisableCapability));
        }

        /**
         * @param category The Category param.
         * 
         * @return builder
         * 
         */
        public Builder category(Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The Category param.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param consumeBigBandwidth The ConsumeBigBandwidth param.
         * 
         * @return builder
         * 
         */
        public Builder consumeBigBandwidth(@Nullable Output<Boolean> consumeBigBandwidth) {
            $.consumeBigBandwidth = consumeBigBandwidth;
            return this;
        }

        /**
         * @param consumeBigBandwidth The ConsumeBigBandwidth param.
         * 
         * @return builder
         * 
         */
        public Builder consumeBigBandwidth(Boolean consumeBigBandwidth) {
            return consumeBigBandwidth(Output.of(consumeBigBandwidth));
        }

        /**
         * @param dataIdent The DataIdent param.
         * 
         * @return builder
         * 
         */
        public Builder dataIdent(@Nullable Output<Boolean> dataIdent) {
            $.dataIdent = dataIdent;
            return this;
        }

        /**
         * @param dataIdent The DataIdent param.
         * 
         * @return builder
         * 
         */
        public Builder dataIdent(Boolean dataIdent) {
            return dataIdent(Output.of(dataIdent));
        }

        /**
         * @param default_ The Default param.
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable Output<ApplicationDefaultArgs> default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param default_ The Default param.
         * 
         * @return builder
         * 
         */
        public Builder default_(ApplicationDefaultArgs default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param description The Description param. String length must not exceed 1023 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Description param. String length must not exceed 1023 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param evasiveBehavior The EvasiveBehavior param.
         * 
         * @return builder
         * 
         */
        public Builder evasiveBehavior(@Nullable Output<Boolean> evasiveBehavior) {
            $.evasiveBehavior = evasiveBehavior;
            return this;
        }

        /**
         * @param evasiveBehavior The EvasiveBehavior param.
         * 
         * @return builder
         * 
         */
        public Builder evasiveBehavior(Boolean evasiveBehavior) {
            return evasiveBehavior(Output.of(evasiveBehavior));
        }

        /**
         * @param fileTypeIdent The FileTypeIdent param.
         * 
         * @return builder
         * 
         */
        public Builder fileTypeIdent(@Nullable Output<Boolean> fileTypeIdent) {
            $.fileTypeIdent = fileTypeIdent;
            return this;
        }

        /**
         * @param fileTypeIdent The FileTypeIdent param.
         * 
         * @return builder
         * 
         */
        public Builder fileTypeIdent(Boolean fileTypeIdent) {
            return fileTypeIdent(Output.of(fileTypeIdent));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param hasKnownVulnerability The HasKnownVulnerability param.
         * 
         * @return builder
         * 
         */
        public Builder hasKnownVulnerability(@Nullable Output<Boolean> hasKnownVulnerability) {
            $.hasKnownVulnerability = hasKnownVulnerability;
            return this;
        }

        /**
         * @param hasKnownVulnerability The HasKnownVulnerability param.
         * 
         * @return builder
         * 
         */
        public Builder hasKnownVulnerability(Boolean hasKnownVulnerability) {
            return hasKnownVulnerability(Output.of(hasKnownVulnerability));
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param noAppidCaching The NoAppidCaching param.
         * 
         * @return builder
         * 
         */
        public Builder noAppidCaching(@Nullable Output<Boolean> noAppidCaching) {
            $.noAppidCaching = noAppidCaching;
            return this;
        }

        /**
         * @param noAppidCaching The NoAppidCaching param.
         * 
         * @return builder
         * 
         */
        public Builder noAppidCaching(Boolean noAppidCaching) {
            return noAppidCaching(Output.of(noAppidCaching));
        }

        /**
         * @param parentApp The ParentApp param. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder parentApp(@Nullable Output<String> parentApp) {
            $.parentApp = parentApp;
            return this;
        }

        /**
         * @param parentApp The ParentApp param. String length must not exceed 127 characters.
         * 
         * @return builder
         * 
         */
        public Builder parentApp(String parentApp) {
            return parentApp(Output.of(parentApp));
        }

        /**
         * @param pervasiveUse The PervasiveUse param.
         * 
         * @return builder
         * 
         */
        public Builder pervasiveUse(@Nullable Output<Boolean> pervasiveUse) {
            $.pervasiveUse = pervasiveUse;
            return this;
        }

        /**
         * @param pervasiveUse The PervasiveUse param.
         * 
         * @return builder
         * 
         */
        public Builder pervasiveUse(Boolean pervasiveUse) {
            return pervasiveUse(Output.of(pervasiveUse));
        }

        /**
         * @param proneToMisuse The ProneToMisuse param.
         * 
         * @return builder
         * 
         */
        public Builder proneToMisuse(@Nullable Output<Boolean> proneToMisuse) {
            $.proneToMisuse = proneToMisuse;
            return this;
        }

        /**
         * @param proneToMisuse The ProneToMisuse param.
         * 
         * @return builder
         * 
         */
        public Builder proneToMisuse(Boolean proneToMisuse) {
            return proneToMisuse(Output.of(proneToMisuse));
        }

        /**
         * @param risk The Risk param. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder risk(Output<Integer> risk) {
            $.risk = risk;
            return this;
        }

        /**
         * @param risk The Risk param. Value must be between 1 and 5.
         * 
         * @return builder
         * 
         */
        public Builder risk(Integer risk) {
            return risk(Output.of(risk));
        }

        /**
         * @param signatures The Signatures param.
         * 
         * @return builder
         * 
         */
        public Builder signatures(@Nullable Output<List<ApplicationSignatureArgs>> signatures) {
            $.signatures = signatures;
            return this;
        }

        /**
         * @param signatures The Signatures param.
         * 
         * @return builder
         * 
         */
        public Builder signatures(List<ApplicationSignatureArgs> signatures) {
            return signatures(Output.of(signatures));
        }

        /**
         * @param signatures The Signatures param.
         * 
         * @return builder
         * 
         */
        public Builder signatures(ApplicationSignatureArgs... signatures) {
            return signatures(List.of(signatures));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param subcategory The Subcategory param. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder subcategory(Output<String> subcategory) {
            $.subcategory = subcategory;
            return this;
        }

        /**
         * @param subcategory The Subcategory param. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder subcategory(String subcategory) {
            return subcategory(Output.of(subcategory));
        }

        /**
         * @param tcpHalfClosedTimeout timeout for half-close session in seconds. Value must be between 1 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder tcpHalfClosedTimeout(@Nullable Output<Integer> tcpHalfClosedTimeout) {
            $.tcpHalfClosedTimeout = tcpHalfClosedTimeout;
            return this;
        }

        /**
         * @param tcpHalfClosedTimeout timeout for half-close session in seconds. Value must be between 1 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder tcpHalfClosedTimeout(Integer tcpHalfClosedTimeout) {
            return tcpHalfClosedTimeout(Output.of(tcpHalfClosedTimeout));
        }

        /**
         * @param tcpTimeWaitTimeout timeout for session in time_wait state in seconds. Value must be between 1 and 600.
         * 
         * @return builder
         * 
         */
        public Builder tcpTimeWaitTimeout(@Nullable Output<Integer> tcpTimeWaitTimeout) {
            $.tcpTimeWaitTimeout = tcpTimeWaitTimeout;
            return this;
        }

        /**
         * @param tcpTimeWaitTimeout timeout for session in time_wait state in seconds. Value must be between 1 and 600.
         * 
         * @return builder
         * 
         */
        public Builder tcpTimeWaitTimeout(Integer tcpTimeWaitTimeout) {
            return tcpTimeWaitTimeout(Output.of(tcpTimeWaitTimeout));
        }

        /**
         * @param tcpTimeout timeout in seconds. Value must be between 0 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder tcpTimeout(@Nullable Output<Integer> tcpTimeout) {
            $.tcpTimeout = tcpTimeout;
            return this;
        }

        /**
         * @param tcpTimeout timeout in seconds. Value must be between 0 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder tcpTimeout(Integer tcpTimeout) {
            return tcpTimeout(Output.of(tcpTimeout));
        }

        /**
         * @param technology The Technology param. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder technology(Output<String> technology) {
            $.technology = technology;
            return this;
        }

        /**
         * @param technology The Technology param. String length must not exceed 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder technology(String technology) {
            return technology(Output.of(technology));
        }

        /**
         * @param timeout timeout in seconds. Value must be between 0 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout timeout in seconds. Value must be between 0 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param tunnelApplications The TunnelApplications param.
         * 
         * @return builder
         * 
         */
        public Builder tunnelApplications(@Nullable Output<Boolean> tunnelApplications) {
            $.tunnelApplications = tunnelApplications;
            return this;
        }

        /**
         * @param tunnelApplications The TunnelApplications param.
         * 
         * @return builder
         * 
         */
        public Builder tunnelApplications(Boolean tunnelApplications) {
            return tunnelApplications(Output.of(tunnelApplications));
        }

        /**
         * @param tunnelOtherApplication The TunnelOtherApplication param.
         * 
         * @return builder
         * 
         */
        public Builder tunnelOtherApplication(@Nullable Output<Boolean> tunnelOtherApplication) {
            $.tunnelOtherApplication = tunnelOtherApplication;
            return this;
        }

        /**
         * @param tunnelOtherApplication The TunnelOtherApplication param.
         * 
         * @return builder
         * 
         */
        public Builder tunnelOtherApplication(Boolean tunnelOtherApplication) {
            return tunnelOtherApplication(Output.of(tunnelOtherApplication));
        }

        /**
         * @param udpTimeout timeout in seconds. Value must be between 0 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder udpTimeout(@Nullable Output<Integer> udpTimeout) {
            $.udpTimeout = udpTimeout;
            return this;
        }

        /**
         * @param udpTimeout timeout in seconds. Value must be between 0 and 604800.
         * 
         * @return builder
         * 
         */
        public Builder udpTimeout(Integer udpTimeout) {
            return udpTimeout(Output.of(udpTimeout));
        }

        /**
         * @param usedByMalware The UsedByMalware param.
         * 
         * @return builder
         * 
         */
        public Builder usedByMalware(@Nullable Output<Boolean> usedByMalware) {
            $.usedByMalware = usedByMalware;
            return this;
        }

        /**
         * @param usedByMalware The UsedByMalware param.
         * 
         * @return builder
         * 
         */
        public Builder usedByMalware(Boolean usedByMalware) {
            return usedByMalware(Output.of(usedByMalware));
        }

        /**
         * @param virusIdent The VirusIdent param.
         * 
         * @return builder
         * 
         */
        public Builder virusIdent(@Nullable Output<Boolean> virusIdent) {
            $.virusIdent = virusIdent;
            return this;
        }

        /**
         * @param virusIdent The VirusIdent param.
         * 
         * @return builder
         * 
         */
        public Builder virusIdent(Boolean virusIdent) {
            return virusIdent(Output.of(virusIdent));
        }

        public ApplicationArgs build() {
            if ($.category == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "category");
            }
            if ($.risk == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "risk");
            }
            if ($.subcategory == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "subcategory");
            }
            if ($.technology == null) {
                throw new MissingRequiredPropertyException("ApplicationArgs", "technology");
            }
            return $;
        }
    }

}
