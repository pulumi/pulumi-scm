// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMfaServerMfaVendorTypeDuoSecurityV2 {
    /**
     * @return The DuoApiHost param.
     * 
     */
    private String duoApiHost;
    /**
     * @return The DuoBaseuri param.
     * 
     */
    private String duoBaseuri;
    /**
     * @return The DuoIntegrationKey param.
     * 
     */
    private String duoIntegrationKey;
    /**
     * @return The DuoSecretKey param.
     * 
     */
    private String duoSecretKey;
    /**
     * @return The DuoTimeout param.
     * 
     */
    private String duoTimeout;

    private GetMfaServerMfaVendorTypeDuoSecurityV2() {}
    /**
     * @return The DuoApiHost param.
     * 
     */
    public String duoApiHost() {
        return this.duoApiHost;
    }
    /**
     * @return The DuoBaseuri param.
     * 
     */
    public String duoBaseuri() {
        return this.duoBaseuri;
    }
    /**
     * @return The DuoIntegrationKey param.
     * 
     */
    public String duoIntegrationKey() {
        return this.duoIntegrationKey;
    }
    /**
     * @return The DuoSecretKey param.
     * 
     */
    public String duoSecretKey() {
        return this.duoSecretKey;
    }
    /**
     * @return The DuoTimeout param.
     * 
     */
    public String duoTimeout() {
        return this.duoTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMfaServerMfaVendorTypeDuoSecurityV2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String duoApiHost;
        private String duoBaseuri;
        private String duoIntegrationKey;
        private String duoSecretKey;
        private String duoTimeout;
        public Builder() {}
        public Builder(GetMfaServerMfaVendorTypeDuoSecurityV2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duoApiHost = defaults.duoApiHost;
    	      this.duoBaseuri = defaults.duoBaseuri;
    	      this.duoIntegrationKey = defaults.duoIntegrationKey;
    	      this.duoSecretKey = defaults.duoSecretKey;
    	      this.duoTimeout = defaults.duoTimeout;
        }

        @CustomType.Setter
        public Builder duoApiHost(String duoApiHost) {
            if (duoApiHost == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeDuoSecurityV2", "duoApiHost");
            }
            this.duoApiHost = duoApiHost;
            return this;
        }
        @CustomType.Setter
        public Builder duoBaseuri(String duoBaseuri) {
            if (duoBaseuri == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeDuoSecurityV2", "duoBaseuri");
            }
            this.duoBaseuri = duoBaseuri;
            return this;
        }
        @CustomType.Setter
        public Builder duoIntegrationKey(String duoIntegrationKey) {
            if (duoIntegrationKey == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeDuoSecurityV2", "duoIntegrationKey");
            }
            this.duoIntegrationKey = duoIntegrationKey;
            return this;
        }
        @CustomType.Setter
        public Builder duoSecretKey(String duoSecretKey) {
            if (duoSecretKey == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeDuoSecurityV2", "duoSecretKey");
            }
            this.duoSecretKey = duoSecretKey;
            return this;
        }
        @CustomType.Setter
        public Builder duoTimeout(String duoTimeout) {
            if (duoTimeout == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeDuoSecurityV2", "duoTimeout");
            }
            this.duoTimeout = duoTimeout;
            return this;
        }
        public GetMfaServerMfaVendorTypeDuoSecurityV2 build() {
            final var _resultValue = new GetMfaServerMfaVendorTypeDuoSecurityV2();
            _resultValue.duoApiHost = duoApiHost;
            _resultValue.duoBaseuri = duoBaseuri;
            _resultValue.duoIntegrationKey = duoIntegrationKey;
            _resultValue.duoSecretKey = duoSecretKey;
            _resultValue.duoTimeout = duoTimeout;
            return _resultValue;
        }
    }
}
