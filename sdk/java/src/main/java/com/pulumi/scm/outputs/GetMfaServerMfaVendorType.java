// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetMfaServerMfaVendorTypeDuoSecurityV2;
import com.pulumi.scm.outputs.GetMfaServerMfaVendorTypeOktaAdaptiveV1;
import com.pulumi.scm.outputs.GetMfaServerMfaVendorTypePingIdentityV1;
import com.pulumi.scm.outputs.GetMfaServerMfaVendorTypeRsaSecuridAccessV1;
import java.util.Objects;

@CustomType
public final class GetMfaServerMfaVendorType {
    /**
     * @return The DuoSecurityV2 param.
     * 
     */
    private GetMfaServerMfaVendorTypeDuoSecurityV2 duoSecurityV2;
    /**
     * @return The OktaAdaptiveV1 param.
     * 
     */
    private GetMfaServerMfaVendorTypeOktaAdaptiveV1 oktaAdaptiveV1;
    /**
     * @return The PingIdentityV1 param.
     * 
     */
    private GetMfaServerMfaVendorTypePingIdentityV1 pingIdentityV1;
    /**
     * @return The RsaSecuridAccessV1 param.
     * 
     */
    private GetMfaServerMfaVendorTypeRsaSecuridAccessV1 rsaSecuridAccessV1;

    private GetMfaServerMfaVendorType() {}
    /**
     * @return The DuoSecurityV2 param.
     * 
     */
    public GetMfaServerMfaVendorTypeDuoSecurityV2 duoSecurityV2() {
        return this.duoSecurityV2;
    }
    /**
     * @return The OktaAdaptiveV1 param.
     * 
     */
    public GetMfaServerMfaVendorTypeOktaAdaptiveV1 oktaAdaptiveV1() {
        return this.oktaAdaptiveV1;
    }
    /**
     * @return The PingIdentityV1 param.
     * 
     */
    public GetMfaServerMfaVendorTypePingIdentityV1 pingIdentityV1() {
        return this.pingIdentityV1;
    }
    /**
     * @return The RsaSecuridAccessV1 param.
     * 
     */
    public GetMfaServerMfaVendorTypeRsaSecuridAccessV1 rsaSecuridAccessV1() {
        return this.rsaSecuridAccessV1;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMfaServerMfaVendorType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetMfaServerMfaVendorTypeDuoSecurityV2 duoSecurityV2;
        private GetMfaServerMfaVendorTypeOktaAdaptiveV1 oktaAdaptiveV1;
        private GetMfaServerMfaVendorTypePingIdentityV1 pingIdentityV1;
        private GetMfaServerMfaVendorTypeRsaSecuridAccessV1 rsaSecuridAccessV1;
        public Builder() {}
        public Builder(GetMfaServerMfaVendorType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duoSecurityV2 = defaults.duoSecurityV2;
    	      this.oktaAdaptiveV1 = defaults.oktaAdaptiveV1;
    	      this.pingIdentityV1 = defaults.pingIdentityV1;
    	      this.rsaSecuridAccessV1 = defaults.rsaSecuridAccessV1;
        }

        @CustomType.Setter
        public Builder duoSecurityV2(GetMfaServerMfaVendorTypeDuoSecurityV2 duoSecurityV2) {
            if (duoSecurityV2 == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorType", "duoSecurityV2");
            }
            this.duoSecurityV2 = duoSecurityV2;
            return this;
        }
        @CustomType.Setter
        public Builder oktaAdaptiveV1(GetMfaServerMfaVendorTypeOktaAdaptiveV1 oktaAdaptiveV1) {
            if (oktaAdaptiveV1 == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorType", "oktaAdaptiveV1");
            }
            this.oktaAdaptiveV1 = oktaAdaptiveV1;
            return this;
        }
        @CustomType.Setter
        public Builder pingIdentityV1(GetMfaServerMfaVendorTypePingIdentityV1 pingIdentityV1) {
            if (pingIdentityV1 == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorType", "pingIdentityV1");
            }
            this.pingIdentityV1 = pingIdentityV1;
            return this;
        }
        @CustomType.Setter
        public Builder rsaSecuridAccessV1(GetMfaServerMfaVendorTypeRsaSecuridAccessV1 rsaSecuridAccessV1) {
            if (rsaSecuridAccessV1 == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorType", "rsaSecuridAccessV1");
            }
            this.rsaSecuridAccessV1 = rsaSecuridAccessV1;
            return this;
        }
        public GetMfaServerMfaVendorType build() {
            final var _resultValue = new GetMfaServerMfaVendorType();
            _resultValue.duoSecurityV2 = duoSecurityV2;
            _resultValue.oktaAdaptiveV1 = oktaAdaptiveV1;
            _resultValue.pingIdentityV1 = pingIdentityV1;
            _resultValue.rsaSecuridAccessV1 = rsaSecuridAccessV1;
            return _resultValue;
        }
    }
}
