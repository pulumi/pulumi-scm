// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetIpsecCryptoProfileAh;
import com.pulumi.scm.outputs.GetIpsecCryptoProfileEsp;
import com.pulumi.scm.outputs.GetIpsecCryptoProfileLifesize;
import com.pulumi.scm.outputs.GetIpsecCryptoProfileLifetime;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpsecCryptoProfileResult {
    /**
     * @return The Ah param.
     * 
     */
    private GetIpsecCryptoProfileAh ah;
    /**
     * @return The Device param.
     * 
     */
    private @Nullable String device;
    /**
     * @return phase-2 DH group (PFS DH group). String must be one of these: `&#34;no-pfs&#34;`, `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`. Default: `&#34;group2&#34;`.
     * 
     */
    private String dhGroup;
    /**
     * @return The Esp param.
     * 
     */
    private GetIpsecCryptoProfileEsp esp;
    /**
     * @return The Folder param.
     * 
     */
    private @Nullable String folder;
    /**
     * @return The Id param.
     * 
     */
    private String id;
    /**
     * @return The Lifesize param.
     * 
     */
    private GetIpsecCryptoProfileLifesize lifesize;
    /**
     * @return The Lifetime param.
     * 
     */
    private GetIpsecCryptoProfileLifetime lifetime;
    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    private String name;
    /**
     * @return The Snippet param.
     * 
     */
    private @Nullable String snippet;
    private String tfid;

    private GetIpsecCryptoProfileResult() {}
    /**
     * @return The Ah param.
     * 
     */
    public GetIpsecCryptoProfileAh ah() {
        return this.ah;
    }
    /**
     * @return The Device param.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return phase-2 DH group (PFS DH group). String must be one of these: `&#34;no-pfs&#34;`, `&#34;group1&#34;`, `&#34;group2&#34;`, `&#34;group5&#34;`, `&#34;group14&#34;`, `&#34;group19&#34;`, `&#34;group20&#34;`. Default: `&#34;group2&#34;`.
     * 
     */
    public String dhGroup() {
        return this.dhGroup;
    }
    /**
     * @return The Esp param.
     * 
     */
    public GetIpsecCryptoProfileEsp esp() {
        return this.esp;
    }
    /**
     * @return The Folder param.
     * 
     */
    public Optional<String> folder() {
        return Optional.ofNullable(this.folder);
    }
    /**
     * @return The Id param.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Lifesize param.
     * 
     */
    public GetIpsecCryptoProfileLifesize lifesize() {
        return this.lifesize;
    }
    /**
     * @return The Lifetime param.
     * 
     */
    public GetIpsecCryptoProfileLifetime lifetime() {
        return this.lifetime;
    }
    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Snippet param.
     * 
     */
    public Optional<String> snippet() {
        return Optional.ofNullable(this.snippet);
    }
    public String tfid() {
        return this.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpsecCryptoProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetIpsecCryptoProfileAh ah;
        private @Nullable String device;
        private String dhGroup;
        private GetIpsecCryptoProfileEsp esp;
        private @Nullable String folder;
        private String id;
        private GetIpsecCryptoProfileLifesize lifesize;
        private GetIpsecCryptoProfileLifetime lifetime;
        private String name;
        private @Nullable String snippet;
        private String tfid;
        public Builder() {}
        public Builder(GetIpsecCryptoProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ah = defaults.ah;
    	      this.device = defaults.device;
    	      this.dhGroup = defaults.dhGroup;
    	      this.esp = defaults.esp;
    	      this.folder = defaults.folder;
    	      this.id = defaults.id;
    	      this.lifesize = defaults.lifesize;
    	      this.lifetime = defaults.lifetime;
    	      this.name = defaults.name;
    	      this.snippet = defaults.snippet;
    	      this.tfid = defaults.tfid;
        }

        @CustomType.Setter
        public Builder ah(GetIpsecCryptoProfileAh ah) {
            if (ah == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "ah");
            }
            this.ah = ah;
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {

            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder dhGroup(String dhGroup) {
            if (dhGroup == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "dhGroup");
            }
            this.dhGroup = dhGroup;
            return this;
        }
        @CustomType.Setter
        public Builder esp(GetIpsecCryptoProfileEsp esp) {
            if (esp == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "esp");
            }
            this.esp = esp;
            return this;
        }
        @CustomType.Setter
        public Builder folder(@Nullable String folder) {

            this.folder = folder;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifesize(GetIpsecCryptoProfileLifesize lifesize) {
            if (lifesize == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "lifesize");
            }
            this.lifesize = lifesize;
            return this;
        }
        @CustomType.Setter
        public Builder lifetime(GetIpsecCryptoProfileLifetime lifetime) {
            if (lifetime == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "lifetime");
            }
            this.lifetime = lifetime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder snippet(@Nullable String snippet) {

            this.snippet = snippet;
            return this;
        }
        @CustomType.Setter
        public Builder tfid(String tfid) {
            if (tfid == null) {
              throw new MissingRequiredPropertyException("GetIpsecCryptoProfileResult", "tfid");
            }
            this.tfid = tfid;
            return this;
        }
        public GetIpsecCryptoProfileResult build() {
            final var _resultValue = new GetIpsecCryptoProfileResult();
            _resultValue.ah = ah;
            _resultValue.device = device;
            _resultValue.dhGroup = dhGroup;
            _resultValue.esp = esp;
            _resultValue.folder = folder;
            _resultValue.id = id;
            _resultValue.lifesize = lifesize;
            _resultValue.lifetime = lifetime;
            _resultValue.name = name;
            _resultValue.snippet = snippet;
            _resultValue.tfid = tfid;
            return _resultValue;
        }
    }
}
