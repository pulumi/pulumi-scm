// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetIkeGatewayListDataAuthentication;
import com.pulumi.scm.outputs.GetIkeGatewayListDataLocalId;
import com.pulumi.scm.outputs.GetIkeGatewayListDataPeerAddress;
import com.pulumi.scm.outputs.GetIkeGatewayListDataPeerId;
import com.pulumi.scm.outputs.GetIkeGatewayListDataProtocol;
import com.pulumi.scm.outputs.GetIkeGatewayListDataProtocolCommon;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIkeGatewayListData {
    /**
     * @return The Authentication param.
     * 
     */
    private GetIkeGatewayListDataAuthentication authentication;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return The LocalId param.
     * 
     */
    private GetIkeGatewayListDataLocalId localId;
    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    private String name;
    /**
     * @return The PeerAddress param.
     * 
     */
    private GetIkeGatewayListDataPeerAddress peerAddress;
    /**
     * @return The PeerId param.
     * 
     */
    private GetIkeGatewayListDataPeerId peerId;
    /**
     * @return The Protocol param.
     * 
     */
    private GetIkeGatewayListDataProtocol protocol;
    /**
     * @return The ProtocolCommon param.
     * 
     */
    private GetIkeGatewayListDataProtocolCommon protocolCommon;

    private GetIkeGatewayListData() {}
    /**
     * @return The Authentication param.
     * 
     */
    public GetIkeGatewayListDataAuthentication authentication() {
        return this.authentication;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The LocalId param.
     * 
     */
    public GetIkeGatewayListDataLocalId localId() {
        return this.localId;
    }
    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The PeerAddress param.
     * 
     */
    public GetIkeGatewayListDataPeerAddress peerAddress() {
        return this.peerAddress;
    }
    /**
     * @return The PeerId param.
     * 
     */
    public GetIkeGatewayListDataPeerId peerId() {
        return this.peerId;
    }
    /**
     * @return The Protocol param.
     * 
     */
    public GetIkeGatewayListDataProtocol protocol() {
        return this.protocol;
    }
    /**
     * @return The ProtocolCommon param.
     * 
     */
    public GetIkeGatewayListDataProtocolCommon protocolCommon() {
        return this.protocolCommon;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIkeGatewayListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetIkeGatewayListDataAuthentication authentication;
        private String id;
        private GetIkeGatewayListDataLocalId localId;
        private String name;
        private GetIkeGatewayListDataPeerAddress peerAddress;
        private GetIkeGatewayListDataPeerId peerId;
        private GetIkeGatewayListDataProtocol protocol;
        private GetIkeGatewayListDataProtocolCommon protocolCommon;
        public Builder() {}
        public Builder(GetIkeGatewayListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.id = defaults.id;
    	      this.localId = defaults.localId;
    	      this.name = defaults.name;
    	      this.peerAddress = defaults.peerAddress;
    	      this.peerId = defaults.peerId;
    	      this.protocol = defaults.protocol;
    	      this.protocolCommon = defaults.protocolCommon;
        }

        @CustomType.Setter
        public Builder authentication(GetIkeGatewayListDataAuthentication authentication) {
            if (authentication == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "authentication");
            }
            this.authentication = authentication;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder localId(GetIkeGatewayListDataLocalId localId) {
            if (localId == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "localId");
            }
            this.localId = localId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder peerAddress(GetIkeGatewayListDataPeerAddress peerAddress) {
            if (peerAddress == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "peerAddress");
            }
            this.peerAddress = peerAddress;
            return this;
        }
        @CustomType.Setter
        public Builder peerId(GetIkeGatewayListDataPeerId peerId) {
            if (peerId == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "peerId");
            }
            this.peerId = peerId;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(GetIkeGatewayListDataProtocol protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolCommon(GetIkeGatewayListDataProtocolCommon protocolCommon) {
            if (protocolCommon == null) {
              throw new MissingRequiredPropertyException("GetIkeGatewayListData", "protocolCommon");
            }
            this.protocolCommon = protocolCommon;
            return this;
        }
        public GetIkeGatewayListData build() {
            final var _resultValue = new GetIkeGatewayListData();
            _resultValue.authentication = authentication;
            _resultValue.id = id;
            _resultValue.localId = localId;
            _resultValue.name = name;
            _resultValue.peerAddress = peerAddress;
            _resultValue.peerId = peerId;
            _resultValue.protocol = protocol;
            _resultValue.protocolCommon = protocolCommon;
            return _resultValue;
        }
    }
}
