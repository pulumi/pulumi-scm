// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.HipObjectPatchManagementCriteriaMissingPatchesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HipObjectPatchManagementCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final HipObjectPatchManagementCriteriaArgs Empty = new HipObjectPatchManagementCriteriaArgs();

    /**
     * is enabled. String must be one of these: `&#34;no&#34;`, `&#34;yes&#34;`, `&#34;not-available&#34;`.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<String> isEnabled;

    /**
     * @return is enabled. String must be one of these: `&#34;no&#34;`, `&#34;yes&#34;`, `&#34;not-available&#34;`.
     * 
     */
    public Optional<Output<String>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * Is Installed. Default: `true`.
     * 
     */
    @Import(name="isInstalled")
    private @Nullable Output<Boolean> isInstalled;

    /**
     * @return Is Installed. Default: `true`.
     * 
     */
    public Optional<Output<Boolean>> isInstalled() {
        return Optional.ofNullable(this.isInstalled);
    }

    /**
     * The MissingPatches param.
     * 
     */
    @Import(name="missingPatches")
    private @Nullable Output<HipObjectPatchManagementCriteriaMissingPatchesArgs> missingPatches;

    /**
     * @return The MissingPatches param.
     * 
     */
    public Optional<Output<HipObjectPatchManagementCriteriaMissingPatchesArgs>> missingPatches() {
        return Optional.ofNullable(this.missingPatches);
    }

    private HipObjectPatchManagementCriteriaArgs() {}

    private HipObjectPatchManagementCriteriaArgs(HipObjectPatchManagementCriteriaArgs $) {
        this.isEnabled = $.isEnabled;
        this.isInstalled = $.isInstalled;
        this.missingPatches = $.missingPatches;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HipObjectPatchManagementCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HipObjectPatchManagementCriteriaArgs $;

        public Builder() {
            $ = new HipObjectPatchManagementCriteriaArgs();
        }

        public Builder(HipObjectPatchManagementCriteriaArgs defaults) {
            $ = new HipObjectPatchManagementCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isEnabled is enabled. String must be one of these: `&#34;no&#34;`, `&#34;yes&#34;`, `&#34;not-available&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<String> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled is enabled. String must be one of these: `&#34;no&#34;`, `&#34;yes&#34;`, `&#34;not-available&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(String isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param isInstalled Is Installed. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder isInstalled(@Nullable Output<Boolean> isInstalled) {
            $.isInstalled = isInstalled;
            return this;
        }

        /**
         * @param isInstalled Is Installed. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder isInstalled(Boolean isInstalled) {
            return isInstalled(Output.of(isInstalled));
        }

        /**
         * @param missingPatches The MissingPatches param.
         * 
         * @return builder
         * 
         */
        public Builder missingPatches(@Nullable Output<HipObjectPatchManagementCriteriaMissingPatchesArgs> missingPatches) {
            $.missingPatches = missingPatches;
            return this;
        }

        /**
         * @param missingPatches The MissingPatches param.
         * 
         * @return builder
         * 
         */
        public Builder missingPatches(HipObjectPatchManagementCriteriaMissingPatchesArgs missingPatches) {
            return missingPatches(Output.of(missingPatches));
        }

        public HipObjectPatchManagementCriteriaArgs build() {
            return $;
        }
    }

}
