// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectCustomChecksCriteriaPlist;
import com.pulumi.scm.outputs.GetHipObjectCustomChecksCriteriaProcessList;
import com.pulumi.scm.outputs.GetHipObjectCustomChecksCriteriaRegistryKey;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHipObjectCustomChecksCriteria {
    /**
     * @return The Plist param.
     * 
     */
    private List<GetHipObjectCustomChecksCriteriaPlist> plists;
    /**
     * @return The ProcessList param.
     * 
     */
    private List<GetHipObjectCustomChecksCriteriaProcessList> processLists;
    /**
     * @return The RegistryKeys param.
     * 
     */
    private List<GetHipObjectCustomChecksCriteriaRegistryKey> registryKeys;

    private GetHipObjectCustomChecksCriteria() {}
    /**
     * @return The Plist param.
     * 
     */
    public List<GetHipObjectCustomChecksCriteriaPlist> plists() {
        return this.plists;
    }
    /**
     * @return The ProcessList param.
     * 
     */
    public List<GetHipObjectCustomChecksCriteriaProcessList> processLists() {
        return this.processLists;
    }
    /**
     * @return The RegistryKeys param.
     * 
     */
    public List<GetHipObjectCustomChecksCriteriaRegistryKey> registryKeys() {
        return this.registryKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectCustomChecksCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetHipObjectCustomChecksCriteriaPlist> plists;
        private List<GetHipObjectCustomChecksCriteriaProcessList> processLists;
        private List<GetHipObjectCustomChecksCriteriaRegistryKey> registryKeys;
        public Builder() {}
        public Builder(GetHipObjectCustomChecksCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.plists = defaults.plists;
    	      this.processLists = defaults.processLists;
    	      this.registryKeys = defaults.registryKeys;
        }

        @CustomType.Setter
        public Builder plists(List<GetHipObjectCustomChecksCriteriaPlist> plists) {
            if (plists == null) {
              throw new MissingRequiredPropertyException("GetHipObjectCustomChecksCriteria", "plists");
            }
            this.plists = plists;
            return this;
        }
        public Builder plists(GetHipObjectCustomChecksCriteriaPlist... plists) {
            return plists(List.of(plists));
        }
        @CustomType.Setter
        public Builder processLists(List<GetHipObjectCustomChecksCriteriaProcessList> processLists) {
            if (processLists == null) {
              throw new MissingRequiredPropertyException("GetHipObjectCustomChecksCriteria", "processLists");
            }
            this.processLists = processLists;
            return this;
        }
        public Builder processLists(GetHipObjectCustomChecksCriteriaProcessList... processLists) {
            return processLists(List.of(processLists));
        }
        @CustomType.Setter
        public Builder registryKeys(List<GetHipObjectCustomChecksCriteriaRegistryKey> registryKeys) {
            if (registryKeys == null) {
              throw new MissingRequiredPropertyException("GetHipObjectCustomChecksCriteria", "registryKeys");
            }
            this.registryKeys = registryKeys;
            return this;
        }
        public Builder registryKeys(GetHipObjectCustomChecksCriteriaRegistryKey... registryKeys) {
            return registryKeys(List.of(registryKeys));
        }
        public GetHipObjectCustomChecksCriteria build() {
            final var _resultValue = new GetHipObjectCustomChecksCriteria();
            _resultValue.plists = plists;
            _resultValue.processLists = processLists;
            _resultValue.registryKeys = registryKeys;
            return _resultValue;
        }
    }
}
