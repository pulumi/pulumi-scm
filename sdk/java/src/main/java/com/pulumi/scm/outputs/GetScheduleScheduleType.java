// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetScheduleScheduleTypeRecurring;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetScheduleScheduleType {
    /**
     * @return The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1]){@literal @}([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1]){@literal @}([01][0-9]|[2][0-3]):([0-5][0-9])`.
     * 
     */
    private List<String> nonRecurringLists;
    /**
     * @return The Recurring param.
     * 
     */
    private GetScheduleScheduleTypeRecurring recurring;

    private GetScheduleScheduleType() {}
    /**
     * @return The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1]){@literal @}([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\/([0][1-9]|[1][0-2])\/([0-2][0-9]|[3][0-1]){@literal @}([01][0-9]|[2][0-3]):([0-5][0-9])`.
     * 
     */
    public List<String> nonRecurringLists() {
        return this.nonRecurringLists;
    }
    /**
     * @return The Recurring param.
     * 
     */
    public GetScheduleScheduleTypeRecurring recurring() {
        return this.recurring;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduleScheduleType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> nonRecurringLists;
        private GetScheduleScheduleTypeRecurring recurring;
        public Builder() {}
        public Builder(GetScheduleScheduleType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nonRecurringLists = defaults.nonRecurringLists;
    	      this.recurring = defaults.recurring;
        }

        @CustomType.Setter
        public Builder nonRecurringLists(List<String> nonRecurringLists) {
            if (nonRecurringLists == null) {
              throw new MissingRequiredPropertyException("GetScheduleScheduleType", "nonRecurringLists");
            }
            this.nonRecurringLists = nonRecurringLists;
            return this;
        }
        public Builder nonRecurringLists(String... nonRecurringLists) {
            return nonRecurringLists(List.of(nonRecurringLists));
        }
        @CustomType.Setter
        public Builder recurring(GetScheduleScheduleTypeRecurring recurring) {
            if (recurring == null) {
              throw new MissingRequiredPropertyException("GetScheduleScheduleType", "recurring");
            }
            this.recurring = recurring;
            return this;
        }
        public GetScheduleScheduleType build() {
            final var _resultValue = new GetScheduleScheduleType();
            _resultValue.nonRecurringLists = nonRecurringLists;
            _resultValue.recurring = recurring;
            return _resultValue;
        }
    }
}
