// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.AntiSpywareProfileRuleActionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AntiSpywareProfileRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AntiSpywareProfileRuleArgs Empty = new AntiSpywareProfileRuleArgs();

    /**
     * The Action param.
     * 
     */
    @Import(name="action")
    private @Nullable Output<AntiSpywareProfileRuleActionArgs> action;

    /**
     * @return The Action param.
     * 
     */
    public Optional<Output<AntiSpywareProfileRuleActionArgs>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The Category param. String must be one of these: `&#34;dns-proxy&#34;`, `&#34;backdoor&#34;`, `&#34;data-theft&#34;`, `&#34;autogen&#34;`, `&#34;spyware&#34;`, `&#34;dns-security&#34;`, `&#34;downloader&#34;`, `&#34;dns-phishing&#34;`, `&#34;phishing-kit&#34;`, `&#34;cryptominer&#34;`, `&#34;hacktool&#34;`, `&#34;dns-benign&#34;`, `&#34;dns-wildfire&#34;`, `&#34;botnet&#34;`, `&#34;dns-grayware&#34;`, `&#34;inline-cloud-c2&#34;`, `&#34;keylogger&#34;`, `&#34;p2p-communication&#34;`, `&#34;domain-edl&#34;`, `&#34;webshell&#34;`, `&#34;command-and-control&#34;`, `&#34;dns-ddns&#34;`, `&#34;net-worm&#34;`, `&#34;any&#34;`, `&#34;tls-fingerprint&#34;`, `&#34;dns-new-domain&#34;`, `&#34;dns&#34;`, `&#34;fraud&#34;`, `&#34;dns-c2&#34;`, `&#34;adware&#34;`, `&#34;post-exploitation&#34;`, `&#34;dns-malware&#34;`, `&#34;browser-hijack&#34;`, `&#34;dns-parked&#34;`.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return The Category param. String must be one of these: `&#34;dns-proxy&#34;`, `&#34;backdoor&#34;`, `&#34;data-theft&#34;`, `&#34;autogen&#34;`, `&#34;spyware&#34;`, `&#34;dns-security&#34;`, `&#34;downloader&#34;`, `&#34;dns-phishing&#34;`, `&#34;phishing-kit&#34;`, `&#34;cryptominer&#34;`, `&#34;hacktool&#34;`, `&#34;dns-benign&#34;`, `&#34;dns-wildfire&#34;`, `&#34;botnet&#34;`, `&#34;dns-grayware&#34;`, `&#34;inline-cloud-c2&#34;`, `&#34;keylogger&#34;`, `&#34;p2p-communication&#34;`, `&#34;domain-edl&#34;`, `&#34;webshell&#34;`, `&#34;command-and-control&#34;`, `&#34;dns-ddns&#34;`, `&#34;net-worm&#34;`, `&#34;any&#34;`, `&#34;tls-fingerprint&#34;`, `&#34;dns-new-domain&#34;`, `&#34;dns&#34;`, `&#34;fraud&#34;`, `&#34;dns-c2&#34;`, `&#34;adware&#34;`, `&#34;post-exploitation&#34;`, `&#34;dns-malware&#34;`, `&#34;browser-hijack&#34;`, `&#34;dns-parked&#34;`.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
     * 
     */
    @Import(name="packetCapture")
    private @Nullable Output<String> packetCapture;

    /**
     * @return The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
     * 
     */
    public Optional<Output<String>> packetCapture() {
        return Optional.ofNullable(this.packetCapture);
    }

    /**
     * The Severities param.
     * 
     */
    @Import(name="severities")
    private @Nullable Output<List<String>> severities;

    /**
     * @return The Severities param.
     * 
     */
    public Optional<Output<List<String>>> severities() {
        return Optional.ofNullable(this.severities);
    }

    /**
     * The ThreatName param. String length must exceed 4 characters.
     * 
     */
    @Import(name="threatName")
    private @Nullable Output<String> threatName;

    /**
     * @return The ThreatName param. String length must exceed 4 characters.
     * 
     */
    public Optional<Output<String>> threatName() {
        return Optional.ofNullable(this.threatName);
    }

    private AntiSpywareProfileRuleArgs() {}

    private AntiSpywareProfileRuleArgs(AntiSpywareProfileRuleArgs $) {
        this.action = $.action;
        this.category = $.category;
        this.name = $.name;
        this.packetCapture = $.packetCapture;
        this.severities = $.severities;
        this.threatName = $.threatName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AntiSpywareProfileRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AntiSpywareProfileRuleArgs $;

        public Builder() {
            $ = new AntiSpywareProfileRuleArgs();
        }

        public Builder(AntiSpywareProfileRuleArgs defaults) {
            $ = new AntiSpywareProfileRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The Action param.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<AntiSpywareProfileRuleActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The Action param.
         * 
         * @return builder
         * 
         */
        public Builder action(AntiSpywareProfileRuleActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param category The Category param. String must be one of these: `&#34;dns-proxy&#34;`, `&#34;backdoor&#34;`, `&#34;data-theft&#34;`, `&#34;autogen&#34;`, `&#34;spyware&#34;`, `&#34;dns-security&#34;`, `&#34;downloader&#34;`, `&#34;dns-phishing&#34;`, `&#34;phishing-kit&#34;`, `&#34;cryptominer&#34;`, `&#34;hacktool&#34;`, `&#34;dns-benign&#34;`, `&#34;dns-wildfire&#34;`, `&#34;botnet&#34;`, `&#34;dns-grayware&#34;`, `&#34;inline-cloud-c2&#34;`, `&#34;keylogger&#34;`, `&#34;p2p-communication&#34;`, `&#34;domain-edl&#34;`, `&#34;webshell&#34;`, `&#34;command-and-control&#34;`, `&#34;dns-ddns&#34;`, `&#34;net-worm&#34;`, `&#34;any&#34;`, `&#34;tls-fingerprint&#34;`, `&#34;dns-new-domain&#34;`, `&#34;dns&#34;`, `&#34;fraud&#34;`, `&#34;dns-c2&#34;`, `&#34;adware&#34;`, `&#34;post-exploitation&#34;`, `&#34;dns-malware&#34;`, `&#34;browser-hijack&#34;`, `&#34;dns-parked&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The Category param. String must be one of these: `&#34;dns-proxy&#34;`, `&#34;backdoor&#34;`, `&#34;data-theft&#34;`, `&#34;autogen&#34;`, `&#34;spyware&#34;`, `&#34;dns-security&#34;`, `&#34;downloader&#34;`, `&#34;dns-phishing&#34;`, `&#34;phishing-kit&#34;`, `&#34;cryptominer&#34;`, `&#34;hacktool&#34;`, `&#34;dns-benign&#34;`, `&#34;dns-wildfire&#34;`, `&#34;botnet&#34;`, `&#34;dns-grayware&#34;`, `&#34;inline-cloud-c2&#34;`, `&#34;keylogger&#34;`, `&#34;p2p-communication&#34;`, `&#34;domain-edl&#34;`, `&#34;webshell&#34;`, `&#34;command-and-control&#34;`, `&#34;dns-ddns&#34;`, `&#34;net-worm&#34;`, `&#34;any&#34;`, `&#34;tls-fingerprint&#34;`, `&#34;dns-new-domain&#34;`, `&#34;dns&#34;`, `&#34;fraud&#34;`, `&#34;dns-c2&#34;`, `&#34;adware&#34;`, `&#34;post-exploitation&#34;`, `&#34;dns-malware&#34;`, `&#34;browser-hijack&#34;`, `&#34;dns-parked&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param packetCapture The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder packetCapture(@Nullable Output<String> packetCapture) {
            $.packetCapture = packetCapture;
            return this;
        }

        /**
         * @param packetCapture The PacketCapture param. String must be one of these: `&#34;disable&#34;`, `&#34;single-packet&#34;`, `&#34;extended-capture&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder packetCapture(String packetCapture) {
            return packetCapture(Output.of(packetCapture));
        }

        /**
         * @param severities The Severities param.
         * 
         * @return builder
         * 
         */
        public Builder severities(@Nullable Output<List<String>> severities) {
            $.severities = severities;
            return this;
        }

        /**
         * @param severities The Severities param.
         * 
         * @return builder
         * 
         */
        public Builder severities(List<String> severities) {
            return severities(Output.of(severities));
        }

        /**
         * @param severities The Severities param.
         * 
         * @return builder
         * 
         */
        public Builder severities(String... severities) {
            return severities(List.of(severities));
        }

        /**
         * @param threatName The ThreatName param. String length must exceed 4 characters.
         * 
         * @return builder
         * 
         */
        public Builder threatName(@Nullable Output<String> threatName) {
            $.threatName = threatName;
            return this;
        }

        /**
         * @param threatName The ThreatName param. String length must exceed 4 characters.
         * 
         * @return builder
         * 
         */
        public Builder threatName(String threatName) {
            return threatName(Output.of(threatName));
        }

        public AntiSpywareProfileRuleArgs build() {
            return $;
        }
    }

}
