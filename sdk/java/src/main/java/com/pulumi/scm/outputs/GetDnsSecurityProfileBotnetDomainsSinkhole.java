// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDnsSecurityProfileBotnetDomainsSinkhole {
    /**
     * @return The Ipv4Address param. String must be one of these: `&#34;127.0.0.1&#34;`, `&#34;pan-sinkhole-default-ip&#34;`.
     * 
     */
    private String ipv4Address;
    /**
     * @return The Ipv6Address param. String must be one of these: `&#34;::1&#34;`.
     * 
     */
    private String ipv6Address;

    private GetDnsSecurityProfileBotnetDomainsSinkhole() {}
    /**
     * @return The Ipv4Address param. String must be one of these: `&#34;127.0.0.1&#34;`, `&#34;pan-sinkhole-default-ip&#34;`.
     * 
     */
    public String ipv4Address() {
        return this.ipv4Address;
    }
    /**
     * @return The Ipv6Address param. String must be one of these: `&#34;::1&#34;`.
     * 
     */
    public String ipv6Address() {
        return this.ipv6Address;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsSecurityProfileBotnetDomainsSinkhole defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ipv4Address;
        private String ipv6Address;
        public Builder() {}
        public Builder(GetDnsSecurityProfileBotnetDomainsSinkhole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipv4Address = defaults.ipv4Address;
    	      this.ipv6Address = defaults.ipv6Address;
        }

        @CustomType.Setter
        public Builder ipv4Address(String ipv4Address) {
            if (ipv4Address == null) {
              throw new MissingRequiredPropertyException("GetDnsSecurityProfileBotnetDomainsSinkhole", "ipv4Address");
            }
            this.ipv4Address = ipv4Address;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Address(String ipv6Address) {
            if (ipv6Address == null) {
              throw new MissingRequiredPropertyException("GetDnsSecurityProfileBotnetDomainsSinkhole", "ipv6Address");
            }
            this.ipv6Address = ipv6Address;
            return this;
        }
        public GetDnsSecurityProfileBotnetDomainsSinkhole build() {
            final var _resultValue = new GetDnsSecurityProfileBotnetDomainsSinkhole();
            _resultValue.ipv4Address = ipv4Address;
            _resultValue.ipv6Address = ipv6Address;
            return _resultValue;
        }
    }
}
