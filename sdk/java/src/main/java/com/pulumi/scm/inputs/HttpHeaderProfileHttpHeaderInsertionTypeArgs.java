// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class HttpHeaderProfileHttpHeaderInsertionTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final HttpHeaderProfileHttpHeaderInsertionTypeArgs Empty = new HttpHeaderProfileHttpHeaderInsertionTypeArgs();

    /**
     * The Domains param.
     * 
     */
    @Import(name="domains", required=true)
    private Output<List<String>> domains;

    /**
     * @return The Domains param.
     * 
     */
    public Output<List<String>> domains() {
        return this.domains;
    }

    /**
     * The Headers param.
     * 
     */
    @Import(name="headers", required=true)
    private Output<List<HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs>> headers;

    /**
     * @return The Headers param.
     * 
     */
    public Output<List<HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs>> headers() {
        return this.headers;
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private HttpHeaderProfileHttpHeaderInsertionTypeArgs() {}

    private HttpHeaderProfileHttpHeaderInsertionTypeArgs(HttpHeaderProfileHttpHeaderInsertionTypeArgs $) {
        this.domains = $.domains;
        this.headers = $.headers;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpHeaderProfileHttpHeaderInsertionTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpHeaderProfileHttpHeaderInsertionTypeArgs $;

        public Builder() {
            $ = new HttpHeaderProfileHttpHeaderInsertionTypeArgs();
        }

        public Builder(HttpHeaderProfileHttpHeaderInsertionTypeArgs defaults) {
            $ = new HttpHeaderProfileHttpHeaderInsertionTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domains The Domains param.
         * 
         * @return builder
         * 
         */
        public Builder domains(Output<List<String>> domains) {
            $.domains = domains;
            return this;
        }

        /**
         * @param domains The Domains param.
         * 
         * @return builder
         * 
         */
        public Builder domains(List<String> domains) {
            return domains(Output.of(domains));
        }

        /**
         * @param domains The Domains param.
         * 
         * @return builder
         * 
         */
        public Builder domains(String... domains) {
            return domains(List.of(domains));
        }

        /**
         * @param headers The Headers param.
         * 
         * @return builder
         * 
         */
        public Builder headers(Output<List<HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers The Headers param.
         * 
         * @return builder
         * 
         */
        public Builder headers(List<HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param headers The Headers param.
         * 
         * @return builder
         * 
         */
        public Builder headers(HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public HttpHeaderProfileHttpHeaderInsertionTypeArgs build() {
            if ($.domains == null) {
                throw new MissingRequiredPropertyException("HttpHeaderProfileHttpHeaderInsertionTypeArgs", "domains");
            }
            if ($.headers == null) {
                throw new MissingRequiredPropertyException("HttpHeaderProfileHttpHeaderInsertionTypeArgs", "headers");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("HttpHeaderProfileHttpHeaderInsertionTypeArgs", "name");
            }
            return $;
        }
    }

}
