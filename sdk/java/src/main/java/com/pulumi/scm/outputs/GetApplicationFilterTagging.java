// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationFilterTagging {
    /**
     * @return The NoTag param.
     * 
     */
    private Boolean noTag;
    /**
     * @return The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     * 
     */
    private List<String> tags;

    private GetApplicationFilterTagging() {}
    /**
     * @return The NoTag param.
     * 
     */
    public Boolean noTag() {
        return this.noTag;
    }
    /**
     * @return The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationFilterTagging defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean noTag;
        private List<String> tags;
        public Builder() {}
        public Builder(GetApplicationFilterTagging defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.noTag = defaults.noTag;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder noTag(Boolean noTag) {
            if (noTag == null) {
              throw new MissingRequiredPropertyException("GetApplicationFilterTagging", "noTag");
            }
            this.noTag = noTag;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetApplicationFilterTagging", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetApplicationFilterTagging build() {
            final var _resultValue = new GetApplicationFilterTagging();
            _resultValue.noTag = noTag;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
