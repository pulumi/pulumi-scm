// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplicationSignatureAndConditionOrConditionOperatorEqualTo {
    /**
     * @return The Context param.
     * 
     */
    private String context;
    /**
     * @return 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
     * 
     */
    private String mask;
    /**
     * @return The Position param. String length must not exceed 127 characters.
     * 
     */
    private String position;
    /**
     * @return The Value param. String length must not exceed 10 characters.
     * 
     */
    private String value;

    private GetApplicationSignatureAndConditionOrConditionOperatorEqualTo() {}
    /**
     * @return The Context param.
     * 
     */
    public String context() {
        return this.context;
    }
    /**
     * @return 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
     * 
     */
    public String mask() {
        return this.mask;
    }
    /**
     * @return The Position param. String length must not exceed 127 characters.
     * 
     */
    public String position() {
        return this.position;
    }
    /**
     * @return The Value param. String length must not exceed 10 characters.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationSignatureAndConditionOrConditionOperatorEqualTo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String context;
        private String mask;
        private String position;
        private String value;
        public Builder() {}
        public Builder(GetApplicationSignatureAndConditionOrConditionOperatorEqualTo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.mask = defaults.mask;
    	      this.position = defaults.position;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder context(String context) {
            if (context == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorEqualTo", "context");
            }
            this.context = context;
            return this;
        }
        @CustomType.Setter
        public Builder mask(String mask) {
            if (mask == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorEqualTo", "mask");
            }
            this.mask = mask;
            return this;
        }
        @CustomType.Setter
        public Builder position(String position) {
            if (position == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorEqualTo", "position");
            }
            this.position = position;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorEqualTo", "value");
            }
            this.value = value;
            return this;
        }
        public GetApplicationSignatureAndConditionOrConditionOperatorEqualTo build() {
            final var _resultValue = new GetApplicationSignatureAndConditionOrConditionOperatorEqualTo();
            _resultValue.context = context;
            _resultValue.mask = mask;
            _resultValue.position = position;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
