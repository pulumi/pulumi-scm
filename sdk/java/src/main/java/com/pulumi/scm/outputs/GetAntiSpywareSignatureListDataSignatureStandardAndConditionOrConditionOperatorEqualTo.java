// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo {
    /**
     * @return The Context param.
     * 
     */
    private String context;
    /**
     * @return The Negate param. Default: `false`.
     * 
     */
    private Boolean negate;
    /**
     * @return The Qualifiers param.
     * 
     */
    private List<GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier> qualifiers;
    /**
     * @return The Value param. Value must be between 0 and 4294967295.
     * 
     */
    private Integer value;

    private GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo() {}
    /**
     * @return The Context param.
     * 
     */
    public String context() {
        return this.context;
    }
    /**
     * @return The Negate param. Default: `false`.
     * 
     */
    public Boolean negate() {
        return this.negate;
    }
    /**
     * @return The Qualifiers param.
     * 
     */
    public List<GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier> qualifiers() {
        return this.qualifiers;
    }
    /**
     * @return The Value param. Value must be between 0 and 4294967295.
     * 
     */
    public Integer value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String context;
        private Boolean negate;
        private List<GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier> qualifiers;
        private Integer value;
        public Builder() {}
        public Builder(GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.negate = defaults.negate;
    	      this.qualifiers = defaults.qualifiers;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder context(String context) {
            if (context == null) {
              throw new MissingRequiredPropertyException("GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo", "context");
            }
            this.context = context;
            return this;
        }
        @CustomType.Setter
        public Builder negate(Boolean negate) {
            if (negate == null) {
              throw new MissingRequiredPropertyException("GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo", "negate");
            }
            this.negate = negate;
            return this;
        }
        @CustomType.Setter
        public Builder qualifiers(List<GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier> qualifiers) {
            if (qualifiers == null) {
              throw new MissingRequiredPropertyException("GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo", "qualifiers");
            }
            this.qualifiers = qualifiers;
            return this;
        }
        public Builder qualifiers(GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifier... qualifiers) {
            return qualifiers(List.of(qualifiers));
        }
        @CustomType.Setter
        public Builder value(Integer value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo", "value");
            }
            this.value = value;
            return this;
        }
        public GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo build() {
            final var _resultValue = new GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualTo();
            _resultValue.context = context;
            _resultValue.negate = negate;
            _resultValue.qualifiers = qualifiers;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
