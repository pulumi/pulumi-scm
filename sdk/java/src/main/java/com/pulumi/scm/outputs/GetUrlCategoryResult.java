// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUrlCategoryResult {
    /**
     * @return The Description param.
     * 
     */
    private String description;
    /**
     * @return The Id param.
     * 
     */
    private String id;
    /**
     * @return The List param.
     * 
     */
    private List<String> lists;
    /**
     * @return The Name param.
     * 
     */
    private String name;
    private String tfid;
    /**
     * @return The Type param. String must be one of these: `&#34;URL List&#34;`, `&#34;Category Match&#34;`. Default: `&#34;URL List&#34;`.
     * 
     */
    private String type;

    private GetUrlCategoryResult() {}
    /**
     * @return The Description param.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Id param.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The List param.
     * 
     */
    public List<String> lists() {
        return this.lists;
    }
    /**
     * @return The Name param.
     * 
     */
    public String name() {
        return this.name;
    }
    public String tfid() {
        return this.tfid;
    }
    /**
     * @return The Type param. String must be one of these: `&#34;URL List&#34;`, `&#34;Category Match&#34;`. Default: `&#34;URL List&#34;`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUrlCategoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private List<String> lists;
        private String name;
        private String tfid;
        private String type;
        public Builder() {}
        public Builder(GetUrlCategoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.lists = defaults.lists;
    	      this.name = defaults.name;
    	      this.tfid = defaults.tfid;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUrlCategoryResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUrlCategoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lists(List<String> lists) {
            if (lists == null) {
              throw new MissingRequiredPropertyException("GetUrlCategoryResult", "lists");
            }
            this.lists = lists;
            return this;
        }
        public Builder lists(String... lists) {
            return lists(List.of(lists));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUrlCategoryResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tfid(String tfid) {
            if (tfid == null) {
              throw new MissingRequiredPropertyException("GetUrlCategoryResult", "tfid");
            }
            this.tfid = tfid;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetUrlCategoryResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetUrlCategoryResult build() {
            final var _resultValue = new GetUrlCategoryResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.lists = lists;
            _resultValue.name = name;
            _resultValue.tfid = tfid;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
