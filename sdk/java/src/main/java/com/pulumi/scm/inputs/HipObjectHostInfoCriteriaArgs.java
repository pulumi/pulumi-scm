// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.HipObjectHostInfoCriteriaClientVersionArgs;
import com.pulumi.scm.inputs.HipObjectHostInfoCriteriaDomainArgs;
import com.pulumi.scm.inputs.HipObjectHostInfoCriteriaHostIdArgs;
import com.pulumi.scm.inputs.HipObjectHostInfoCriteriaHostNameArgs;
import com.pulumi.scm.inputs.HipObjectHostInfoCriteriaOsArgs;
import com.pulumi.scm.inputs.HipObjectHostInfoCriteriaSerialNumberArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HipObjectHostInfoCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final HipObjectHostInfoCriteriaArgs Empty = new HipObjectHostInfoCriteriaArgs();

    /**
     * The ClientVersion param.
     * 
     */
    @Import(name="clientVersion")
    private @Nullable Output<HipObjectHostInfoCriteriaClientVersionArgs> clientVersion;

    /**
     * @return The ClientVersion param.
     * 
     */
    public Optional<Output<HipObjectHostInfoCriteriaClientVersionArgs>> clientVersion() {
        return Optional.ofNullable(this.clientVersion);
    }

    /**
     * The Domain param.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<HipObjectHostInfoCriteriaDomainArgs> domain;

    /**
     * @return The Domain param.
     * 
     */
    public Optional<Output<HipObjectHostInfoCriteriaDomainArgs>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The HostId param.
     * 
     */
    @Import(name="hostId")
    private @Nullable Output<HipObjectHostInfoCriteriaHostIdArgs> hostId;

    /**
     * @return The HostId param.
     * 
     */
    public Optional<Output<HipObjectHostInfoCriteriaHostIdArgs>> hostId() {
        return Optional.ofNullable(this.hostId);
    }

    /**
     * The HostName param.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<HipObjectHostInfoCriteriaHostNameArgs> hostName;

    /**
     * @return The HostName param.
     * 
     */
    public Optional<Output<HipObjectHostInfoCriteriaHostNameArgs>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * If device is managed.
     * 
     */
    @Import(name="managed")
    private @Nullable Output<Boolean> managed;

    /**
     * @return If device is managed.
     * 
     */
    public Optional<Output<Boolean>> managed() {
        return Optional.ofNullable(this.managed);
    }

    /**
     * The Os param.
     * 
     */
    @Import(name="os")
    private @Nullable Output<HipObjectHostInfoCriteriaOsArgs> os;

    /**
     * @return The Os param.
     * 
     */
    public Optional<Output<HipObjectHostInfoCriteriaOsArgs>> os() {
        return Optional.ofNullable(this.os);
    }

    /**
     * The SerialNumber param.
     * 
     */
    @Import(name="serialNumber")
    private @Nullable Output<HipObjectHostInfoCriteriaSerialNumberArgs> serialNumber;

    /**
     * @return The SerialNumber param.
     * 
     */
    public Optional<Output<HipObjectHostInfoCriteriaSerialNumberArgs>> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    private HipObjectHostInfoCriteriaArgs() {}

    private HipObjectHostInfoCriteriaArgs(HipObjectHostInfoCriteriaArgs $) {
        this.clientVersion = $.clientVersion;
        this.domain = $.domain;
        this.hostId = $.hostId;
        this.hostName = $.hostName;
        this.managed = $.managed;
        this.os = $.os;
        this.serialNumber = $.serialNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HipObjectHostInfoCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HipObjectHostInfoCriteriaArgs $;

        public Builder() {
            $ = new HipObjectHostInfoCriteriaArgs();
        }

        public Builder(HipObjectHostInfoCriteriaArgs defaults) {
            $ = new HipObjectHostInfoCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientVersion The ClientVersion param.
         * 
         * @return builder
         * 
         */
        public Builder clientVersion(@Nullable Output<HipObjectHostInfoCriteriaClientVersionArgs> clientVersion) {
            $.clientVersion = clientVersion;
            return this;
        }

        /**
         * @param clientVersion The ClientVersion param.
         * 
         * @return builder
         * 
         */
        public Builder clientVersion(HipObjectHostInfoCriteriaClientVersionArgs clientVersion) {
            return clientVersion(Output.of(clientVersion));
        }

        /**
         * @param domain The Domain param.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<HipObjectHostInfoCriteriaDomainArgs> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The Domain param.
         * 
         * @return builder
         * 
         */
        public Builder domain(HipObjectHostInfoCriteriaDomainArgs domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param hostId The HostId param.
         * 
         * @return builder
         * 
         */
        public Builder hostId(@Nullable Output<HipObjectHostInfoCriteriaHostIdArgs> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId The HostId param.
         * 
         * @return builder
         * 
         */
        public Builder hostId(HipObjectHostInfoCriteriaHostIdArgs hostId) {
            return hostId(Output.of(hostId));
        }

        /**
         * @param hostName The HostName param.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<HipObjectHostInfoCriteriaHostNameArgs> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The HostName param.
         * 
         * @return builder
         * 
         */
        public Builder hostName(HipObjectHostInfoCriteriaHostNameArgs hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param managed If device is managed.
         * 
         * @return builder
         * 
         */
        public Builder managed(@Nullable Output<Boolean> managed) {
            $.managed = managed;
            return this;
        }

        /**
         * @param managed If device is managed.
         * 
         * @return builder
         * 
         */
        public Builder managed(Boolean managed) {
            return managed(Output.of(managed));
        }

        /**
         * @param os The Os param.
         * 
         * @return builder
         * 
         */
        public Builder os(@Nullable Output<HipObjectHostInfoCriteriaOsArgs> os) {
            $.os = os;
            return this;
        }

        /**
         * @param os The Os param.
         * 
         * @return builder
         * 
         */
        public Builder os(HipObjectHostInfoCriteriaOsArgs os) {
            return os(Output.of(os));
        }

        /**
         * @param serialNumber The SerialNumber param.
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(@Nullable Output<HipObjectHostInfoCriteriaSerialNumberArgs> serialNumber) {
            $.serialNumber = serialNumber;
            return this;
        }

        /**
         * @param serialNumber The SerialNumber param.
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(HipObjectHostInfoCriteriaSerialNumberArgs serialNumber) {
            return serialNumber(Output.of(serialNumber));
        }

        public HipObjectHostInfoCriteriaArgs build() {
            return $;
        }
    }

}
