// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.inputs.ApplicationSignatureAndConditionOrConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationSignatureAndConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationSignatureAndConditionArgs Empty = new ApplicationSignatureAndConditionArgs();

    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The OrConditions param.
     * 
     */
    @Import(name="orConditions")
    private @Nullable Output<List<ApplicationSignatureAndConditionOrConditionArgs>> orConditions;

    /**
     * @return The OrConditions param.
     * 
     */
    public Optional<Output<List<ApplicationSignatureAndConditionOrConditionArgs>>> orConditions() {
        return Optional.ofNullable(this.orConditions);
    }

    private ApplicationSignatureAndConditionArgs() {}

    private ApplicationSignatureAndConditionArgs(ApplicationSignatureAndConditionArgs $) {
        this.name = $.name;
        this.orConditions = $.orConditions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationSignatureAndConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationSignatureAndConditionArgs $;

        public Builder() {
            $ = new ApplicationSignatureAndConditionArgs();
        }

        public Builder(ApplicationSignatureAndConditionArgs defaults) {
            $ = new ApplicationSignatureAndConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orConditions The OrConditions param.
         * 
         * @return builder
         * 
         */
        public Builder orConditions(@Nullable Output<List<ApplicationSignatureAndConditionOrConditionArgs>> orConditions) {
            $.orConditions = orConditions;
            return this;
        }

        /**
         * @param orConditions The OrConditions param.
         * 
         * @return builder
         * 
         */
        public Builder orConditions(List<ApplicationSignatureAndConditionOrConditionArgs> orConditions) {
            return orConditions(Output.of(orConditions));
        }

        /**
         * @param orConditions The OrConditions param.
         * 
         * @return builder
         * 
         */
        public Builder orConditions(ApplicationSignatureAndConditionOrConditionArgs... orConditions) {
            return orConditions(List.of(orConditions));
        }

        public ApplicationSignatureAndConditionArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ApplicationSignatureAndConditionArgs", "name");
            }
            return $;
        }
    }

}
