// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch {
    /**
     * @return The Context param. String length must not exceed 127 characters.
     * 
     */
    private String context;
    /**
     * @return The Pattern param. String length must not exceed 127 characters.
     * 
     */
    private String pattern;
    /**
     * @return The Qualifiers param.
     * 
     */
    private List<GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier> qualifiers;

    private GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch() {}
    /**
     * @return The Context param. String length must not exceed 127 characters.
     * 
     */
    public String context() {
        return this.context;
    }
    /**
     * @return The Pattern param. String length must not exceed 127 characters.
     * 
     */
    public String pattern() {
        return this.pattern;
    }
    /**
     * @return The Qualifiers param.
     * 
     */
    public List<GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier> qualifiers() {
        return this.qualifiers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String context;
        private String pattern;
        private List<GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier> qualifiers;
        public Builder() {}
        public Builder(GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.pattern = defaults.pattern;
    	      this.qualifiers = defaults.qualifiers;
        }

        @CustomType.Setter
        public Builder context(String context) {
            if (context == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch", "context");
            }
            this.context = context;
            return this;
        }
        @CustomType.Setter
        public Builder pattern(String pattern) {
            if (pattern == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch", "pattern");
            }
            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder qualifiers(List<GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier> qualifiers) {
            if (qualifiers == null) {
              throw new MissingRequiredPropertyException("GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch", "qualifiers");
            }
            this.qualifiers = qualifiers;
            return this;
        }
        public Builder qualifiers(GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier... qualifiers) {
            return qualifiers(List.of(qualifiers));
        }
        public GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch build() {
            final var _resultValue = new GetApplicationSignatureAndConditionOrConditionOperatorPatternMatch();
            _resultValue.context = context;
            _resultValue.pattern = pattern;
            _resultValue.qualifiers = qualifiers;
            return _resultValue;
        }
    }
}
