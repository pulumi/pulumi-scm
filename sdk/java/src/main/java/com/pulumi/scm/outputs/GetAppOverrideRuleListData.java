// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAppOverrideRuleListData {
    /**
     * @return The Application param.
     * 
     */
    private String application;
    /**
     * @return The Description param. String length must not exceed 1024 characters.
     * 
     */
    private String description;
    /**
     * @return The Destinations param.
     * 
     */
    private List<String> destinations;
    /**
     * @return The Disabled param. Default: `false`.
     * 
     */
    private Boolean disabled;
    /**
     * @return The Froms param.
     * 
     */
    private List<String> froms;
    /**
     * @return The GroupTag param.
     * 
     */
    private String groupTag;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return The Name param. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     * 
     */
    private String name;
    /**
     * @return The NegateDestination param. Default: `false`.
     * 
     */
    private Boolean negateDestination;
    /**
     * @return The NegateSource param. Default: `false`.
     * 
     */
    private Boolean negateSource;
    /**
     * @return The Port param. Value must be between 0 and 65535.
     * 
     */
    private Integer port;
    /**
     * @return The Protocol param. String must be one of these: `&#34;tcp&#34;`, `&#34;udp&#34;`.
     * 
     */
    private String protocol;
    /**
     * @return The Sources param.
     * 
     */
    private List<String> sources;
    /**
     * @return The Tags param.
     * 
     */
    private List<String> tags;
    /**
     * @return The Tos param.
     * 
     */
    private List<String> tos;

    private GetAppOverrideRuleListData() {}
    /**
     * @return The Application param.
     * 
     */
    public String application() {
        return this.application;
    }
    /**
     * @return The Description param. String length must not exceed 1024 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Destinations param.
     * 
     */
    public List<String> destinations() {
        return this.destinations;
    }
    /**
     * @return The Disabled param. Default: `false`.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return The Froms param.
     * 
     */
    public List<String> froms() {
        return this.froms;
    }
    /**
     * @return The GroupTag param.
     * 
     */
    public String groupTag() {
        return this.groupTag;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Name param. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The NegateDestination param. Default: `false`.
     * 
     */
    public Boolean negateDestination() {
        return this.negateDestination;
    }
    /**
     * @return The NegateSource param. Default: `false`.
     * 
     */
    public Boolean negateSource() {
        return this.negateSource;
    }
    /**
     * @return The Port param. Value must be between 0 and 65535.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The Protocol param. String must be one of these: `&#34;tcp&#34;`, `&#34;udp&#34;`.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The Sources param.
     * 
     */
    public List<String> sources() {
        return this.sources;
    }
    /**
     * @return The Tags param.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The Tos param.
     * 
     */
    public List<String> tos() {
        return this.tos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppOverrideRuleListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String application;
        private String description;
        private List<String> destinations;
        private Boolean disabled;
        private List<String> froms;
        private String groupTag;
        private String id;
        private String name;
        private Boolean negateDestination;
        private Boolean negateSource;
        private Integer port;
        private String protocol;
        private List<String> sources;
        private List<String> tags;
        private List<String> tos;
        public Builder() {}
        public Builder(GetAppOverrideRuleListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.application = defaults.application;
    	      this.description = defaults.description;
    	      this.destinations = defaults.destinations;
    	      this.disabled = defaults.disabled;
    	      this.froms = defaults.froms;
    	      this.groupTag = defaults.groupTag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.negateDestination = defaults.negateDestination;
    	      this.negateSource = defaults.negateSource;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.sources = defaults.sources;
    	      this.tags = defaults.tags;
    	      this.tos = defaults.tos;
        }

        @CustomType.Setter
        public Builder application(String application) {
            if (application == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "application");
            }
            this.application = application;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinations(List<String> destinations) {
            if (destinations == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "destinations");
            }
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder froms(List<String> froms) {
            if (froms == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "froms");
            }
            this.froms = froms;
            return this;
        }
        public Builder froms(String... froms) {
            return froms(List.of(froms));
        }
        @CustomType.Setter
        public Builder groupTag(String groupTag) {
            if (groupTag == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "groupTag");
            }
            this.groupTag = groupTag;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder negateDestination(Boolean negateDestination) {
            if (negateDestination == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "negateDestination");
            }
            this.negateDestination = negateDestination;
            return this;
        }
        @CustomType.Setter
        public Builder negateSource(Boolean negateSource) {
            if (negateSource == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "negateSource");
            }
            this.negateSource = negateSource;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder sources(List<String> sources) {
            if (sources == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "sources");
            }
            this.sources = sources;
            return this;
        }
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tos(List<String> tos) {
            if (tos == null) {
              throw new MissingRequiredPropertyException("GetAppOverrideRuleListData", "tos");
            }
            this.tos = tos;
            return this;
        }
        public Builder tos(String... tos) {
            return tos(List.of(tos));
        }
        public GetAppOverrideRuleListData build() {
            final var _resultValue = new GetAppOverrideRuleListData();
            _resultValue.application = application;
            _resultValue.description = description;
            _resultValue.destinations = destinations;
            _resultValue.disabled = disabled;
            _resultValue.froms = froms;
            _resultValue.groupTag = groupTag;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.negateDestination = negateDestination;
            _resultValue.negateSource = negateSource;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.sources = sources;
            _resultValue.tags = tags;
            _resultValue.tos = tos;
            return _resultValue;
        }
    }
}
