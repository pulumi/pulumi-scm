// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity {
    /**
     * @return The GreaterEqual param. Value must be between 0 and 100000.
     * 
     */
    private Integer greaterEqual;
    /**
     * @return The GreaterThan param. Value must be between 0 and 100000.
     * 
     */
    private Integer greaterThan;
    /**
     * @return The Is param. Value must be between 0 and 100000.
     * 
     */
    private Integer is;
    /**
     * @return The IsNot param. Value must be between 0 and 100000.
     * 
     */
    private Integer isNot;
    /**
     * @return The LessEqual param. Value must be between 0 and 100000.
     * 
     */
    private Integer lessEqual;
    /**
     * @return The LessThan param. Value must be between 0 and 100000.
     * 
     */
    private Integer lessThan;

    private GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity() {}
    /**
     * @return The GreaterEqual param. Value must be between 0 and 100000.
     * 
     */
    public Integer greaterEqual() {
        return this.greaterEqual;
    }
    /**
     * @return The GreaterThan param. Value must be between 0 and 100000.
     * 
     */
    public Integer greaterThan() {
        return this.greaterThan;
    }
    /**
     * @return The Is param. Value must be between 0 and 100000.
     * 
     */
    public Integer is() {
        return this.is;
    }
    /**
     * @return The IsNot param. Value must be between 0 and 100000.
     * 
     */
    public Integer isNot() {
        return this.isNot;
    }
    /**
     * @return The LessEqual param. Value must be between 0 and 100000.
     * 
     */
    public Integer lessEqual() {
        return this.lessEqual;
    }
    /**
     * @return The LessThan param. Value must be between 0 and 100000.
     * 
     */
    public Integer lessThan() {
        return this.lessThan;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer greaterEqual;
        private Integer greaterThan;
        private Integer is;
        private Integer isNot;
        private Integer lessEqual;
        private Integer lessThan;
        public Builder() {}
        public Builder(GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.greaterEqual = defaults.greaterEqual;
    	      this.greaterThan = defaults.greaterThan;
    	      this.is = defaults.is;
    	      this.isNot = defaults.isNot;
    	      this.lessEqual = defaults.lessEqual;
    	      this.lessThan = defaults.lessThan;
        }

        @CustomType.Setter
        public Builder greaterEqual(Integer greaterEqual) {
            if (greaterEqual == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity", "greaterEqual");
            }
            this.greaterEqual = greaterEqual;
            return this;
        }
        @CustomType.Setter
        public Builder greaterThan(Integer greaterThan) {
            if (greaterThan == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity", "greaterThan");
            }
            this.greaterThan = greaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder is(Integer is) {
            if (is == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity", "is");
            }
            this.is = is;
            return this;
        }
        @CustomType.Setter
        public Builder isNot(Integer isNot) {
            if (isNot == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity", "isNot");
            }
            this.isNot = isNot;
            return this;
        }
        @CustomType.Setter
        public Builder lessEqual(Integer lessEqual) {
            if (lessEqual == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity", "lessEqual");
            }
            this.lessEqual = lessEqual;
            return this;
        }
        @CustomType.Setter
        public Builder lessThan(Integer lessThan) {
            if (lessThan == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity", "lessThan");
            }
            this.lessThan = lessThan;
            return this;
        }
        public GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity build() {
            final var _resultValue = new GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity();
            _resultValue.greaterEqual = greaterEqual;
            _resultValue.greaterThan = greaterThan;
            _resultValue.is = is;
            _resultValue.isNot = isNot;
            _resultValue.lessEqual = lessEqual;
            _resultValue.lessThan = lessThan;
            return _resultValue;
        }
    }
}
