// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scm.CertificateProfileArgs;
import com.pulumi.scm.Utilities;
import com.pulumi.scm.inputs.CertificateProfileState;
import com.pulumi.scm.outputs.CertificateProfileCaCertificate;
import com.pulumi.scm.outputs.CertificateProfileUsernameField;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Retrieves a config item.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scm.CertificateProfile;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CertificateProfile("example");
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="scm:index/certificateProfile:CertificateProfile")
public class CertificateProfile extends com.pulumi.resources.CustomResource {
    /**
     * The BlockExpiredCert param.
     * 
     */
    @Export(name="blockExpiredCert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> blockExpiredCert;

    /**
     * @return The BlockExpiredCert param.
     * 
     */
    public Output<Optional<Boolean>> blockExpiredCert() {
        return Codegen.optional(this.blockExpiredCert);
    }
    /**
     * The BlockTimeoutCert param.
     * 
     */
    @Export(name="blockTimeoutCert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> blockTimeoutCert;

    /**
     * @return The BlockTimeoutCert param.
     * 
     */
    public Output<Optional<Boolean>> blockTimeoutCert() {
        return Codegen.optional(this.blockTimeoutCert);
    }
    /**
     * The BlockUnauthenticatedCert param.
     * 
     */
    @Export(name="blockUnauthenticatedCert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> blockUnauthenticatedCert;

    /**
     * @return The BlockUnauthenticatedCert param.
     * 
     */
    public Output<Optional<Boolean>> blockUnauthenticatedCert() {
        return Codegen.optional(this.blockUnauthenticatedCert);
    }
    /**
     * The BlockUnknownCert param.
     * 
     */
    @Export(name="blockUnknownCert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> blockUnknownCert;

    /**
     * @return The BlockUnknownCert param.
     * 
     */
    public Output<Optional<Boolean>> blockUnknownCert() {
        return Codegen.optional(this.blockUnknownCert);
    }
    /**
     * The CaCertificates param.
     * 
     */
    @Export(name="caCertificates", refs={List.class,CertificateProfileCaCertificate.class}, tree="[0,1]")
    private Output<List<CertificateProfileCaCertificate>> caCertificates;

    /**
     * @return The CaCertificates param.
     * 
     */
    public Output<List<CertificateProfileCaCertificate>> caCertificates() {
        return this.caCertificates;
    }
    /**
     * The CertStatusTimeout param.
     * 
     */
    @Export(name="certStatusTimeout", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certStatusTimeout;

    /**
     * @return The CertStatusTimeout param.
     * 
     */
    public Output<Optional<String>> certStatusTimeout() {
        return Codegen.optional(this.certStatusTimeout);
    }
    /**
     * The CrlReceiveTimeout param.
     * 
     */
    @Export(name="crlReceiveTimeout", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> crlReceiveTimeout;

    /**
     * @return The CrlReceiveTimeout param.
     * 
     */
    public Output<Optional<String>> crlReceiveTimeout() {
        return Codegen.optional(this.crlReceiveTimeout);
    }
    /**
     * The Device param.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return The Device param.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * The Domain param.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domain;

    /**
     * @return The Domain param.
     * 
     */
    public Output<Optional<String>> domain() {
        return Codegen.optional(this.domain);
    }
    /**
     * The Folder param.
     * 
     */
    @Export(name="folder", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Output<Optional<String>> folder() {
        return Codegen.optional(this.folder);
    }
    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The OcspReceiveTimeout param.
     * 
     */
    @Export(name="ocspReceiveTimeout", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ocspReceiveTimeout;

    /**
     * @return The OcspReceiveTimeout param.
     * 
     */
    public Output<Optional<String>> ocspReceiveTimeout() {
        return Codegen.optional(this.ocspReceiveTimeout);
    }
    /**
     * The Snippet param.
     * 
     */
    @Export(name="snippet", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Output<Optional<String>> snippet() {
        return Codegen.optional(this.snippet);
    }
    @Export(name="tfid", refs={String.class}, tree="[0]")
    private Output<String> tfid;

    public Output<String> tfid() {
        return this.tfid;
    }
    /**
     * The UseCrl param.
     * 
     */
    @Export(name="useCrl", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useCrl;

    /**
     * @return The UseCrl param.
     * 
     */
    public Output<Optional<Boolean>> useCrl() {
        return Codegen.optional(this.useCrl);
    }
    /**
     * The UseOcsp param.
     * 
     */
    @Export(name="useOcsp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useOcsp;

    /**
     * @return The UseOcsp param.
     * 
     */
    public Output<Optional<Boolean>> useOcsp() {
        return Codegen.optional(this.useOcsp);
    }
    /**
     * The UsernameField param.
     * 
     */
    @Export(name="usernameField", refs={CertificateProfileUsernameField.class}, tree="[0]")
    private Output</* @Nullable */ CertificateProfileUsernameField> usernameField;

    /**
     * @return The UsernameField param.
     * 
     */
    public Output<Optional<CertificateProfileUsernameField>> usernameField() {
        return Codegen.optional(this.usernameField);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CertificateProfile(String name) {
        this(name, CertificateProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CertificateProfile(String name, CertificateProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CertificateProfile(String name, CertificateProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scm:index/certificateProfile:CertificateProfile", name, args == null ? CertificateProfileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CertificateProfile(String name, Output<String> id, @Nullable CertificateProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scm:index/certificateProfile:CertificateProfile", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CertificateProfile get(String name, Output<String> id, @Nullable CertificateProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CertificateProfile(name, id, state, options);
    }
}
