// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs;
import com.pulumi.scm.inputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs;
import com.pulumi.scm.inputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs;
import com.pulumi.scm.inputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs Empty = new VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs();

    /**
     * The EqualTo param.
     * 
     */
    @Import(name="equalTo")
    private @Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs> equalTo;

    /**
     * @return The EqualTo param.
     * 
     */
    public Optional<Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs>> equalTo() {
        return Optional.ofNullable(this.equalTo);
    }

    /**
     * The GreaterThan param.
     * 
     */
    @Import(name="greaterThan")
    private @Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs> greaterThan;

    /**
     * @return The GreaterThan param.
     * 
     */
    public Optional<Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs>> greaterThan() {
        return Optional.ofNullable(this.greaterThan);
    }

    /**
     * The LessThan param.
     * 
     */
    @Import(name="lessThan")
    private @Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs> lessThan;

    /**
     * @return The LessThan param.
     * 
     */
    public Optional<Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs>> lessThan() {
        return Optional.ofNullable(this.lessThan);
    }

    /**
     * The PatternMatch param.
     * 
     */
    @Import(name="patternMatch")
    private @Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs> patternMatch;

    /**
     * @return The PatternMatch param.
     * 
     */
    public Optional<Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs>> patternMatch() {
        return Optional.ofNullable(this.patternMatch);
    }

    private VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs() {}

    private VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs $) {
        this.equalTo = $.equalTo;
        this.greaterThan = $.greaterThan;
        this.lessThan = $.lessThan;
        this.patternMatch = $.patternMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs $;

        public Builder() {
            $ = new VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs();
        }

        public Builder(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs defaults) {
            $ = new VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param equalTo The EqualTo param.
         * 
         * @return builder
         * 
         */
        public Builder equalTo(@Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs> equalTo) {
            $.equalTo = equalTo;
            return this;
        }

        /**
         * @param equalTo The EqualTo param.
         * 
         * @return builder
         * 
         */
        public Builder equalTo(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs equalTo) {
            return equalTo(Output.of(equalTo));
        }

        /**
         * @param greaterThan The GreaterThan param.
         * 
         * @return builder
         * 
         */
        public Builder greaterThan(@Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs> greaterThan) {
            $.greaterThan = greaterThan;
            return this;
        }

        /**
         * @param greaterThan The GreaterThan param.
         * 
         * @return builder
         * 
         */
        public Builder greaterThan(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs greaterThan) {
            return greaterThan(Output.of(greaterThan));
        }

        /**
         * @param lessThan The LessThan param.
         * 
         * @return builder
         * 
         */
        public Builder lessThan(@Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs> lessThan) {
            $.lessThan = lessThan;
            return this;
        }

        /**
         * @param lessThan The LessThan param.
         * 
         * @return builder
         * 
         */
        public Builder lessThan(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs lessThan) {
            return lessThan(Output.of(lessThan));
        }

        /**
         * @param patternMatch The PatternMatch param.
         * 
         * @return builder
         * 
         */
        public Builder patternMatch(@Nullable Output<VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs> patternMatch) {
            $.patternMatch = patternMatch;
            return this;
        }

        /**
         * @param patternMatch The PatternMatch param.
         * 
         * @return builder
         * 
         */
        public Builder patternMatch(VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs patternMatch) {
            return patternMatch(Output.of(patternMatch));
        }

        public VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs build() {
            return $;
        }
    }

}
