// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMfaServerMfaVendorTypeOktaAdaptiveV1 {
    /**
     * @return The OktaApiHost param.
     * 
     */
    private String oktaApiHost;
    /**
     * @return The OktaBaseuri param.
     * 
     */
    private String oktaBaseuri;
    /**
     * @return The OktaOrg param.
     * 
     */
    private String oktaOrg;
    /**
     * @return The OktaTimeout param.
     * 
     */
    private String oktaTimeout;
    /**
     * @return The OktaToken param.
     * 
     */
    private String oktaToken;

    private GetMfaServerMfaVendorTypeOktaAdaptiveV1() {}
    /**
     * @return The OktaApiHost param.
     * 
     */
    public String oktaApiHost() {
        return this.oktaApiHost;
    }
    /**
     * @return The OktaBaseuri param.
     * 
     */
    public String oktaBaseuri() {
        return this.oktaBaseuri;
    }
    /**
     * @return The OktaOrg param.
     * 
     */
    public String oktaOrg() {
        return this.oktaOrg;
    }
    /**
     * @return The OktaTimeout param.
     * 
     */
    public String oktaTimeout() {
        return this.oktaTimeout;
    }
    /**
     * @return The OktaToken param.
     * 
     */
    public String oktaToken() {
        return this.oktaToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMfaServerMfaVendorTypeOktaAdaptiveV1 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String oktaApiHost;
        private String oktaBaseuri;
        private String oktaOrg;
        private String oktaTimeout;
        private String oktaToken;
        public Builder() {}
        public Builder(GetMfaServerMfaVendorTypeOktaAdaptiveV1 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oktaApiHost = defaults.oktaApiHost;
    	      this.oktaBaseuri = defaults.oktaBaseuri;
    	      this.oktaOrg = defaults.oktaOrg;
    	      this.oktaTimeout = defaults.oktaTimeout;
    	      this.oktaToken = defaults.oktaToken;
        }

        @CustomType.Setter
        public Builder oktaApiHost(String oktaApiHost) {
            if (oktaApiHost == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeOktaAdaptiveV1", "oktaApiHost");
            }
            this.oktaApiHost = oktaApiHost;
            return this;
        }
        @CustomType.Setter
        public Builder oktaBaseuri(String oktaBaseuri) {
            if (oktaBaseuri == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeOktaAdaptiveV1", "oktaBaseuri");
            }
            this.oktaBaseuri = oktaBaseuri;
            return this;
        }
        @CustomType.Setter
        public Builder oktaOrg(String oktaOrg) {
            if (oktaOrg == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeOktaAdaptiveV1", "oktaOrg");
            }
            this.oktaOrg = oktaOrg;
            return this;
        }
        @CustomType.Setter
        public Builder oktaTimeout(String oktaTimeout) {
            if (oktaTimeout == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeOktaAdaptiveV1", "oktaTimeout");
            }
            this.oktaTimeout = oktaTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder oktaToken(String oktaToken) {
            if (oktaToken == null) {
              throw new MissingRequiredPropertyException("GetMfaServerMfaVendorTypeOktaAdaptiveV1", "oktaToken");
            }
            this.oktaToken = oktaToken;
            return this;
        }
        public GetMfaServerMfaVendorTypeOktaAdaptiveV1 build() {
            final var _resultValue = new GetMfaServerMfaVendorTypeOktaAdaptiveV1();
            _resultValue.oktaApiHost = oktaApiHost;
            _resultValue.oktaBaseuri = oktaBaseuri;
            _resultValue.oktaOrg = oktaOrg;
            _resultValue.oktaTimeout = oktaTimeout;
            _resultValue.oktaToken = oktaToken;
            return _resultValue;
        }
    }
}
