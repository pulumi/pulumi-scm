// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocation;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHipObjectDiskEncryptionCriteria {
    /**
     * @return The EncryptedLocations param.
     * 
     */
    private List<GetHipObjectDiskEncryptionCriteriaEncryptedLocation> encryptedLocations;
    /**
     * @return Is Installed. Default: `true`.
     * 
     */
    private Boolean isInstalled;

    private GetHipObjectDiskEncryptionCriteria() {}
    /**
     * @return The EncryptedLocations param.
     * 
     */
    public List<GetHipObjectDiskEncryptionCriteriaEncryptedLocation> encryptedLocations() {
        return this.encryptedLocations;
    }
    /**
     * @return Is Installed. Default: `true`.
     * 
     */
    public Boolean isInstalled() {
        return this.isInstalled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectDiskEncryptionCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetHipObjectDiskEncryptionCriteriaEncryptedLocation> encryptedLocations;
        private Boolean isInstalled;
        public Builder() {}
        public Builder(GetHipObjectDiskEncryptionCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptedLocations = defaults.encryptedLocations;
    	      this.isInstalled = defaults.isInstalled;
        }

        @CustomType.Setter
        public Builder encryptedLocations(List<GetHipObjectDiskEncryptionCriteriaEncryptedLocation> encryptedLocations) {
            if (encryptedLocations == null) {
              throw new MissingRequiredPropertyException("GetHipObjectDiskEncryptionCriteria", "encryptedLocations");
            }
            this.encryptedLocations = encryptedLocations;
            return this;
        }
        public Builder encryptedLocations(GetHipObjectDiskEncryptionCriteriaEncryptedLocation... encryptedLocations) {
            return encryptedLocations(List.of(encryptedLocations));
        }
        @CustomType.Setter
        public Builder isInstalled(Boolean isInstalled) {
            if (isInstalled == null) {
              throw new MissingRequiredPropertyException("GetHipObjectDiskEncryptionCriteria", "isInstalled");
            }
            this.isInstalled = isInstalled;
            return this;
        }
        public GetHipObjectDiskEncryptionCriteria build() {
            final var _resultValue = new GetHipObjectDiskEncryptionCriteria();
            _resultValue.encryptedLocations = encryptedLocations;
            _resultValue.isInstalled = isInstalled;
            return _resultValue;
        }
    }
}
