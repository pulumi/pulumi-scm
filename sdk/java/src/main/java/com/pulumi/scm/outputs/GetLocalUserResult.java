// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLocalUserResult {
    /**
     * @return The Disabled param.
     * 
     */
    private Boolean disabled;
    /**
     * @return The Id param.
     * 
     */
    private String id;
    /**
     * @return The Name param. String length must not exceed 31 characters.
     * 
     */
    private String name;
    /**
     * @return The Password param. String length must not exceed 63 characters.
     * 
     */
    private String password;
    private String tfid;

    private GetLocalUserResult() {}
    /**
     * @return The Disabled param.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return The Id param.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Name param. String length must not exceed 31 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Password param. String length must not exceed 63 characters.
     * 
     */
    public String password() {
        return this.password;
    }
    public String tfid() {
        return this.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocalUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disabled;
        private String id;
        private String name;
        private String password;
        private String tfid;
        public Builder() {}
        public Builder(GetLocalUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.tfid = defaults.tfid;
        }

        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetLocalUserResult", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocalUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLocalUserResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetLocalUserResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder tfid(String tfid) {
            if (tfid == null) {
              throw new MissingRequiredPropertyException("GetLocalUserResult", "tfid");
            }
            this.tfid = tfid;
            return this;
        }
        public GetLocalUserResult build() {
            final var _resultValue = new GetLocalUserResult();
            _resultValue.disabled = disabled;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.password = password;
            _resultValue.tfid = tfid;
            return _resultValue;
        }
    }
}
