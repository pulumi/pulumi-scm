// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLabelsGetbyidResponseResult {
    /**
     * @return The Description param.
     * 
     */
    private String description;
    /**
     * @return The Folders param.
     * 
     */
    private List<String> folders;
    /**
     * @return The Id param.
     * 
     */
    private String id;
    /**
     * @return The Name param.
     * 
     */
    private String name;
    /**
     * @return The Snippets param.
     * 
     */
    private List<String> snippets;
    private String tfid;

    private GetLabelsGetbyidResponseResult() {}
    /**
     * @return The Description param.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Folders param.
     * 
     */
    public List<String> folders() {
        return this.folders;
    }
    /**
     * @return The Id param.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Name param.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Snippets param.
     * 
     */
    public List<String> snippets() {
        return this.snippets;
    }
    public String tfid() {
        return this.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLabelsGetbyidResponseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private List<String> folders;
        private String id;
        private String name;
        private List<String> snippets;
        private String tfid;
        public Builder() {}
        public Builder(GetLabelsGetbyidResponseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.folders = defaults.folders;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.snippets = defaults.snippets;
    	      this.tfid = defaults.tfid;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLabelsGetbyidResponseResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder folders(List<String> folders) {
            if (folders == null) {
              throw new MissingRequiredPropertyException("GetLabelsGetbyidResponseResult", "folders");
            }
            this.folders = folders;
            return this;
        }
        public Builder folders(String... folders) {
            return folders(List.of(folders));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLabelsGetbyidResponseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLabelsGetbyidResponseResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder snippets(List<String> snippets) {
            if (snippets == null) {
              throw new MissingRequiredPropertyException("GetLabelsGetbyidResponseResult", "snippets");
            }
            this.snippets = snippets;
            return this;
        }
        public Builder snippets(String... snippets) {
            return snippets(List.of(snippets));
        }
        @CustomType.Setter
        public Builder tfid(String tfid) {
            if (tfid == null) {
              throw new MissingRequiredPropertyException("GetLabelsGetbyidResponseResult", "tfid");
            }
            this.tfid = tfid;
            return this;
        }
        public GetLabelsGetbyidResponseResult build() {
            final var _resultValue = new GetLabelsGetbyidResponseResult();
            _resultValue.description = description;
            _resultValue.folders = folders;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.snippets = snippets;
            _resultValue.tfid = tfid;
            return _resultValue;
        }
    }
}
