// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDecryptionRuleListDataType {
    /**
     * @return The SslForwardProxy param.
     * 
     */
    private Boolean sslForwardProxy;
    /**
     * @return add the certificate name for SSL inbound inspection.
     * 
     */
    private String sslInboundInspection;

    private GetDecryptionRuleListDataType() {}
    /**
     * @return The SslForwardProxy param.
     * 
     */
    public Boolean sslForwardProxy() {
        return this.sslForwardProxy;
    }
    /**
     * @return add the certificate name for SSL inbound inspection.
     * 
     */
    public String sslInboundInspection() {
        return this.sslInboundInspection;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDecryptionRuleListDataType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean sslForwardProxy;
        private String sslInboundInspection;
        public Builder() {}
        public Builder(GetDecryptionRuleListDataType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sslForwardProxy = defaults.sslForwardProxy;
    	      this.sslInboundInspection = defaults.sslInboundInspection;
        }

        @CustomType.Setter
        public Builder sslForwardProxy(Boolean sslForwardProxy) {
            if (sslForwardProxy == null) {
              throw new MissingRequiredPropertyException("GetDecryptionRuleListDataType", "sslForwardProxy");
            }
            this.sslForwardProxy = sslForwardProxy;
            return this;
        }
        @CustomType.Setter
        public Builder sslInboundInspection(String sslInboundInspection) {
            if (sslInboundInspection == null) {
              throw new MissingRequiredPropertyException("GetDecryptionRuleListDataType", "sslInboundInspection");
            }
            this.sslInboundInspection = sslInboundInspection;
            return this;
        }
        public GetDecryptionRuleListDataType build() {
            final var _resultValue = new GetDecryptionRuleListDataType();
            _resultValue.sslForwardProxy = sslForwardProxy;
            _resultValue.sslInboundInspection = sslInboundInspection;
            return _resultValue;
        }
    }
}
