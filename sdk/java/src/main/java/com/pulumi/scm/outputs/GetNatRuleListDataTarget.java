// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetNatRuleListDataTargetDevice;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNatRuleListDataTarget {
    /**
     * @return The Devices param.
     * 
     */
    private List<GetNatRuleListDataTargetDevice> devices;
    /**
     * @return The Negate param.
     * 
     */
    private Boolean negate;
    /**
     * @return The Tags param.
     * 
     */
    private List<String> tags;

    private GetNatRuleListDataTarget() {}
    /**
     * @return The Devices param.
     * 
     */
    public List<GetNatRuleListDataTargetDevice> devices() {
        return this.devices;
    }
    /**
     * @return The Negate param.
     * 
     */
    public Boolean negate() {
        return this.negate;
    }
    /**
     * @return The Tags param.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNatRuleListDataTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNatRuleListDataTargetDevice> devices;
        private Boolean negate;
        private List<String> tags;
        public Builder() {}
        public Builder(GetNatRuleListDataTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devices = defaults.devices;
    	      this.negate = defaults.negate;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder devices(List<GetNatRuleListDataTargetDevice> devices) {
            if (devices == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataTarget", "devices");
            }
            this.devices = devices;
            return this;
        }
        public Builder devices(GetNatRuleListDataTargetDevice... devices) {
            return devices(List.of(devices));
        }
        @CustomType.Setter
        public Builder negate(Boolean negate) {
            if (negate == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataTarget", "negate");
            }
            this.negate = negate;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataTarget", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetNatRuleListDataTarget build() {
            final var _resultValue = new GetNatRuleListDataTarget();
            _resultValue.devices = devices;
            _resultValue.negate = negate;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
