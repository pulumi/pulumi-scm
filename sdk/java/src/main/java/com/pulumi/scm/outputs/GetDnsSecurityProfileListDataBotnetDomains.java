// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory;
import com.pulumi.scm.outputs.GetDnsSecurityProfileListDataBotnetDomainsList;
import com.pulumi.scm.outputs.GetDnsSecurityProfileListDataBotnetDomainsSinkhole;
import com.pulumi.scm.outputs.GetDnsSecurityProfileListDataBotnetDomainsWhitelist;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDnsSecurityProfileListDataBotnetDomains {
    /**
     * @return The DnsSecurityCategories param.
     * 
     */
    private List<GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory> dnsSecurityCategories;
    /**
     * @return The Lists param.
     * 
     */
    private List<GetDnsSecurityProfileListDataBotnetDomainsList> lists;
    /**
     * @return The Sinkhole param.
     * 
     */
    private GetDnsSecurityProfileListDataBotnetDomainsSinkhole sinkhole;
    /**
     * @return The Whitelists param.
     * 
     */
    private List<GetDnsSecurityProfileListDataBotnetDomainsWhitelist> whitelists;

    private GetDnsSecurityProfileListDataBotnetDomains() {}
    /**
     * @return The DnsSecurityCategories param.
     * 
     */
    public List<GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory> dnsSecurityCategories() {
        return this.dnsSecurityCategories;
    }
    /**
     * @return The Lists param.
     * 
     */
    public List<GetDnsSecurityProfileListDataBotnetDomainsList> lists() {
        return this.lists;
    }
    /**
     * @return The Sinkhole param.
     * 
     */
    public GetDnsSecurityProfileListDataBotnetDomainsSinkhole sinkhole() {
        return this.sinkhole;
    }
    /**
     * @return The Whitelists param.
     * 
     */
    public List<GetDnsSecurityProfileListDataBotnetDomainsWhitelist> whitelists() {
        return this.whitelists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsSecurityProfileListDataBotnetDomains defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory> dnsSecurityCategories;
        private List<GetDnsSecurityProfileListDataBotnetDomainsList> lists;
        private GetDnsSecurityProfileListDataBotnetDomainsSinkhole sinkhole;
        private List<GetDnsSecurityProfileListDataBotnetDomainsWhitelist> whitelists;
        public Builder() {}
        public Builder(GetDnsSecurityProfileListDataBotnetDomains defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsSecurityCategories = defaults.dnsSecurityCategories;
    	      this.lists = defaults.lists;
    	      this.sinkhole = defaults.sinkhole;
    	      this.whitelists = defaults.whitelists;
        }

        @CustomType.Setter
        public Builder dnsSecurityCategories(List<GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory> dnsSecurityCategories) {
            if (dnsSecurityCategories == null) {
              throw new MissingRequiredPropertyException("GetDnsSecurityProfileListDataBotnetDomains", "dnsSecurityCategories");
            }
            this.dnsSecurityCategories = dnsSecurityCategories;
            return this;
        }
        public Builder dnsSecurityCategories(GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategory... dnsSecurityCategories) {
            return dnsSecurityCategories(List.of(dnsSecurityCategories));
        }
        @CustomType.Setter
        public Builder lists(List<GetDnsSecurityProfileListDataBotnetDomainsList> lists) {
            if (lists == null) {
              throw new MissingRequiredPropertyException("GetDnsSecurityProfileListDataBotnetDomains", "lists");
            }
            this.lists = lists;
            return this;
        }
        public Builder lists(GetDnsSecurityProfileListDataBotnetDomainsList... lists) {
            return lists(List.of(lists));
        }
        @CustomType.Setter
        public Builder sinkhole(GetDnsSecurityProfileListDataBotnetDomainsSinkhole sinkhole) {
            if (sinkhole == null) {
              throw new MissingRequiredPropertyException("GetDnsSecurityProfileListDataBotnetDomains", "sinkhole");
            }
            this.sinkhole = sinkhole;
            return this;
        }
        @CustomType.Setter
        public Builder whitelists(List<GetDnsSecurityProfileListDataBotnetDomainsWhitelist> whitelists) {
            if (whitelists == null) {
              throw new MissingRequiredPropertyException("GetDnsSecurityProfileListDataBotnetDomains", "whitelists");
            }
            this.whitelists = whitelists;
            return this;
        }
        public Builder whitelists(GetDnsSecurityProfileListDataBotnetDomainsWhitelist... whitelists) {
            return whitelists(List.of(whitelists));
        }
        public GetDnsSecurityProfileListDataBotnetDomains build() {
            final var _resultValue = new GetDnsSecurityProfileListDataBotnetDomains();
            _resultValue.dnsSecurityCategories = dnsSecurityCategories;
            _resultValue.lists = lists;
            _resultValue.sinkhole = sinkhole;
            _resultValue.whitelists = whitelists;
            return _resultValue;
        }
    }
}
