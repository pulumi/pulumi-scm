// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAuthenticationProfileListDataMethodSamlIdp {
    /**
     * @return The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
     * 
     */
    private String attributeNameUsergroup;
    /**
     * @return The AttributeNameUsername param. String length must be between 1 and 63 characters.
     * 
     */
    private String attributeNameUsername;
    /**
     * @return The CertificateProfile param. String length must not exceed 31 characters.
     * 
     */
    private String certificateProfile;
    /**
     * @return The EnableSingleLogout param.
     * 
     */
    private Boolean enableSingleLogout;
    /**
     * @return The RequestSigningCertificate param. String length must not exceed 64 characters.
     * 
     */
    private String requestSigningCertificate;
    /**
     * @return The ServerProfile param. String length must not exceed 63 characters.
     * 
     */
    private String serverProfile;

    private GetAuthenticationProfileListDataMethodSamlIdp() {}
    /**
     * @return The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
     * 
     */
    public String attributeNameUsergroup() {
        return this.attributeNameUsergroup;
    }
    /**
     * @return The AttributeNameUsername param. String length must be between 1 and 63 characters.
     * 
     */
    public String attributeNameUsername() {
        return this.attributeNameUsername;
    }
    /**
     * @return The CertificateProfile param. String length must not exceed 31 characters.
     * 
     */
    public String certificateProfile() {
        return this.certificateProfile;
    }
    /**
     * @return The EnableSingleLogout param.
     * 
     */
    public Boolean enableSingleLogout() {
        return this.enableSingleLogout;
    }
    /**
     * @return The RequestSigningCertificate param. String length must not exceed 64 characters.
     * 
     */
    public String requestSigningCertificate() {
        return this.requestSigningCertificate;
    }
    /**
     * @return The ServerProfile param. String length must not exceed 63 characters.
     * 
     */
    public String serverProfile() {
        return this.serverProfile;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthenticationProfileListDataMethodSamlIdp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attributeNameUsergroup;
        private String attributeNameUsername;
        private String certificateProfile;
        private Boolean enableSingleLogout;
        private String requestSigningCertificate;
        private String serverProfile;
        public Builder() {}
        public Builder(GetAuthenticationProfileListDataMethodSamlIdp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeNameUsergroup = defaults.attributeNameUsergroup;
    	      this.attributeNameUsername = defaults.attributeNameUsername;
    	      this.certificateProfile = defaults.certificateProfile;
    	      this.enableSingleLogout = defaults.enableSingleLogout;
    	      this.requestSigningCertificate = defaults.requestSigningCertificate;
    	      this.serverProfile = defaults.serverProfile;
        }

        @CustomType.Setter
        public Builder attributeNameUsergroup(String attributeNameUsergroup) {
            if (attributeNameUsergroup == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethodSamlIdp", "attributeNameUsergroup");
            }
            this.attributeNameUsergroup = attributeNameUsergroup;
            return this;
        }
        @CustomType.Setter
        public Builder attributeNameUsername(String attributeNameUsername) {
            if (attributeNameUsername == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethodSamlIdp", "attributeNameUsername");
            }
            this.attributeNameUsername = attributeNameUsername;
            return this;
        }
        @CustomType.Setter
        public Builder certificateProfile(String certificateProfile) {
            if (certificateProfile == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethodSamlIdp", "certificateProfile");
            }
            this.certificateProfile = certificateProfile;
            return this;
        }
        @CustomType.Setter
        public Builder enableSingleLogout(Boolean enableSingleLogout) {
            if (enableSingleLogout == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethodSamlIdp", "enableSingleLogout");
            }
            this.enableSingleLogout = enableSingleLogout;
            return this;
        }
        @CustomType.Setter
        public Builder requestSigningCertificate(String requestSigningCertificate) {
            if (requestSigningCertificate == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethodSamlIdp", "requestSigningCertificate");
            }
            this.requestSigningCertificate = requestSigningCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder serverProfile(String serverProfile) {
            if (serverProfile == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationProfileListDataMethodSamlIdp", "serverProfile");
            }
            this.serverProfile = serverProfile;
            return this;
        }
        public GetAuthenticationProfileListDataMethodSamlIdp build() {
            final var _resultValue = new GetAuthenticationProfileListDataMethodSamlIdp();
            _resultValue.attributeNameUsergroup = attributeNameUsergroup;
            _resultValue.attributeNameUsername = attributeNameUsername;
            _resultValue.certificateProfile = certificateProfile;
            _resultValue.enableSingleLogout = enableSingleLogout;
            _resultValue.requestSigningCertificate = requestSigningCertificate;
            _resultValue.serverProfile = serverProfile;
            return _resultValue;
        }
    }
}
