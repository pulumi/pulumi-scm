// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetNatRuleListDataSourceTranslationFallback;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNatRuleListDataSourceTranslation {
    /**
     * @return The BiDirectional param. String must be one of these: `&#34;yes&#34;`, `&#34;no&#34;`.
     * 
     */
    private String biDirectional;
    /**
     * @return The Fallback param.
     * 
     */
    private GetNatRuleListDataSourceTranslationFallback fallback;
    /**
     * @return The TranslatedAddressArray param.
     * 
     */
    private List<String> translatedAddressArrays;
    /**
     * @return The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     * 
     */
    private String translatedAddressSingle;

    private GetNatRuleListDataSourceTranslation() {}
    /**
     * @return The BiDirectional param. String must be one of these: `&#34;yes&#34;`, `&#34;no&#34;`.
     * 
     */
    public String biDirectional() {
        return this.biDirectional;
    }
    /**
     * @return The Fallback param.
     * 
     */
    public GetNatRuleListDataSourceTranslationFallback fallback() {
        return this.fallback;
    }
    /**
     * @return The TranslatedAddressArray param.
     * 
     */
    public List<String> translatedAddressArrays() {
        return this.translatedAddressArrays;
    }
    /**
     * @return The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
     * 
     */
    public String translatedAddressSingle() {
        return this.translatedAddressSingle;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNatRuleListDataSourceTranslation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String biDirectional;
        private GetNatRuleListDataSourceTranslationFallback fallback;
        private List<String> translatedAddressArrays;
        private String translatedAddressSingle;
        public Builder() {}
        public Builder(GetNatRuleListDataSourceTranslation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.biDirectional = defaults.biDirectional;
    	      this.fallback = defaults.fallback;
    	      this.translatedAddressArrays = defaults.translatedAddressArrays;
    	      this.translatedAddressSingle = defaults.translatedAddressSingle;
        }

        @CustomType.Setter
        public Builder biDirectional(String biDirectional) {
            if (biDirectional == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataSourceTranslation", "biDirectional");
            }
            this.biDirectional = biDirectional;
            return this;
        }
        @CustomType.Setter
        public Builder fallback(GetNatRuleListDataSourceTranslationFallback fallback) {
            if (fallback == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataSourceTranslation", "fallback");
            }
            this.fallback = fallback;
            return this;
        }
        @CustomType.Setter
        public Builder translatedAddressArrays(List<String> translatedAddressArrays) {
            if (translatedAddressArrays == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataSourceTranslation", "translatedAddressArrays");
            }
            this.translatedAddressArrays = translatedAddressArrays;
            return this;
        }
        public Builder translatedAddressArrays(String... translatedAddressArrays) {
            return translatedAddressArrays(List.of(translatedAddressArrays));
        }
        @CustomType.Setter
        public Builder translatedAddressSingle(String translatedAddressSingle) {
            if (translatedAddressSingle == null) {
              throw new MissingRequiredPropertyException("GetNatRuleListDataSourceTranslation", "translatedAddressSingle");
            }
            this.translatedAddressSingle = translatedAddressSingle;
            return this;
        }
        public GetNatRuleListDataSourceTranslation build() {
            final var _resultValue = new GetNatRuleListDataSourceTranslation();
            _resultValue.biDirectional = biDirectional;
            _resultValue.fallback = fallback;
            _resultValue.translatedAddressArrays = translatedAddressArrays;
            _resultValue.translatedAddressSingle = translatedAddressSingle;
            return _resultValue;
        }
    }
}
