// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scm.outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo;
import com.pulumi.scm.outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan;
import com.pulumi.scm.outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan;
import com.pulumi.scm.outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator {
    /**
     * @return The EqualTo param.
     * 
     */
    private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo equalTo;
    /**
     * @return The GreaterThan param.
     * 
     */
    private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan greaterThan;
    /**
     * @return The LessThan param.
     * 
     */
    private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan lessThan;
    /**
     * @return The PatternMatch param.
     * 
     */
    private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch patternMatch;

    private AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator() {}
    /**
     * @return The EqualTo param.
     * 
     */
    public Optional<AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo> equalTo() {
        return Optional.ofNullable(this.equalTo);
    }
    /**
     * @return The GreaterThan param.
     * 
     */
    public Optional<AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan> greaterThan() {
        return Optional.ofNullable(this.greaterThan);
    }
    /**
     * @return The LessThan param.
     * 
     */
    public Optional<AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan> lessThan() {
        return Optional.ofNullable(this.lessThan);
    }
    /**
     * @return The PatternMatch param.
     * 
     */
    public Optional<AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch> patternMatch() {
        return Optional.ofNullable(this.patternMatch);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo equalTo;
        private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan greaterThan;
        private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan lessThan;
        private @Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch patternMatch;
        public Builder() {}
        public Builder(AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.equalTo = defaults.equalTo;
    	      this.greaterThan = defaults.greaterThan;
    	      this.lessThan = defaults.lessThan;
    	      this.patternMatch = defaults.patternMatch;
        }

        @CustomType.Setter
        public Builder equalTo(@Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo equalTo) {

            this.equalTo = equalTo;
            return this;
        }
        @CustomType.Setter
        public Builder greaterThan(@Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan greaterThan) {

            this.greaterThan = greaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder lessThan(@Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan lessThan) {

            this.lessThan = lessThan;
            return this;
        }
        @CustomType.Setter
        public Builder patternMatch(@Nullable AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch patternMatch) {

            this.patternMatch = patternMatch;
            return this;
        }
        public AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator build() {
            final var _resultValue = new AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator();
            _resultValue.equalTo = equalTo;
            _resultValue.greaterThan = greaterThan;
            _resultValue.lessThan = lessThan;
            _resultValue.patternMatch = patternMatch;
            return _resultValue;
        }
    }
}
