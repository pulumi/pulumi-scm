// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.HipObjectDiskBackupCriteriaLastBackupTimeArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HipObjectDiskBackupCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final HipObjectDiskBackupCriteriaArgs Empty = new HipObjectDiskBackupCriteriaArgs();

    /**
     * Is Installed. Default: `true`.
     * 
     */
    @Import(name="isInstalled")
    private @Nullable Output<Boolean> isInstalled;

    /**
     * @return Is Installed. Default: `true`.
     * 
     */
    public Optional<Output<Boolean>> isInstalled() {
        return Optional.ofNullable(this.isInstalled);
    }

    /**
     * The LastBackupTime param.
     * 
     */
    @Import(name="lastBackupTime")
    private @Nullable Output<HipObjectDiskBackupCriteriaLastBackupTimeArgs> lastBackupTime;

    /**
     * @return The LastBackupTime param.
     * 
     */
    public Optional<Output<HipObjectDiskBackupCriteriaLastBackupTimeArgs>> lastBackupTime() {
        return Optional.ofNullable(this.lastBackupTime);
    }

    private HipObjectDiskBackupCriteriaArgs() {}

    private HipObjectDiskBackupCriteriaArgs(HipObjectDiskBackupCriteriaArgs $) {
        this.isInstalled = $.isInstalled;
        this.lastBackupTime = $.lastBackupTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HipObjectDiskBackupCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HipObjectDiskBackupCriteriaArgs $;

        public Builder() {
            $ = new HipObjectDiskBackupCriteriaArgs();
        }

        public Builder(HipObjectDiskBackupCriteriaArgs defaults) {
            $ = new HipObjectDiskBackupCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isInstalled Is Installed. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder isInstalled(@Nullable Output<Boolean> isInstalled) {
            $.isInstalled = isInstalled;
            return this;
        }

        /**
         * @param isInstalled Is Installed. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder isInstalled(Boolean isInstalled) {
            return isInstalled(Output.of(isInstalled));
        }

        /**
         * @param lastBackupTime The LastBackupTime param.
         * 
         * @return builder
         * 
         */
        public Builder lastBackupTime(@Nullable Output<HipObjectDiskBackupCriteriaLastBackupTimeArgs> lastBackupTime) {
            $.lastBackupTime = lastBackupTime;
            return this;
        }

        /**
         * @param lastBackupTime The LastBackupTime param.
         * 
         * @return builder
         * 
         */
        public Builder lastBackupTime(HipObjectDiskBackupCriteriaLastBackupTimeArgs lastBackupTime) {
            return lastBackupTime(Output.of(lastBackupTime));
        }

        public HipObjectDiskBackupCriteriaArgs build() {
            return $;
        }
    }

}
