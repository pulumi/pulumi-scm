// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVariableListData {
    /**
     * @return The Description param.
     * 
     */
    private String description;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    private String name;
    /**
     * @return The Overridden param.
     * 
     */
    private Boolean overridden;
    /**
     * @return The Type param. String must be one of these: `&#34;percent&#34;`, `&#34;count&#34;`, `&#34;ip-netmask&#34;`, `&#34;zone&#34;`, `&#34;ip-range&#34;`, `&#34;ip-wildcard&#34;`, `&#34;device-priority&#34;`, `&#34;device-id&#34;`, `&#34;egress-max&#34;`, `&#34;as-number&#34;`, `&#34;fqdn&#34;`, `&#34;port&#34;`, `&#34;link-tag&#34;`, `&#34;group-id&#34;`, `&#34;rate&#34;`, `&#34;router-id&#34;`, `&#34;qos-profile&#34;`, `&#34;timer&#34;`.
     * 
     */
    private String type;
    /**
     * @return value can accept either string or integer.
     * 
     */
    private String value;

    private GetVariableListData() {}
    /**
     * @return The Description param.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Overridden param.
     * 
     */
    public Boolean overridden() {
        return this.overridden;
    }
    /**
     * @return The Type param. String must be one of these: `&#34;percent&#34;`, `&#34;count&#34;`, `&#34;ip-netmask&#34;`, `&#34;zone&#34;`, `&#34;ip-range&#34;`, `&#34;ip-wildcard&#34;`, `&#34;device-priority&#34;`, `&#34;device-id&#34;`, `&#34;egress-max&#34;`, `&#34;as-number&#34;`, `&#34;fqdn&#34;`, `&#34;port&#34;`, `&#34;link-tag&#34;`, `&#34;group-id&#34;`, `&#34;rate&#34;`, `&#34;router-id&#34;`, `&#34;qos-profile&#34;`, `&#34;timer&#34;`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return value can accept either string or integer.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVariableListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String name;
        private Boolean overridden;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetVariableListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.overridden = defaults.overridden;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetVariableListData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVariableListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVariableListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overridden(Boolean overridden) {
            if (overridden == null) {
              throw new MissingRequiredPropertyException("GetVariableListData", "overridden");
            }
            this.overridden = overridden;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetVariableListData", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetVariableListData", "value");
            }
            this.value = value;
            return this;
        }
        public GetVariableListData build() {
            final var _resultValue = new GetVariableListData();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.overridden = overridden;
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
