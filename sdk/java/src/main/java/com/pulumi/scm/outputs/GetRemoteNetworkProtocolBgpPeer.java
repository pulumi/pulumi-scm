// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRemoteNetworkProtocolBgpPeer {
    /**
     * @return The LocalIpAddress param.
     * 
     */
    private String localIpAddress;
    /**
     * @return The PeerIpAddress param.
     * 
     */
    private String peerIpAddress;
    /**
     * @return The Secret param.
     * 
     */
    private String secret;

    private GetRemoteNetworkProtocolBgpPeer() {}
    /**
     * @return The LocalIpAddress param.
     * 
     */
    public String localIpAddress() {
        return this.localIpAddress;
    }
    /**
     * @return The PeerIpAddress param.
     * 
     */
    public String peerIpAddress() {
        return this.peerIpAddress;
    }
    /**
     * @return The Secret param.
     * 
     */
    public String secret() {
        return this.secret;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemoteNetworkProtocolBgpPeer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String localIpAddress;
        private String peerIpAddress;
        private String secret;
        public Builder() {}
        public Builder(GetRemoteNetworkProtocolBgpPeer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.localIpAddress = defaults.localIpAddress;
    	      this.peerIpAddress = defaults.peerIpAddress;
    	      this.secret = defaults.secret;
        }

        @CustomType.Setter
        public Builder localIpAddress(String localIpAddress) {
            if (localIpAddress == null) {
              throw new MissingRequiredPropertyException("GetRemoteNetworkProtocolBgpPeer", "localIpAddress");
            }
            this.localIpAddress = localIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder peerIpAddress(String peerIpAddress) {
            if (peerIpAddress == null) {
              throw new MissingRequiredPropertyException("GetRemoteNetworkProtocolBgpPeer", "peerIpAddress");
            }
            this.peerIpAddress = peerIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder secret(String secret) {
            if (secret == null) {
              throw new MissingRequiredPropertyException("GetRemoteNetworkProtocolBgpPeer", "secret");
            }
            this.secret = secret;
            return this;
        }
        public GetRemoteNetworkProtocolBgpPeer build() {
            final var _resultValue = new GetRemoteNetworkProtocolBgpPeer();
            _resultValue.localIpAddress = localIpAddress;
            _resultValue.peerIpAddress = peerIpAddress;
            _resultValue.secret = secret;
            return _resultValue;
        }
    }
}
