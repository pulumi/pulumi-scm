// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.ApplicationDefaultIdentByIcmp6TypeArgs;
import com.pulumi.scm.inputs.ApplicationDefaultIdentByIcmpTypeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationDefaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationDefaultArgs Empty = new ApplicationDefaultArgs();

    /**
     * The IdentByIcmp6Type param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    @Import(name="identByIcmp6Type")
    private @Nullable Output<ApplicationDefaultIdentByIcmp6TypeArgs> identByIcmp6Type;

    /**
     * @return The IdentByIcmp6Type param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    public Optional<Output<ApplicationDefaultIdentByIcmp6TypeArgs>> identByIcmp6Type() {
        return Optional.ofNullable(this.identByIcmp6Type);
    }

    /**
     * The IdentByIcmpType param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    @Import(name="identByIcmpType")
    private @Nullable Output<ApplicationDefaultIdentByIcmpTypeArgs> identByIcmpType;

    /**
     * @return The IdentByIcmpType param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    public Optional<Output<ApplicationDefaultIdentByIcmpTypeArgs>> identByIcmpType() {
        return Optional.ofNullable(this.identByIcmpType);
    }

    /**
     * The IdentByIpProtocol param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    @Import(name="identByIpProtocol")
    private @Nullable Output<String> identByIpProtocol;

    /**
     * @return The IdentByIpProtocol param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    public Optional<Output<String>> identByIpProtocol() {
        return Optional.ofNullable(this.identByIpProtocol);
    }

    /**
     * The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<String>> ports;

    /**
     * @return The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
     * 
     */
    public Optional<Output<List<String>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    private ApplicationDefaultArgs() {}

    private ApplicationDefaultArgs(ApplicationDefaultArgs $) {
        this.identByIcmp6Type = $.identByIcmp6Type;
        this.identByIcmpType = $.identByIcmpType;
        this.identByIpProtocol = $.identByIpProtocol;
        this.ports = $.ports;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationDefaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationDefaultArgs $;

        public Builder() {
            $ = new ApplicationDefaultArgs();
        }

        public Builder(ApplicationDefaultArgs defaults) {
            $ = new ApplicationDefaultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identByIcmp6Type The IdentByIcmp6Type param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder identByIcmp6Type(@Nullable Output<ApplicationDefaultIdentByIcmp6TypeArgs> identByIcmp6Type) {
            $.identByIcmp6Type = identByIcmp6Type;
            return this;
        }

        /**
         * @param identByIcmp6Type The IdentByIcmp6Type param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder identByIcmp6Type(ApplicationDefaultIdentByIcmp6TypeArgs identByIcmp6Type) {
            return identByIcmp6Type(Output.of(identByIcmp6Type));
        }

        /**
         * @param identByIcmpType The IdentByIcmpType param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder identByIcmpType(@Nullable Output<ApplicationDefaultIdentByIcmpTypeArgs> identByIcmpType) {
            $.identByIcmpType = identByIcmpType;
            return this;
        }

        /**
         * @param identByIcmpType The IdentByIcmpType param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder identByIcmpType(ApplicationDefaultIdentByIcmpTypeArgs identByIcmpType) {
            return identByIcmpType(Output.of(identByIcmpType));
        }

        /**
         * @param identByIpProtocol The IdentByIpProtocol param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder identByIpProtocol(@Nullable Output<String> identByIpProtocol) {
            $.identByIpProtocol = identByIpProtocol;
            return this;
        }

        /**
         * @param identByIpProtocol The IdentByIpProtocol param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder identByIpProtocol(String identByIpProtocol) {
            return identByIpProtocol(Output.of(identByIpProtocol));
        }

        /**
         * @param ports The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<String>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder ports(List<String> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
         * 
         * @return builder
         * 
         */
        public Builder ports(String... ports) {
            return ports(List.of(ports));
        }

        public ApplicationDefaultArgs build() {
            return $;
        }
    }

}
