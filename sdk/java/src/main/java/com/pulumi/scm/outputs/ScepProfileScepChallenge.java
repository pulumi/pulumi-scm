// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scm.outputs.ScepProfileScepChallengeDynamicChallenge;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScepProfileScepChallenge {
    /**
     * @return The DynamicChallenge param. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     * 
     */
    private @Nullable ScepProfileScepChallengeDynamicChallenge dynamicChallenge;
    /**
     * @return Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     * 
     */
    private @Nullable String fixed;
    /**
     * @return The None param. String must be one of these: `&#34;&#34;`. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     * 
     */
    private @Nullable String none;

    private ScepProfileScepChallenge() {}
    /**
     * @return The DynamicChallenge param. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     * 
     */
    public Optional<ScepProfileScepChallengeDynamicChallenge> dynamicChallenge() {
        return Optional.ofNullable(this.dynamicChallenge);
    }
    /**
     * @return Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     * 
     */
    public Optional<String> fixed() {
        return Optional.ofNullable(this.fixed);
    }
    /**
     * @return The None param. String must be one of these: `&#34;&#34;`. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
     * 
     */
    public Optional<String> none() {
        return Optional.ofNullable(this.none);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScepProfileScepChallenge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ScepProfileScepChallengeDynamicChallenge dynamicChallenge;
        private @Nullable String fixed;
        private @Nullable String none;
        public Builder() {}
        public Builder(ScepProfileScepChallenge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dynamicChallenge = defaults.dynamicChallenge;
    	      this.fixed = defaults.fixed;
    	      this.none = defaults.none;
        }

        @CustomType.Setter
        public Builder dynamicChallenge(@Nullable ScepProfileScepChallengeDynamicChallenge dynamicChallenge) {

            this.dynamicChallenge = dynamicChallenge;
            return this;
        }
        @CustomType.Setter
        public Builder fixed(@Nullable String fixed) {

            this.fixed = fixed;
            return this;
        }
        @CustomType.Setter
        public Builder none(@Nullable String none) {

            this.none = none;
            return this;
        }
        public ScepProfileScepChallenge build() {
            final var _resultValue = new ScepProfileScepChallenge();
            _resultValue.dynamicChallenge = dynamicChallenge;
            _resultValue.fixed = fixed;
            _resultValue.none = none;
            return _resultValue;
        }
    }
}
