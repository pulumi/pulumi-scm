// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthenticationRuleState extends com.pulumi.resources.ResourceArgs {

    public static final AuthenticationRuleState Empty = new AuthenticationRuleState();

    /**
     * the authentication profile name to apply to authentication rule.
     * 
     */
    @Import(name="authenticationEnforcement")
    private @Nullable Output<String> authenticationEnforcement;

    /**
     * @return the authentication profile name to apply to authentication rule.
     * 
     */
    public Optional<Output<String>> authenticationEnforcement() {
        return Optional.ofNullable(this.authenticationEnforcement);
    }

    /**
     * The Categories param.
     * 
     */
    @Import(name="categories")
    private @Nullable Output<List<String>> categories;

    /**
     * @return The Categories param.
     * 
     */
    public Optional<Output<List<String>>> categories() {
        return Optional.ofNullable(this.categories);
    }

    /**
     * The Description param.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Description param.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The DestinationHips param.
     * 
     */
    @Import(name="destinationHips")
    private @Nullable Output<List<String>> destinationHips;

    /**
     * @return The DestinationHips param.
     * 
     */
    public Optional<Output<List<String>>> destinationHips() {
        return Optional.ofNullable(this.destinationHips);
    }

    /**
     * The Destinations param.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<String>> destinations;

    /**
     * @return The Destinations param.
     * 
     */
    public Optional<Output<List<String>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The Disabled param. Default: `false`.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return The Disabled param. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The Froms param.
     * 
     */
    @Import(name="froms")
    private @Nullable Output<List<String>> froms;

    /**
     * @return The Froms param.
     * 
     */
    public Optional<Output<List<String>>> froms() {
        return Optional.ofNullable(this.froms);
    }

    /**
     * The GroupTag param.
     * 
     */
    @Import(name="groupTag")
    private @Nullable Output<String> groupTag;

    /**
     * @return The GroupTag param.
     * 
     */
    public Optional<Output<String>> groupTag() {
        return Optional.ofNullable(this.groupTag);
    }

    /**
     * The HipProfiles param.
     * 
     */
    @Import(name="hipProfiles")
    private @Nullable Output<List<String>> hipProfiles;

    /**
     * @return The HipProfiles param.
     * 
     */
    public Optional<Output<List<String>>> hipProfiles() {
        return Optional.ofNullable(this.hipProfiles);
    }

    /**
     * The LogAuthenticationTimeout param. Default: `false`.
     * 
     */
    @Import(name="logAuthenticationTimeout")
    private @Nullable Output<Boolean> logAuthenticationTimeout;

    /**
     * @return The LogAuthenticationTimeout param. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> logAuthenticationTimeout() {
        return Optional.ofNullable(this.logAuthenticationTimeout);
    }

    /**
     * The LogSetting param.
     * 
     */
    @Import(name="logSetting")
    private @Nullable Output<String> logSetting;

    /**
     * @return The LogSetting param.
     * 
     */
    public Optional<Output<String>> logSetting() {
        return Optional.ofNullable(this.logSetting);
    }

    /**
     * The Name param.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name param.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The NegateDestination param. Default: `false`.
     * 
     */
    @Import(name="negateDestination")
    private @Nullable Output<Boolean> negateDestination;

    /**
     * @return The NegateDestination param. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> negateDestination() {
        return Optional.ofNullable(this.negateDestination);
    }

    /**
     * The NegateSource param. Default: `false`.
     * 
     */
    @Import(name="negateSource")
    private @Nullable Output<Boolean> negateSource;

    /**
     * @return The NegateSource param. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> negateSource() {
        return Optional.ofNullable(this.negateSource);
    }

    /**
     * The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
     * 
     */
    @Import(name="position")
    private @Nullable Output<String> position;

    /**
     * @return The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
     * 
     */
    public Optional<Output<String>> position() {
        return Optional.ofNullable(this.position);
    }

    /**
     * The Services param.
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<String>> services;

    /**
     * @return The Services param.
     * 
     */
    public Optional<Output<List<String>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    /**
     * The SourceHips param.
     * 
     */
    @Import(name="sourceHips")
    private @Nullable Output<List<String>> sourceHips;

    /**
     * @return The SourceHips param.
     * 
     */
    public Optional<Output<List<String>>> sourceHips() {
        return Optional.ofNullable(this.sourceHips);
    }

    /**
     * The SourceUsers param.
     * 
     */
    @Import(name="sourceUsers")
    private @Nullable Output<List<String>> sourceUsers;

    /**
     * @return The SourceUsers param.
     * 
     */
    public Optional<Output<List<String>>> sourceUsers() {
        return Optional.ofNullable(this.sourceUsers);
    }

    /**
     * The Sources param.
     * 
     */
    @Import(name="sources")
    private @Nullable Output<List<String>> sources;

    /**
     * @return The Sources param.
     * 
     */
    public Optional<Output<List<String>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    /**
     * The Tags param.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The Tags param.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tfid")
    private @Nullable Output<String> tfid;

    public Optional<Output<String>> tfid() {
        return Optional.ofNullable(this.tfid);
    }

    /**
     * The Timeout param. Value must be between 1 and 1440.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return The Timeout param. Value must be between 1 and 1440.
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * The Tos param.
     * 
     */
    @Import(name="tos")
    private @Nullable Output<List<String>> tos;

    /**
     * @return The Tos param.
     * 
     */
    public Optional<Output<List<String>>> tos() {
        return Optional.ofNullable(this.tos);
    }

    private AuthenticationRuleState() {}

    private AuthenticationRuleState(AuthenticationRuleState $) {
        this.authenticationEnforcement = $.authenticationEnforcement;
        this.categories = $.categories;
        this.description = $.description;
        this.destinationHips = $.destinationHips;
        this.destinations = $.destinations;
        this.device = $.device;
        this.disabled = $.disabled;
        this.folder = $.folder;
        this.froms = $.froms;
        this.groupTag = $.groupTag;
        this.hipProfiles = $.hipProfiles;
        this.logAuthenticationTimeout = $.logAuthenticationTimeout;
        this.logSetting = $.logSetting;
        this.name = $.name;
        this.negateDestination = $.negateDestination;
        this.negateSource = $.negateSource;
        this.position = $.position;
        this.services = $.services;
        this.snippet = $.snippet;
        this.sourceHips = $.sourceHips;
        this.sourceUsers = $.sourceUsers;
        this.sources = $.sources;
        this.tags = $.tags;
        this.tfid = $.tfid;
        this.timeout = $.timeout;
        this.tos = $.tos;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthenticationRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthenticationRuleState $;

        public Builder() {
            $ = new AuthenticationRuleState();
        }

        public Builder(AuthenticationRuleState defaults) {
            $ = new AuthenticationRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationEnforcement the authentication profile name to apply to authentication rule.
         * 
         * @return builder
         * 
         */
        public Builder authenticationEnforcement(@Nullable Output<String> authenticationEnforcement) {
            $.authenticationEnforcement = authenticationEnforcement;
            return this;
        }

        /**
         * @param authenticationEnforcement the authentication profile name to apply to authentication rule.
         * 
         * @return builder
         * 
         */
        public Builder authenticationEnforcement(String authenticationEnforcement) {
            return authenticationEnforcement(Output.of(authenticationEnforcement));
        }

        /**
         * @param categories The Categories param.
         * 
         * @return builder
         * 
         */
        public Builder categories(@Nullable Output<List<String>> categories) {
            $.categories = categories;
            return this;
        }

        /**
         * @param categories The Categories param.
         * 
         * @return builder
         * 
         */
        public Builder categories(List<String> categories) {
            return categories(Output.of(categories));
        }

        /**
         * @param categories The Categories param.
         * 
         * @return builder
         * 
         */
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }

        /**
         * @param description The Description param.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Description param.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationHips The DestinationHips param.
         * 
         * @return builder
         * 
         */
        public Builder destinationHips(@Nullable Output<List<String>> destinationHips) {
            $.destinationHips = destinationHips;
            return this;
        }

        /**
         * @param destinationHips The DestinationHips param.
         * 
         * @return builder
         * 
         */
        public Builder destinationHips(List<String> destinationHips) {
            return destinationHips(Output.of(destinationHips));
        }

        /**
         * @param destinationHips The DestinationHips param.
         * 
         * @return builder
         * 
         */
        public Builder destinationHips(String... destinationHips) {
            return destinationHips(List.of(destinationHips));
        }

        /**
         * @param destinations The Destinations param.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<String>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations The Destinations param.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations The Destinations param.
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param disabled The Disabled param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled The Disabled param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param froms The Froms param.
         * 
         * @return builder
         * 
         */
        public Builder froms(@Nullable Output<List<String>> froms) {
            $.froms = froms;
            return this;
        }

        /**
         * @param froms The Froms param.
         * 
         * @return builder
         * 
         */
        public Builder froms(List<String> froms) {
            return froms(Output.of(froms));
        }

        /**
         * @param froms The Froms param.
         * 
         * @return builder
         * 
         */
        public Builder froms(String... froms) {
            return froms(List.of(froms));
        }

        /**
         * @param groupTag The GroupTag param.
         * 
         * @return builder
         * 
         */
        public Builder groupTag(@Nullable Output<String> groupTag) {
            $.groupTag = groupTag;
            return this;
        }

        /**
         * @param groupTag The GroupTag param.
         * 
         * @return builder
         * 
         */
        public Builder groupTag(String groupTag) {
            return groupTag(Output.of(groupTag));
        }

        /**
         * @param hipProfiles The HipProfiles param.
         * 
         * @return builder
         * 
         */
        public Builder hipProfiles(@Nullable Output<List<String>> hipProfiles) {
            $.hipProfiles = hipProfiles;
            return this;
        }

        /**
         * @param hipProfiles The HipProfiles param.
         * 
         * @return builder
         * 
         */
        public Builder hipProfiles(List<String> hipProfiles) {
            return hipProfiles(Output.of(hipProfiles));
        }

        /**
         * @param hipProfiles The HipProfiles param.
         * 
         * @return builder
         * 
         */
        public Builder hipProfiles(String... hipProfiles) {
            return hipProfiles(List.of(hipProfiles));
        }

        /**
         * @param logAuthenticationTimeout The LogAuthenticationTimeout param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder logAuthenticationTimeout(@Nullable Output<Boolean> logAuthenticationTimeout) {
            $.logAuthenticationTimeout = logAuthenticationTimeout;
            return this;
        }

        /**
         * @param logAuthenticationTimeout The LogAuthenticationTimeout param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder logAuthenticationTimeout(Boolean logAuthenticationTimeout) {
            return logAuthenticationTimeout(Output.of(logAuthenticationTimeout));
        }

        /**
         * @param logSetting The LogSetting param.
         * 
         * @return builder
         * 
         */
        public Builder logSetting(@Nullable Output<String> logSetting) {
            $.logSetting = logSetting;
            return this;
        }

        /**
         * @param logSetting The LogSetting param.
         * 
         * @return builder
         * 
         */
        public Builder logSetting(String logSetting) {
            return logSetting(Output.of(logSetting));
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name param.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param negateDestination The NegateDestination param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder negateDestination(@Nullable Output<Boolean> negateDestination) {
            $.negateDestination = negateDestination;
            return this;
        }

        /**
         * @param negateDestination The NegateDestination param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder negateDestination(Boolean negateDestination) {
            return negateDestination(Output.of(negateDestination));
        }

        /**
         * @param negateSource The NegateSource param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder negateSource(@Nullable Output<Boolean> negateSource) {
            $.negateSource = negateSource;
            return this;
        }

        /**
         * @param negateSource The NegateSource param. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder negateSource(Boolean negateSource) {
            return negateSource(Output.of(negateSource));
        }

        /**
         * @param position The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder position(@Nullable Output<String> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position The Position param. String must be one of these: `&#34;pre&#34;`, `&#34;post&#34;`. Default: `&#34;pre&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder position(String position) {
            return position(Output.of(position));
        }

        /**
         * @param services The Services param.
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<String>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services The Services param.
         * 
         * @return builder
         * 
         */
        public Builder services(List<String> services) {
            return services(Output.of(services));
        }

        /**
         * @param services The Services param.
         * 
         * @return builder
         * 
         */
        public Builder services(String... services) {
            return services(List.of(services));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        /**
         * @param sourceHips The SourceHips param.
         * 
         * @return builder
         * 
         */
        public Builder sourceHips(@Nullable Output<List<String>> sourceHips) {
            $.sourceHips = sourceHips;
            return this;
        }

        /**
         * @param sourceHips The SourceHips param.
         * 
         * @return builder
         * 
         */
        public Builder sourceHips(List<String> sourceHips) {
            return sourceHips(Output.of(sourceHips));
        }

        /**
         * @param sourceHips The SourceHips param.
         * 
         * @return builder
         * 
         */
        public Builder sourceHips(String... sourceHips) {
            return sourceHips(List.of(sourceHips));
        }

        /**
         * @param sourceUsers The SourceUsers param.
         * 
         * @return builder
         * 
         */
        public Builder sourceUsers(@Nullable Output<List<String>> sourceUsers) {
            $.sourceUsers = sourceUsers;
            return this;
        }

        /**
         * @param sourceUsers The SourceUsers param.
         * 
         * @return builder
         * 
         */
        public Builder sourceUsers(List<String> sourceUsers) {
            return sourceUsers(Output.of(sourceUsers));
        }

        /**
         * @param sourceUsers The SourceUsers param.
         * 
         * @return builder
         * 
         */
        public Builder sourceUsers(String... sourceUsers) {
            return sourceUsers(List.of(sourceUsers));
        }

        /**
         * @param sources The Sources param.
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable Output<List<String>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The Sources param.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<String> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources The Sources param.
         * 
         * @return builder
         * 
         */
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The Tags param.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder tfid(@Nullable Output<String> tfid) {
            $.tfid = tfid;
            return this;
        }

        public Builder tfid(String tfid) {
            return tfid(Output.of(tfid));
        }

        /**
         * @param timeout The Timeout param. Value must be between 1 and 1440.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout The Timeout param. Value must be between 1 and 1440.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param tos The Tos param.
         * 
         * @return builder
         * 
         */
        public Builder tos(@Nullable Output<List<String>> tos) {
            $.tos = tos;
            return this;
        }

        /**
         * @param tos The Tos param.
         * 
         * @return builder
         * 
         */
        public Builder tos(List<String> tos) {
            return tos(Output.of(tos));
        }

        /**
         * @param tos The Tos param.
         * 
         * @return builder
         * 
         */
        public Builder tos(String... tos) {
            return tos(List.of(tos));
        }

        public AuthenticationRuleState build() {
            return $;
        }
    }

}
