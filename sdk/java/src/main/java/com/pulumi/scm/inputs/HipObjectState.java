// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scm.inputs.HipObjectAntiMalwareArgs;
import com.pulumi.scm.inputs.HipObjectCertificateArgs;
import com.pulumi.scm.inputs.HipObjectCustomChecksArgs;
import com.pulumi.scm.inputs.HipObjectDataLossPreventionArgs;
import com.pulumi.scm.inputs.HipObjectDiskBackupArgs;
import com.pulumi.scm.inputs.HipObjectDiskEncryptionArgs;
import com.pulumi.scm.inputs.HipObjectFirewallArgs;
import com.pulumi.scm.inputs.HipObjectHostInfoArgs;
import com.pulumi.scm.inputs.HipObjectMobileDeviceArgs;
import com.pulumi.scm.inputs.HipObjectNetworkInfoArgs;
import com.pulumi.scm.inputs.HipObjectPatchManagementArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HipObjectState extends com.pulumi.resources.ResourceArgs {

    public static final HipObjectState Empty = new HipObjectState();

    /**
     * The AntiMalware param.
     * 
     */
    @Import(name="antiMalware")
    private @Nullable Output<HipObjectAntiMalwareArgs> antiMalware;

    /**
     * @return The AntiMalware param.
     * 
     */
    public Optional<Output<HipObjectAntiMalwareArgs>> antiMalware() {
        return Optional.ofNullable(this.antiMalware);
    }

    /**
     * The Certificate param.
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<HipObjectCertificateArgs> certificate;

    /**
     * @return The Certificate param.
     * 
     */
    public Optional<Output<HipObjectCertificateArgs>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * The CustomChecks param.
     * 
     */
    @Import(name="customChecks")
    private @Nullable Output<HipObjectCustomChecksArgs> customChecks;

    /**
     * @return The CustomChecks param.
     * 
     */
    public Optional<Output<HipObjectCustomChecksArgs>> customChecks() {
        return Optional.ofNullable(this.customChecks);
    }

    /**
     * The DataLossPrevention param.
     * 
     */
    @Import(name="dataLossPrevention")
    private @Nullable Output<HipObjectDataLossPreventionArgs> dataLossPrevention;

    /**
     * @return The DataLossPrevention param.
     * 
     */
    public Optional<Output<HipObjectDataLossPreventionArgs>> dataLossPrevention() {
        return Optional.ofNullable(this.dataLossPrevention);
    }

    /**
     * The Description param. String length must not exceed 255 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The Description param. String length must not exceed 255 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Device param.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The Device param.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * The DiskBackup param.
     * 
     */
    @Import(name="diskBackup")
    private @Nullable Output<HipObjectDiskBackupArgs> diskBackup;

    /**
     * @return The DiskBackup param.
     * 
     */
    public Optional<Output<HipObjectDiskBackupArgs>> diskBackup() {
        return Optional.ofNullable(this.diskBackup);
    }

    /**
     * The DiskEncryption param.
     * 
     */
    @Import(name="diskEncryption")
    private @Nullable Output<HipObjectDiskEncryptionArgs> diskEncryption;

    /**
     * @return The DiskEncryption param.
     * 
     */
    public Optional<Output<HipObjectDiskEncryptionArgs>> diskEncryption() {
        return Optional.ofNullable(this.diskEncryption);
    }

    /**
     * The Firewall param.
     * 
     */
    @Import(name="firewall")
    private @Nullable Output<HipObjectFirewallArgs> firewall;

    /**
     * @return The Firewall param.
     * 
     */
    public Optional<Output<HipObjectFirewallArgs>> firewall() {
        return Optional.ofNullable(this.firewall);
    }

    /**
     * The Folder param.
     * 
     */
    @Import(name="folder")
    private @Nullable Output<String> folder;

    /**
     * @return The Folder param.
     * 
     */
    public Optional<Output<String>> folder() {
        return Optional.ofNullable(this.folder);
    }

    /**
     * The HostInfo param.
     * 
     */
    @Import(name="hostInfo")
    private @Nullable Output<HipObjectHostInfoArgs> hostInfo;

    /**
     * @return The HostInfo param.
     * 
     */
    public Optional<Output<HipObjectHostInfoArgs>> hostInfo() {
        return Optional.ofNullable(this.hostInfo);
    }

    /**
     * The MobileDevice param.
     * 
     */
    @Import(name="mobileDevice")
    private @Nullable Output<HipObjectMobileDeviceArgs> mobileDevice;

    /**
     * @return The MobileDevice param.
     * 
     */
    public Optional<Output<HipObjectMobileDeviceArgs>> mobileDevice() {
        return Optional.ofNullable(this.mobileDevice);
    }

    /**
     * Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The NetworkInfo param.
     * 
     */
    @Import(name="networkInfo")
    private @Nullable Output<HipObjectNetworkInfoArgs> networkInfo;

    /**
     * @return The NetworkInfo param.
     * 
     */
    public Optional<Output<HipObjectNetworkInfoArgs>> networkInfo() {
        return Optional.ofNullable(this.networkInfo);
    }

    /**
     * The PatchManagement param.
     * 
     */
    @Import(name="patchManagement")
    private @Nullable Output<HipObjectPatchManagementArgs> patchManagement;

    /**
     * @return The PatchManagement param.
     * 
     */
    public Optional<Output<HipObjectPatchManagementArgs>> patchManagement() {
        return Optional.ofNullable(this.patchManagement);
    }

    /**
     * The Snippet param.
     * 
     */
    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    /**
     * @return The Snippet param.
     * 
     */
    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    @Import(name="tfid")
    private @Nullable Output<String> tfid;

    public Optional<Output<String>> tfid() {
        return Optional.ofNullable(this.tfid);
    }

    private HipObjectState() {}

    private HipObjectState(HipObjectState $) {
        this.antiMalware = $.antiMalware;
        this.certificate = $.certificate;
        this.customChecks = $.customChecks;
        this.dataLossPrevention = $.dataLossPrevention;
        this.description = $.description;
        this.device = $.device;
        this.diskBackup = $.diskBackup;
        this.diskEncryption = $.diskEncryption;
        this.firewall = $.firewall;
        this.folder = $.folder;
        this.hostInfo = $.hostInfo;
        this.mobileDevice = $.mobileDevice;
        this.name = $.name;
        this.networkInfo = $.networkInfo;
        this.patchManagement = $.patchManagement;
        this.snippet = $.snippet;
        this.tfid = $.tfid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HipObjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HipObjectState $;

        public Builder() {
            $ = new HipObjectState();
        }

        public Builder(HipObjectState defaults) {
            $ = new HipObjectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param antiMalware The AntiMalware param.
         * 
         * @return builder
         * 
         */
        public Builder antiMalware(@Nullable Output<HipObjectAntiMalwareArgs> antiMalware) {
            $.antiMalware = antiMalware;
            return this;
        }

        /**
         * @param antiMalware The AntiMalware param.
         * 
         * @return builder
         * 
         */
        public Builder antiMalware(HipObjectAntiMalwareArgs antiMalware) {
            return antiMalware(Output.of(antiMalware));
        }

        /**
         * @param certificate The Certificate param.
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<HipObjectCertificateArgs> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate The Certificate param.
         * 
         * @return builder
         * 
         */
        public Builder certificate(HipObjectCertificateArgs certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param customChecks The CustomChecks param.
         * 
         * @return builder
         * 
         */
        public Builder customChecks(@Nullable Output<HipObjectCustomChecksArgs> customChecks) {
            $.customChecks = customChecks;
            return this;
        }

        /**
         * @param customChecks The CustomChecks param.
         * 
         * @return builder
         * 
         */
        public Builder customChecks(HipObjectCustomChecksArgs customChecks) {
            return customChecks(Output.of(customChecks));
        }

        /**
         * @param dataLossPrevention The DataLossPrevention param.
         * 
         * @return builder
         * 
         */
        public Builder dataLossPrevention(@Nullable Output<HipObjectDataLossPreventionArgs> dataLossPrevention) {
            $.dataLossPrevention = dataLossPrevention;
            return this;
        }

        /**
         * @param dataLossPrevention The DataLossPrevention param.
         * 
         * @return builder
         * 
         */
        public Builder dataLossPrevention(HipObjectDataLossPreventionArgs dataLossPrevention) {
            return dataLossPrevention(Output.of(dataLossPrevention));
        }

        /**
         * @param description The Description param. String length must not exceed 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The Description param. String length must not exceed 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The Device param.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param diskBackup The DiskBackup param.
         * 
         * @return builder
         * 
         */
        public Builder diskBackup(@Nullable Output<HipObjectDiskBackupArgs> diskBackup) {
            $.diskBackup = diskBackup;
            return this;
        }

        /**
         * @param diskBackup The DiskBackup param.
         * 
         * @return builder
         * 
         */
        public Builder diskBackup(HipObjectDiskBackupArgs diskBackup) {
            return diskBackup(Output.of(diskBackup));
        }

        /**
         * @param diskEncryption The DiskEncryption param.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryption(@Nullable Output<HipObjectDiskEncryptionArgs> diskEncryption) {
            $.diskEncryption = diskEncryption;
            return this;
        }

        /**
         * @param diskEncryption The DiskEncryption param.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryption(HipObjectDiskEncryptionArgs diskEncryption) {
            return diskEncryption(Output.of(diskEncryption));
        }

        /**
         * @param firewall The Firewall param.
         * 
         * @return builder
         * 
         */
        public Builder firewall(@Nullable Output<HipObjectFirewallArgs> firewall) {
            $.firewall = firewall;
            return this;
        }

        /**
         * @param firewall The Firewall param.
         * 
         * @return builder
         * 
         */
        public Builder firewall(HipObjectFirewallArgs firewall) {
            return firewall(Output.of(firewall));
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(@Nullable Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The Folder param.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param hostInfo The HostInfo param.
         * 
         * @return builder
         * 
         */
        public Builder hostInfo(@Nullable Output<HipObjectHostInfoArgs> hostInfo) {
            $.hostInfo = hostInfo;
            return this;
        }

        /**
         * @param hostInfo The HostInfo param.
         * 
         * @return builder
         * 
         */
        public Builder hostInfo(HipObjectHostInfoArgs hostInfo) {
            return hostInfo(Output.of(hostInfo));
        }

        /**
         * @param mobileDevice The MobileDevice param.
         * 
         * @return builder
         * 
         */
        public Builder mobileDevice(@Nullable Output<HipObjectMobileDeviceArgs> mobileDevice) {
            $.mobileDevice = mobileDevice;
            return this;
        }

        /**
         * @param mobileDevice The MobileDevice param.
         * 
         * @return builder
         * 
         */
        public Builder mobileDevice(HipObjectMobileDeviceArgs mobileDevice) {
            return mobileDevice(Output.of(mobileDevice));
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkInfo The NetworkInfo param.
         * 
         * @return builder
         * 
         */
        public Builder networkInfo(@Nullable Output<HipObjectNetworkInfoArgs> networkInfo) {
            $.networkInfo = networkInfo;
            return this;
        }

        /**
         * @param networkInfo The NetworkInfo param.
         * 
         * @return builder
         * 
         */
        public Builder networkInfo(HipObjectNetworkInfoArgs networkInfo) {
            return networkInfo(Output.of(networkInfo));
        }

        /**
         * @param patchManagement The PatchManagement param.
         * 
         * @return builder
         * 
         */
        public Builder patchManagement(@Nullable Output<HipObjectPatchManagementArgs> patchManagement) {
            $.patchManagement = patchManagement;
            return this;
        }

        /**
         * @param patchManagement The PatchManagement param.
         * 
         * @return builder
         * 
         */
        public Builder patchManagement(HipObjectPatchManagementArgs patchManagement) {
            return patchManagement(Output.of(patchManagement));
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        /**
         * @param snippet The Snippet param.
         * 
         * @return builder
         * 
         */
        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        public Builder tfid(@Nullable Output<String> tfid) {
            $.tfid = tfid;
            return this;
        }

        public Builder tfid(String tfid) {
            return tfid(Output.of(tfid));
        }

        public HipObjectState build() {
            return $;
        }
    }

}
