// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetUrlAccessProfileListDataCredentialEnforcement;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUrlAccessProfileListData {
    /**
     * @return The Alerts param.
     * 
     */
    private List<String> alerts;
    /**
     * @return The Allows param.
     * 
     */
    private List<String> allows;
    /**
     * @return The Blocks param.
     * 
     */
    private List<String> blocks;
    /**
     * @return The CloudInlineCat param.
     * 
     */
    private Boolean cloudInlineCat;
    /**
     * @return The Continues param.
     * 
     */
    private List<String> continues;
    /**
     * @return The CredentialEnforcement param.
     * 
     */
    private GetUrlAccessProfileListDataCredentialEnforcement credentialEnforcement;
    /**
     * @return The Description param. String length must not exceed 255 characters.
     * 
     */
    private String description;
    /**
     * @return UUID of the resource.
     * 
     */
    private String id;
    /**
     * @return The LocalInlineCat param.
     * 
     */
    private Boolean localInlineCat;
    /**
     * @return The LogContainerPageOnly param. Default: `true`.
     * 
     */
    private Boolean logContainerPageOnly;
    /**
     * @return The LogHttpHdrReferer param. Default: `false`.
     * 
     */
    private Boolean logHttpHdrReferer;
    /**
     * @return The LogHttpHdrUserAgent param. Default: `false`.
     * 
     */
    private Boolean logHttpHdrUserAgent;
    /**
     * @return The LogHttpHdrXff param. Default: `false`.
     * 
     */
    private Boolean logHttpHdrXff;
    /**
     * @return The MlavCategoryExceptions param.
     * 
     */
    private List<String> mlavCategoryExceptions;
    /**
     * @return The Name param.
     * 
     */
    private String name;
    /**
     * @return The SafeSearchEnforcement param. Default: `false`.
     * 
     */
    private Boolean safeSearchEnforcement;

    private GetUrlAccessProfileListData() {}
    /**
     * @return The Alerts param.
     * 
     */
    public List<String> alerts() {
        return this.alerts;
    }
    /**
     * @return The Allows param.
     * 
     */
    public List<String> allows() {
        return this.allows;
    }
    /**
     * @return The Blocks param.
     * 
     */
    public List<String> blocks() {
        return this.blocks;
    }
    /**
     * @return The CloudInlineCat param.
     * 
     */
    public Boolean cloudInlineCat() {
        return this.cloudInlineCat;
    }
    /**
     * @return The Continues param.
     * 
     */
    public List<String> continues() {
        return this.continues;
    }
    /**
     * @return The CredentialEnforcement param.
     * 
     */
    public GetUrlAccessProfileListDataCredentialEnforcement credentialEnforcement() {
        return this.credentialEnforcement;
    }
    /**
     * @return The Description param. String length must not exceed 255 characters.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return UUID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The LocalInlineCat param.
     * 
     */
    public Boolean localInlineCat() {
        return this.localInlineCat;
    }
    /**
     * @return The LogContainerPageOnly param. Default: `true`.
     * 
     */
    public Boolean logContainerPageOnly() {
        return this.logContainerPageOnly;
    }
    /**
     * @return The LogHttpHdrReferer param. Default: `false`.
     * 
     */
    public Boolean logHttpHdrReferer() {
        return this.logHttpHdrReferer;
    }
    /**
     * @return The LogHttpHdrUserAgent param. Default: `false`.
     * 
     */
    public Boolean logHttpHdrUserAgent() {
        return this.logHttpHdrUserAgent;
    }
    /**
     * @return The LogHttpHdrXff param. Default: `false`.
     * 
     */
    public Boolean logHttpHdrXff() {
        return this.logHttpHdrXff;
    }
    /**
     * @return The MlavCategoryExceptions param.
     * 
     */
    public List<String> mlavCategoryExceptions() {
        return this.mlavCategoryExceptions;
    }
    /**
     * @return The Name param.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The SafeSearchEnforcement param. Default: `false`.
     * 
     */
    public Boolean safeSearchEnforcement() {
        return this.safeSearchEnforcement;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUrlAccessProfileListData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> alerts;
        private List<String> allows;
        private List<String> blocks;
        private Boolean cloudInlineCat;
        private List<String> continues;
        private GetUrlAccessProfileListDataCredentialEnforcement credentialEnforcement;
        private String description;
        private String id;
        private Boolean localInlineCat;
        private Boolean logContainerPageOnly;
        private Boolean logHttpHdrReferer;
        private Boolean logHttpHdrUserAgent;
        private Boolean logHttpHdrXff;
        private List<String> mlavCategoryExceptions;
        private String name;
        private Boolean safeSearchEnforcement;
        public Builder() {}
        public Builder(GetUrlAccessProfileListData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alerts = defaults.alerts;
    	      this.allows = defaults.allows;
    	      this.blocks = defaults.blocks;
    	      this.cloudInlineCat = defaults.cloudInlineCat;
    	      this.continues = defaults.continues;
    	      this.credentialEnforcement = defaults.credentialEnforcement;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.localInlineCat = defaults.localInlineCat;
    	      this.logContainerPageOnly = defaults.logContainerPageOnly;
    	      this.logHttpHdrReferer = defaults.logHttpHdrReferer;
    	      this.logHttpHdrUserAgent = defaults.logHttpHdrUserAgent;
    	      this.logHttpHdrXff = defaults.logHttpHdrXff;
    	      this.mlavCategoryExceptions = defaults.mlavCategoryExceptions;
    	      this.name = defaults.name;
    	      this.safeSearchEnforcement = defaults.safeSearchEnforcement;
        }

        @CustomType.Setter
        public Builder alerts(List<String> alerts) {
            if (alerts == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "alerts");
            }
            this.alerts = alerts;
            return this;
        }
        public Builder alerts(String... alerts) {
            return alerts(List.of(alerts));
        }
        @CustomType.Setter
        public Builder allows(List<String> allows) {
            if (allows == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "allows");
            }
            this.allows = allows;
            return this;
        }
        public Builder allows(String... allows) {
            return allows(List.of(allows));
        }
        @CustomType.Setter
        public Builder blocks(List<String> blocks) {
            if (blocks == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "blocks");
            }
            this.blocks = blocks;
            return this;
        }
        public Builder blocks(String... blocks) {
            return blocks(List.of(blocks));
        }
        @CustomType.Setter
        public Builder cloudInlineCat(Boolean cloudInlineCat) {
            if (cloudInlineCat == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "cloudInlineCat");
            }
            this.cloudInlineCat = cloudInlineCat;
            return this;
        }
        @CustomType.Setter
        public Builder continues(List<String> continues) {
            if (continues == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "continues");
            }
            this.continues = continues;
            return this;
        }
        public Builder continues(String... continues) {
            return continues(List.of(continues));
        }
        @CustomType.Setter
        public Builder credentialEnforcement(GetUrlAccessProfileListDataCredentialEnforcement credentialEnforcement) {
            if (credentialEnforcement == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "credentialEnforcement");
            }
            this.credentialEnforcement = credentialEnforcement;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder localInlineCat(Boolean localInlineCat) {
            if (localInlineCat == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "localInlineCat");
            }
            this.localInlineCat = localInlineCat;
            return this;
        }
        @CustomType.Setter
        public Builder logContainerPageOnly(Boolean logContainerPageOnly) {
            if (logContainerPageOnly == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "logContainerPageOnly");
            }
            this.logContainerPageOnly = logContainerPageOnly;
            return this;
        }
        @CustomType.Setter
        public Builder logHttpHdrReferer(Boolean logHttpHdrReferer) {
            if (logHttpHdrReferer == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "logHttpHdrReferer");
            }
            this.logHttpHdrReferer = logHttpHdrReferer;
            return this;
        }
        @CustomType.Setter
        public Builder logHttpHdrUserAgent(Boolean logHttpHdrUserAgent) {
            if (logHttpHdrUserAgent == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "logHttpHdrUserAgent");
            }
            this.logHttpHdrUserAgent = logHttpHdrUserAgent;
            return this;
        }
        @CustomType.Setter
        public Builder logHttpHdrXff(Boolean logHttpHdrXff) {
            if (logHttpHdrXff == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "logHttpHdrXff");
            }
            this.logHttpHdrXff = logHttpHdrXff;
            return this;
        }
        @CustomType.Setter
        public Builder mlavCategoryExceptions(List<String> mlavCategoryExceptions) {
            if (mlavCategoryExceptions == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "mlavCategoryExceptions");
            }
            this.mlavCategoryExceptions = mlavCategoryExceptions;
            return this;
        }
        public Builder mlavCategoryExceptions(String... mlavCategoryExceptions) {
            return mlavCategoryExceptions(List.of(mlavCategoryExceptions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder safeSearchEnforcement(Boolean safeSearchEnforcement) {
            if (safeSearchEnforcement == null) {
              throw new MissingRequiredPropertyException("GetUrlAccessProfileListData", "safeSearchEnforcement");
            }
            this.safeSearchEnforcement = safeSearchEnforcement;
            return this;
        }
        public GetUrlAccessProfileListData build() {
            final var _resultValue = new GetUrlAccessProfileListData();
            _resultValue.alerts = alerts;
            _resultValue.allows = allows;
            _resultValue.blocks = blocks;
            _resultValue.cloudInlineCat = cloudInlineCat;
            _resultValue.continues = continues;
            _resultValue.credentialEnforcement = credentialEnforcement;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.localInlineCat = localInlineCat;
            _resultValue.logContainerPageOnly = logContainerPageOnly;
            _resultValue.logHttpHdrReferer = logHttpHdrReferer;
            _resultValue.logHttpHdrUserAgent = logHttpHdrUserAgent;
            _resultValue.logHttpHdrXff = logHttpHdrXff;
            _resultValue.mlavCategoryExceptions = mlavCategoryExceptions;
            _resultValue.name = name;
            _resultValue.safeSearchEnforcement = safeSearchEnforcement;
            return _resultValue;
        }
    }
}
