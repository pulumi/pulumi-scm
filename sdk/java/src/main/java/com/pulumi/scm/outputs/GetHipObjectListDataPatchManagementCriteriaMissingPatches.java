// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.scm.outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHipObjectListDataPatchManagementCriteriaMissingPatches {
    /**
     * @return The Check param. String must be one of these: `&#34;has-any&#34;`, `&#34;has-none&#34;`, `&#34;has-all&#34;`. Default: `&#34;has-any&#34;`.
     * 
     */
    private String check;
    /**
     * @return The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     * 
     */
    private List<String> patches;
    /**
     * @return The Severity param.
     * 
     */
    private GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity severity;

    private GetHipObjectListDataPatchManagementCriteriaMissingPatches() {}
    /**
     * @return The Check param. String must be one of these: `&#34;has-any&#34;`, `&#34;has-none&#34;`, `&#34;has-all&#34;`. Default: `&#34;has-any&#34;`.
     * 
     */
    public String check() {
        return this.check;
    }
    /**
     * @return The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
     * 
     */
    public List<String> patches() {
        return this.patches;
    }
    /**
     * @return The Severity param.
     * 
     */
    public GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity severity() {
        return this.severity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHipObjectListDataPatchManagementCriteriaMissingPatches defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String check;
        private List<String> patches;
        private GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity severity;
        public Builder() {}
        public Builder(GetHipObjectListDataPatchManagementCriteriaMissingPatches defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.check = defaults.check;
    	      this.patches = defaults.patches;
    	      this.severity = defaults.severity;
        }

        @CustomType.Setter
        public Builder check(String check) {
            if (check == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatches", "check");
            }
            this.check = check;
            return this;
        }
        @CustomType.Setter
        public Builder patches(List<String> patches) {
            if (patches == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatches", "patches");
            }
            this.patches = patches;
            return this;
        }
        public Builder patches(String... patches) {
            return patches(List.of(patches));
        }
        @CustomType.Setter
        public Builder severity(GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverity severity) {
            if (severity == null) {
              throw new MissingRequiredPropertyException("GetHipObjectListDataPatchManagementCriteriaMissingPatches", "severity");
            }
            this.severity = severity;
            return this;
        }
        public GetHipObjectListDataPatchManagementCriteriaMissingPatches build() {
            final var _resultValue = new GetHipObjectListDataPatchManagementCriteriaMissingPatches();
            _resultValue.check = check;
            _resultValue.patches = patches;
            _resultValue.severity = severity;
            return _resultValue;
        }
    }
}
